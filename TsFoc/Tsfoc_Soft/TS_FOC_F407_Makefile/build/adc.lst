ARM GAS  /tmp/cccq7UgT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Core/Src/adc.c"
  20              		.section	.text.MX_ADC1_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_ADC1_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_ADC1_Init:
  28              	.LFB239:
   1:./Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:./Core/Src/adc.c **** /**
   3:./Core/Src/adc.c ****   ******************************************************************************
   4:./Core/Src/adc.c ****   * @file    adc.c
   5:./Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:./Core/Src/adc.c ****   *          of the ADC instances.
   7:./Core/Src/adc.c ****   ******************************************************************************
   8:./Core/Src/adc.c ****   * @attention
   9:./Core/Src/adc.c ****   *
  10:./Core/Src/adc.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:./Core/Src/adc.c ****   * All rights reserved.
  12:./Core/Src/adc.c ****   *
  13:./Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:./Core/Src/adc.c ****   * in the root directory of this software component.
  15:./Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:./Core/Src/adc.c ****   *
  17:./Core/Src/adc.c ****   ******************************************************************************
  18:./Core/Src/adc.c ****   */
  19:./Core/Src/adc.c **** /* USER CODE END Header */
  20:./Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:./Core/Src/adc.c **** #include "adc.h"
  22:./Core/Src/adc.c **** 
  23:./Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:./Core/Src/adc.c **** 
  25:./Core/Src/adc.c **** /* USER CODE END 0 */
  26:./Core/Src/adc.c **** 
  27:./Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:./Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:./Core/Src/adc.c **** 
  30:./Core/Src/adc.c **** /* ADC1 init function */
ARM GAS  /tmp/cccq7UgT.s 			page 2


  31:./Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:./Core/Src/adc.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  33:./Core/Src/adc.c **** 
  34:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:./Core/Src/adc.c **** 
  36:./Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:./Core/Src/adc.c **** 
  38:./Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  40              		.loc 1 38 3 view .LVU1
  41              		.loc 1 38 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0093     		str	r3, [sp]
  44 0008 0193     		str	r3, [sp, #4]
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0393     		str	r3, [sp, #12]
  39:./Core/Src/adc.c **** 
  40:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:./Core/Src/adc.c **** 
  42:./Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:./Core/Src/adc.c **** 
  44:./Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  45:./Core/Src/adc.c ****   */
  46:./Core/Src/adc.c ****   hadc1.Instance = ADC1;
  47              		.loc 1 46 3 is_stmt 1 view .LVU3
  48              		.loc 1 46 18 is_stmt 0 view .LVU4
  49 000e 3448     		ldr	r0, .L17
  50 0010 344A     		ldr	r2, .L17+4
  51 0012 0260     		str	r2, [r0]
  47:./Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  52              		.loc 1 47 3 is_stmt 1 view .LVU5
  53              		.loc 1 47 29 is_stmt 0 view .LVU6
  54 0014 4FF48032 		mov	r2, #65536
  55 0018 4260     		str	r2, [r0, #4]
  48:./Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  56              		.loc 1 48 3 is_stmt 1 view .LVU7
  57              		.loc 1 48 25 is_stmt 0 view .LVU8
  58 001a 8360     		str	r3, [r0, #8]
  49:./Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ENABLE;
  59              		.loc 1 49 3 is_stmt 1 view .LVU9
  60              		.loc 1 49 27 is_stmt 0 view .LVU10
  61 001c 0122     		movs	r2, #1
  62 001e 0261     		str	r2, [r0, #16]
  50:./Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  63              		.loc 1 50 3 is_stmt 1 view .LVU11
  64              		.loc 1 50 33 is_stmt 0 view .LVU12
  65 0020 0276     		strb	r2, [r0, #24]
ARM GAS  /tmp/cccq7UgT.s 			page 3


  51:./Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  66              		.loc 1 51 3 is_stmt 1 view .LVU13
  67              		.loc 1 51 36 is_stmt 0 view .LVU14
  68 0022 80F82030 		strb	r3, [r0, #32]
  52:./Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  69              		.loc 1 52 3 is_stmt 1 view .LVU15
  70              		.loc 1 52 35 is_stmt 0 view .LVU16
  71 0026 C362     		str	r3, [r0, #44]
  53:./Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  72              		.loc 1 53 3 is_stmt 1 view .LVU17
  73              		.loc 1 53 31 is_stmt 0 view .LVU18
  74 0028 2F49     		ldr	r1, .L17+8
  75 002a 8162     		str	r1, [r0, #40]
  54:./Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  76              		.loc 1 54 3 is_stmt 1 view .LVU19
  77              		.loc 1 54 24 is_stmt 0 view .LVU20
  78 002c C360     		str	r3, [r0, #12]
  55:./Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 6;
  79              		.loc 1 55 3 is_stmt 1 view .LVU21
  80              		.loc 1 55 30 is_stmt 0 view .LVU22
  81 002e 0623     		movs	r3, #6
  82 0030 C361     		str	r3, [r0, #28]
  56:./Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  83              		.loc 1 56 3 is_stmt 1 view .LVU23
  84              		.loc 1 56 36 is_stmt 0 view .LVU24
  85 0032 80F83020 		strb	r2, [r0, #48]
  57:./Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  86              		.loc 1 57 3 is_stmt 1 view .LVU25
  87              		.loc 1 57 27 is_stmt 0 view .LVU26
  88 0036 4261     		str	r2, [r0, #20]
  58:./Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  89              		.loc 1 58 3 is_stmt 1 view .LVU27
  90              		.loc 1 58 7 is_stmt 0 view .LVU28
  91 0038 FFF7FEFF 		bl	HAL_ADC_Init
  92              	.LVL0:
  93              		.loc 1 58 6 discriminator 1 view .LVU29
  94 003c 0028     		cmp	r0, #0
  95 003e 3AD1     		bne	.L10
  96              	.L2:
  59:./Core/Src/adc.c ****   {
  60:./Core/Src/adc.c ****     Error_Handler();
  61:./Core/Src/adc.c ****   }
  62:./Core/Src/adc.c **** 
  63:./Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  64:./Core/Src/adc.c ****   */
  65:./Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  97              		.loc 1 65 3 is_stmt 1 view .LVU30
  98              		.loc 1 65 19 is_stmt 0 view .LVU31
  99 0040 0023     		movs	r3, #0
 100 0042 0093     		str	r3, [sp]
  66:./Core/Src/adc.c ****   sConfig.Rank = 1;
 101              		.loc 1 66 3 is_stmt 1 view .LVU32
 102              		.loc 1 66 16 is_stmt 0 view .LVU33
 103 0044 0123     		movs	r3, #1
 104 0046 0193     		str	r3, [sp, #4]
  67:./Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 105              		.loc 1 67 3 is_stmt 1 view .LVU34
ARM GAS  /tmp/cccq7UgT.s 			page 4


 106              		.loc 1 67 24 is_stmt 0 view .LVU35
 107 0048 0293     		str	r3, [sp, #8]
  68:./Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 108              		.loc 1 68 3 is_stmt 1 view .LVU36
 109              		.loc 1 68 7 is_stmt 0 view .LVU37
 110 004a 6946     		mov	r1, sp
 111 004c 2448     		ldr	r0, .L17
 112 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 113              	.LVL1:
 114              		.loc 1 68 6 discriminator 1 view .LVU38
 115 0052 0028     		cmp	r0, #0
 116 0054 32D1     		bne	.L11
 117              	.L3:
  69:./Core/Src/adc.c ****   {
  70:./Core/Src/adc.c ****     Error_Handler();
  71:./Core/Src/adc.c ****   }
  72:./Core/Src/adc.c **** 
  73:./Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  74:./Core/Src/adc.c ****   */
  75:./Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 118              		.loc 1 75 3 is_stmt 1 view .LVU39
 119              		.loc 1 75 19 is_stmt 0 view .LVU40
 120 0056 0123     		movs	r3, #1
 121 0058 0093     		str	r3, [sp]
  76:./Core/Src/adc.c ****   sConfig.Rank = 2;
 122              		.loc 1 76 3 is_stmt 1 view .LVU41
 123              		.loc 1 76 16 is_stmt 0 view .LVU42
 124 005a 0223     		movs	r3, #2
 125 005c 0193     		str	r3, [sp, #4]
  77:./Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 126              		.loc 1 77 3 is_stmt 1 view .LVU43
 127              		.loc 1 77 7 is_stmt 0 view .LVU44
 128 005e 6946     		mov	r1, sp
 129 0060 1F48     		ldr	r0, .L17
 130 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 131              	.LVL2:
 132              		.loc 1 77 6 discriminator 1 view .LVU45
 133 0066 60BB     		cbnz	r0, .L12
 134              	.L4:
  78:./Core/Src/adc.c ****   {
  79:./Core/Src/adc.c ****     Error_Handler();
  80:./Core/Src/adc.c ****   }
  81:./Core/Src/adc.c **** 
  82:./Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  83:./Core/Src/adc.c ****   */
  84:./Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_2;
 135              		.loc 1 84 3 is_stmt 1 view .LVU46
 136              		.loc 1 84 19 is_stmt 0 view .LVU47
 137 0068 0223     		movs	r3, #2
 138 006a 0093     		str	r3, [sp]
  85:./Core/Src/adc.c ****   sConfig.Rank = 3;
 139              		.loc 1 85 3 is_stmt 1 view .LVU48
 140              		.loc 1 85 16 is_stmt 0 view .LVU49
 141 006c 0323     		movs	r3, #3
 142 006e 0193     		str	r3, [sp, #4]
  86:./Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 143              		.loc 1 86 3 is_stmt 1 view .LVU50
ARM GAS  /tmp/cccq7UgT.s 			page 5


 144              		.loc 1 86 7 is_stmt 0 view .LVU51
 145 0070 6946     		mov	r1, sp
 146 0072 1B48     		ldr	r0, .L17
 147 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 148              	.LVL3:
 149              		.loc 1 86 6 discriminator 1 view .LVU52
 150 0078 30BB     		cbnz	r0, .L13
 151              	.L5:
  87:./Core/Src/adc.c ****   {
  88:./Core/Src/adc.c ****     Error_Handler();
  89:./Core/Src/adc.c ****   }
  90:./Core/Src/adc.c **** 
  91:./Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  92:./Core/Src/adc.c ****   */
  93:./Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_3;
 152              		.loc 1 93 3 is_stmt 1 view .LVU53
 153              		.loc 1 93 19 is_stmt 0 view .LVU54
 154 007a 0323     		movs	r3, #3
 155 007c 0093     		str	r3, [sp]
  94:./Core/Src/adc.c ****   sConfig.Rank = 4;
 156              		.loc 1 94 3 is_stmt 1 view .LVU55
 157              		.loc 1 94 16 is_stmt 0 view .LVU56
 158 007e 0423     		movs	r3, #4
 159 0080 0193     		str	r3, [sp, #4]
  95:./Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 160              		.loc 1 95 3 is_stmt 1 view .LVU57
 161              		.loc 1 95 7 is_stmt 0 view .LVU58
 162 0082 6946     		mov	r1, sp
 163 0084 1648     		ldr	r0, .L17
 164 0086 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 165              	.LVL4:
 166              		.loc 1 95 6 discriminator 1 view .LVU59
 167 008a 00BB     		cbnz	r0, .L14
 168              	.L6:
  96:./Core/Src/adc.c ****   {
  97:./Core/Src/adc.c ****     Error_Handler();
  98:./Core/Src/adc.c ****   }
  99:./Core/Src/adc.c **** 
 100:./Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 101:./Core/Src/adc.c ****   */
 102:./Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
 169              		.loc 1 102 3 is_stmt 1 view .LVU60
 170              		.loc 1 102 19 is_stmt 0 view .LVU61
 171 008c 0423     		movs	r3, #4
 172 008e 0093     		str	r3, [sp]
 103:./Core/Src/adc.c ****   sConfig.Rank = 5;
 173              		.loc 1 103 3 is_stmt 1 view .LVU62
 174              		.loc 1 103 16 is_stmt 0 view .LVU63
 175 0090 0523     		movs	r3, #5
 176 0092 0193     		str	r3, [sp, #4]
 104:./Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 177              		.loc 1 104 3 is_stmt 1 view .LVU64
 178              		.loc 1 104 7 is_stmt 0 view .LVU65
 179 0094 6946     		mov	r1, sp
 180 0096 1248     		ldr	r0, .L17
 181 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 182              	.LVL5:
ARM GAS  /tmp/cccq7UgT.s 			page 6


 183              		.loc 1 104 6 discriminator 1 view .LVU66
 184 009c D0B9     		cbnz	r0, .L15
 185              	.L7:
 105:./Core/Src/adc.c ****   {
 106:./Core/Src/adc.c ****     Error_Handler();
 107:./Core/Src/adc.c ****   }
 108:./Core/Src/adc.c **** 
 109:./Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 110:./Core/Src/adc.c ****   */
 111:./Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_5;
 186              		.loc 1 111 3 is_stmt 1 view .LVU67
 187              		.loc 1 111 19 is_stmt 0 view .LVU68
 188 009e 0523     		movs	r3, #5
 189 00a0 0093     		str	r3, [sp]
 112:./Core/Src/adc.c ****   sConfig.Rank = 6;
 190              		.loc 1 112 3 is_stmt 1 view .LVU69
 191              		.loc 1 112 16 is_stmt 0 view .LVU70
 192 00a2 0623     		movs	r3, #6
 193 00a4 0193     		str	r3, [sp, #4]
 113:./Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 194              		.loc 1 113 3 is_stmt 1 view .LVU71
 195              		.loc 1 113 7 is_stmt 0 view .LVU72
 196 00a6 6946     		mov	r1, sp
 197 00a8 0D48     		ldr	r0, .L17
 198 00aa FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 199              	.LVL6:
 200              		.loc 1 113 6 discriminator 1 view .LVU73
 201 00ae A0B9     		cbnz	r0, .L16
 202              	.L1:
 114:./Core/Src/adc.c ****   {
 115:./Core/Src/adc.c ****     Error_Handler();
 116:./Core/Src/adc.c ****   }
 117:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 118:./Core/Src/adc.c **** 
 119:./Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 120:./Core/Src/adc.c **** 
 121:./Core/Src/adc.c **** }
 203              		.loc 1 121 1 view .LVU74
 204 00b0 05B0     		add	sp, sp, #20
 205              	.LCFI2:
 206              		.cfi_remember_state
 207              		.cfi_def_cfa_offset 4
 208              		@ sp needed
 209 00b2 5DF804FB 		ldr	pc, [sp], #4
 210              	.L10:
 211              	.LCFI3:
 212              		.cfi_restore_state
  60:./Core/Src/adc.c ****   }
 213              		.loc 1 60 5 is_stmt 1 view .LVU75
 214 00b6 FFF7FEFF 		bl	Error_Handler
 215              	.LVL7:
 216 00ba C1E7     		b	.L2
 217              	.L11:
  70:./Core/Src/adc.c ****   }
 218              		.loc 1 70 5 view .LVU76
 219 00bc FFF7FEFF 		bl	Error_Handler
 220              	.LVL8:
ARM GAS  /tmp/cccq7UgT.s 			page 7


 221 00c0 C9E7     		b	.L3
 222              	.L12:
  79:./Core/Src/adc.c ****   }
 223              		.loc 1 79 5 view .LVU77
 224 00c2 FFF7FEFF 		bl	Error_Handler
 225              	.LVL9:
 226 00c6 CFE7     		b	.L4
 227              	.L13:
  88:./Core/Src/adc.c ****   }
 228              		.loc 1 88 5 view .LVU78
 229 00c8 FFF7FEFF 		bl	Error_Handler
 230              	.LVL10:
 231 00cc D5E7     		b	.L5
 232              	.L14:
  97:./Core/Src/adc.c ****   }
 233              		.loc 1 97 5 view .LVU79
 234 00ce FFF7FEFF 		bl	Error_Handler
 235              	.LVL11:
 236 00d2 DBE7     		b	.L6
 237              	.L15:
 106:./Core/Src/adc.c ****   }
 238              		.loc 1 106 5 view .LVU80
 239 00d4 FFF7FEFF 		bl	Error_Handler
 240              	.LVL12:
 241 00d8 E1E7     		b	.L7
 242              	.L16:
 115:./Core/Src/adc.c ****   }
 243              		.loc 1 115 5 view .LVU81
 244 00da FFF7FEFF 		bl	Error_Handler
 245              	.LVL13:
 246              		.loc 1 121 1 is_stmt 0 view .LVU82
 247 00de E7E7     		b	.L1
 248              	.L18:
 249              		.align	2
 250              	.L17:
 251 00e0 00000000 		.word	hadc1
 252 00e4 00200140 		.word	1073815552
 253 00e8 0100000F 		.word	251658241
 254              		.cfi_endproc
 255              	.LFE239:
 257              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 258              		.align	1
 259              		.global	HAL_ADC_MspInit
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 264              	HAL_ADC_MspInit:
 265              	.LVL14:
 266              	.LFB240:
 122:./Core/Src/adc.c **** 
 123:./Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 124:./Core/Src/adc.c **** {
 267              		.loc 1 124 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 32
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		.loc 1 124 1 is_stmt 0 view .LVU84
ARM GAS  /tmp/cccq7UgT.s 			page 8


 272 0000 30B5     		push	{r4, r5, lr}
 273              	.LCFI4:
 274              		.cfi_def_cfa_offset 12
 275              		.cfi_offset 4, -12
 276              		.cfi_offset 5, -8
 277              		.cfi_offset 14, -4
 278 0002 89B0     		sub	sp, sp, #36
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 48
 125:./Core/Src/adc.c **** 
 126:./Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 281              		.loc 1 126 3 is_stmt 1 view .LVU85
 282              		.loc 1 126 20 is_stmt 0 view .LVU86
 283 0004 0023     		movs	r3, #0
 284 0006 0393     		str	r3, [sp, #12]
 285 0008 0493     		str	r3, [sp, #16]
 286 000a 0593     		str	r3, [sp, #20]
 287 000c 0693     		str	r3, [sp, #24]
 288 000e 0793     		str	r3, [sp, #28]
 127:./Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 289              		.loc 1 127 3 is_stmt 1 view .LVU87
 290              		.loc 1 127 15 is_stmt 0 view .LVU88
 291 0010 0268     		ldr	r2, [r0]
 292              		.loc 1 127 5 view .LVU89
 293 0012 03F18043 		add	r3, r3, #1073741824
 294 0016 03F59033 		add	r3, r3, #73728
 295 001a 9A42     		cmp	r2, r3
 296 001c 01D0     		beq	.L23
 297              	.LVL15:
 298              	.L19:
 128:./Core/Src/adc.c ****   {
 129:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 130:./Core/Src/adc.c **** 
 131:./Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 132:./Core/Src/adc.c ****     /* ADC1 clock enable */
 133:./Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 134:./Core/Src/adc.c **** 
 135:./Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 136:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 137:./Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 138:./Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 139:./Core/Src/adc.c ****     PA2     ------> ADC1_IN2
 140:./Core/Src/adc.c ****     PA3     ------> ADC1_IN3
 141:./Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 142:./Core/Src/adc.c ****     PA5     ------> ADC1_IN5
 143:./Core/Src/adc.c ****     */
 144:./Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 145:./Core/Src/adc.c ****                           |GPIO_PIN_4|GPIO_PIN_5;
 146:./Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 147:./Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 148:./Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 149:./Core/Src/adc.c **** 
 150:./Core/Src/adc.c ****     /* ADC1 DMA Init */
 151:./Core/Src/adc.c ****     /* ADC1 Init */
 152:./Core/Src/adc.c ****     hdma_adc1.Instance = DMA2_Stream4;
 153:./Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 154:./Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
ARM GAS  /tmp/cccq7UgT.s 			page 9


 155:./Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 156:./Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 157:./Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 158:./Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 159:./Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 160:./Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_MEDIUM;
 161:./Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 162:./Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 163:./Core/Src/adc.c ****     {
 164:./Core/Src/adc.c ****       Error_Handler();
 165:./Core/Src/adc.c ****     }
 166:./Core/Src/adc.c **** 
 167:./Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 168:./Core/Src/adc.c **** 
 169:./Core/Src/adc.c ****     /* ADC1 interrupt Init */
 170:./Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 171:./Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 172:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 173:./Core/Src/adc.c **** 
 174:./Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 175:./Core/Src/adc.c ****   }
 176:./Core/Src/adc.c **** }
 299              		.loc 1 176 1 view .LVU90
 300 001e 09B0     		add	sp, sp, #36
 301              	.LCFI6:
 302              		.cfi_remember_state
 303              		.cfi_def_cfa_offset 12
 304              		@ sp needed
 305 0020 30BD     		pop	{r4, r5, pc}
 306              	.LVL16:
 307              	.L23:
 308              	.LCFI7:
 309              		.cfi_restore_state
 310              		.loc 1 176 1 view .LVU91
 311 0022 0446     		mov	r4, r0
 133:./Core/Src/adc.c **** 
 312              		.loc 1 133 5 is_stmt 1 view .LVU92
 313              	.LBB2:
 133:./Core/Src/adc.c **** 
 314              		.loc 1 133 5 view .LVU93
 315 0024 0025     		movs	r5, #0
 316 0026 0195     		str	r5, [sp, #4]
 133:./Core/Src/adc.c **** 
 317              		.loc 1 133 5 view .LVU94
 318 0028 03F58C33 		add	r3, r3, #71680
 319 002c 5A6C     		ldr	r2, [r3, #68]
 320 002e 42F48072 		orr	r2, r2, #256
 321 0032 5A64     		str	r2, [r3, #68]
 133:./Core/Src/adc.c **** 
 322              		.loc 1 133 5 view .LVU95
 323 0034 5A6C     		ldr	r2, [r3, #68]
 324 0036 02F48072 		and	r2, r2, #256
 325 003a 0192     		str	r2, [sp, #4]
 133:./Core/Src/adc.c **** 
 326              		.loc 1 133 5 view .LVU96
 327 003c 019A     		ldr	r2, [sp, #4]
 328              	.LBE2:
ARM GAS  /tmp/cccq7UgT.s 			page 10


 133:./Core/Src/adc.c **** 
 329              		.loc 1 133 5 view .LVU97
 135:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 330              		.loc 1 135 5 view .LVU98
 331              	.LBB3:
 135:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 332              		.loc 1 135 5 view .LVU99
 333 003e 0295     		str	r5, [sp, #8]
 135:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 334              		.loc 1 135 5 view .LVU100
 335 0040 1A6B     		ldr	r2, [r3, #48]
 336 0042 42F00102 		orr	r2, r2, #1
 337 0046 1A63     		str	r2, [r3, #48]
 135:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 338              		.loc 1 135 5 view .LVU101
 339 0048 1B6B     		ldr	r3, [r3, #48]
 340 004a 03F00103 		and	r3, r3, #1
 341 004e 0293     		str	r3, [sp, #8]
 135:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 342              		.loc 1 135 5 view .LVU102
 343 0050 029B     		ldr	r3, [sp, #8]
 344              	.LBE3:
 135:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 345              		.loc 1 135 5 view .LVU103
 144:./Core/Src/adc.c ****                           |GPIO_PIN_4|GPIO_PIN_5;
 346              		.loc 1 144 5 view .LVU104
 144:./Core/Src/adc.c ****                           |GPIO_PIN_4|GPIO_PIN_5;
 347              		.loc 1 144 25 is_stmt 0 view .LVU105
 348 0052 3F23     		movs	r3, #63
 349 0054 0393     		str	r3, [sp, #12]
 146:./Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 350              		.loc 1 146 5 is_stmt 1 view .LVU106
 146:./Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 351              		.loc 1 146 26 is_stmt 0 view .LVU107
 352 0056 0323     		movs	r3, #3
 353 0058 0493     		str	r3, [sp, #16]
 147:./Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 354              		.loc 1 147 5 is_stmt 1 view .LVU108
 148:./Core/Src/adc.c **** 
 355              		.loc 1 148 5 view .LVU109
 356 005a 03A9     		add	r1, sp, #12
 357 005c 1548     		ldr	r0, .L25
 358              	.LVL17:
 148:./Core/Src/adc.c **** 
 359              		.loc 1 148 5 is_stmt 0 view .LVU110
 360 005e FFF7FEFF 		bl	HAL_GPIO_Init
 361              	.LVL18:
 152:./Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 362              		.loc 1 152 5 is_stmt 1 view .LVU111
 152:./Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 363              		.loc 1 152 24 is_stmt 0 view .LVU112
 364 0062 1548     		ldr	r0, .L25+4
 365 0064 154B     		ldr	r3, .L25+8
 366 0066 0360     		str	r3, [r0]
 153:./Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 367              		.loc 1 153 5 is_stmt 1 view .LVU113
 153:./Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
ARM GAS  /tmp/cccq7UgT.s 			page 11


 368              		.loc 1 153 28 is_stmt 0 view .LVU114
 369 0068 4560     		str	r5, [r0, #4]
 154:./Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 370              		.loc 1 154 5 is_stmt 1 view .LVU115
 154:./Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 371              		.loc 1 154 30 is_stmt 0 view .LVU116
 372 006a 8560     		str	r5, [r0, #8]
 155:./Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 373              		.loc 1 155 5 is_stmt 1 view .LVU117
 155:./Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 374              		.loc 1 155 30 is_stmt 0 view .LVU118
 375 006c C560     		str	r5, [r0, #12]
 156:./Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 376              		.loc 1 156 5 is_stmt 1 view .LVU119
 156:./Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 377              		.loc 1 156 27 is_stmt 0 view .LVU120
 378 006e 4FF48063 		mov	r3, #1024
 379 0072 0361     		str	r3, [r0, #16]
 157:./Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 380              		.loc 1 157 5 is_stmt 1 view .LVU121
 157:./Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 381              		.loc 1 157 40 is_stmt 0 view .LVU122
 382 0074 4FF40063 		mov	r3, #2048
 383 0078 4361     		str	r3, [r0, #20]
 158:./Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 384              		.loc 1 158 5 is_stmt 1 view .LVU123
 158:./Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 385              		.loc 1 158 37 is_stmt 0 view .LVU124
 386 007a 4FF40053 		mov	r3, #8192
 387 007e 8361     		str	r3, [r0, #24]
 159:./Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_MEDIUM;
 388              		.loc 1 159 5 is_stmt 1 view .LVU125
 159:./Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_MEDIUM;
 389              		.loc 1 159 25 is_stmt 0 view .LVU126
 390 0080 4FF48073 		mov	r3, #256
 391 0084 C361     		str	r3, [r0, #28]
 160:./Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 392              		.loc 1 160 5 is_stmt 1 view .LVU127
 160:./Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 393              		.loc 1 160 29 is_stmt 0 view .LVU128
 394 0086 4FF48033 		mov	r3, #65536
 395 008a 0362     		str	r3, [r0, #32]
 161:./Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 396              		.loc 1 161 5 is_stmt 1 view .LVU129
 161:./Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 397              		.loc 1 161 29 is_stmt 0 view .LVU130
 398 008c 4562     		str	r5, [r0, #36]
 162:./Core/Src/adc.c ****     {
 399              		.loc 1 162 5 is_stmt 1 view .LVU131
 162:./Core/Src/adc.c ****     {
 400              		.loc 1 162 9 is_stmt 0 view .LVU132
 401 008e FFF7FEFF 		bl	HAL_DMA_Init
 402              	.LVL19:
 162:./Core/Src/adc.c ****     {
 403              		.loc 1 162 8 discriminator 1 view .LVU133
 404 0092 58B9     		cbnz	r0, .L24
 405              	.L21:
ARM GAS  /tmp/cccq7UgT.s 			page 12


 167:./Core/Src/adc.c **** 
 406              		.loc 1 167 5 is_stmt 1 view .LVU134
 167:./Core/Src/adc.c **** 
 407              		.loc 1 167 5 view .LVU135
 408 0094 084B     		ldr	r3, .L25+4
 409 0096 A363     		str	r3, [r4, #56]
 167:./Core/Src/adc.c **** 
 410              		.loc 1 167 5 view .LVU136
 411 0098 9C63     		str	r4, [r3, #56]
 167:./Core/Src/adc.c **** 
 412              		.loc 1 167 5 view .LVU137
 170:./Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 413              		.loc 1 170 5 view .LVU138
 414 009a 0022     		movs	r2, #0
 415 009c 1146     		mov	r1, r2
 416 009e 1220     		movs	r0, #18
 417 00a0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 418              	.LVL20:
 171:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 419              		.loc 1 171 5 view .LVU139
 420 00a4 1220     		movs	r0, #18
 421 00a6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 422              	.LVL21:
 423              		.loc 1 176 1 is_stmt 0 view .LVU140
 424 00aa B8E7     		b	.L19
 425              	.L24:
 164:./Core/Src/adc.c ****     }
 426              		.loc 1 164 7 is_stmt 1 view .LVU141
 427 00ac FFF7FEFF 		bl	Error_Handler
 428              	.LVL22:
 429 00b0 F0E7     		b	.L21
 430              	.L26:
 431 00b2 00BF     		.align	2
 432              	.L25:
 433 00b4 00000240 		.word	1073872896
 434 00b8 00000000 		.word	hdma_adc1
 435 00bc 70640240 		.word	1073898608
 436              		.cfi_endproc
 437              	.LFE240:
 439              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 440              		.align	1
 441              		.global	HAL_ADC_MspDeInit
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 446              	HAL_ADC_MspDeInit:
 447              	.LVL23:
 448              	.LFB241:
 177:./Core/Src/adc.c **** 
 178:./Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 179:./Core/Src/adc.c **** {
 449              		.loc 1 179 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 180:./Core/Src/adc.c **** 
 181:./Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
ARM GAS  /tmp/cccq7UgT.s 			page 13


 453              		.loc 1 181 3 view .LVU143
 454              		.loc 1 181 15 is_stmt 0 view .LVU144
 455 0000 0268     		ldr	r2, [r0]
 456              		.loc 1 181 5 view .LVU145
 457 0002 0B4B     		ldr	r3, .L34
 458 0004 9A42     		cmp	r2, r3
 459 0006 00D0     		beq	.L33
 460 0008 7047     		bx	lr
 461              	.L33:
 179:./Core/Src/adc.c **** 
 462              		.loc 1 179 1 view .LVU146
 463 000a 10B5     		push	{r4, lr}
 464              	.LCFI8:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 000c 0446     		mov	r4, r0
 182:./Core/Src/adc.c ****   {
 183:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 184:./Core/Src/adc.c **** 
 185:./Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 186:./Core/Src/adc.c ****     /* Peripheral clock disable */
 187:./Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 469              		.loc 1 187 5 is_stmt 1 view .LVU147
 470 000e 094A     		ldr	r2, .L34+4
 471 0010 536C     		ldr	r3, [r2, #68]
 472 0012 23F48073 		bic	r3, r3, #256
 473 0016 5364     		str	r3, [r2, #68]
 188:./Core/Src/adc.c **** 
 189:./Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 190:./Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 191:./Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 192:./Core/Src/adc.c ****     PA2     ------> ADC1_IN2
 193:./Core/Src/adc.c ****     PA3     ------> ADC1_IN3
 194:./Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 195:./Core/Src/adc.c ****     PA5     ------> ADC1_IN5
 196:./Core/Src/adc.c ****     */
 197:./Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 474              		.loc 1 197 5 view .LVU148
 475 0018 3F21     		movs	r1, #63
 476 001a 0748     		ldr	r0, .L34+8
 477              	.LVL24:
 478              		.loc 1 197 5 is_stmt 0 view .LVU149
 479 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 480              	.LVL25:
 198:./Core/Src/adc.c ****                           |GPIO_PIN_4|GPIO_PIN_5);
 199:./Core/Src/adc.c **** 
 200:./Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 201:./Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 481              		.loc 1 201 5 is_stmt 1 view .LVU150
 482 0020 A06B     		ldr	r0, [r4, #56]
 483 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 484              	.LVL26:
 202:./Core/Src/adc.c **** 
 203:./Core/Src/adc.c ****     /* ADC1 interrupt Deinit */
 204:./Core/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 485              		.loc 1 204 5 view .LVU151
ARM GAS  /tmp/cccq7UgT.s 			page 14


 486 0026 1220     		movs	r0, #18
 487 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 488              	.LVL27:
 205:./Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 206:./Core/Src/adc.c **** 
 207:./Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 208:./Core/Src/adc.c ****   }
 209:./Core/Src/adc.c **** }
 489              		.loc 1 209 1 is_stmt 0 view .LVU152
 490 002c 10BD     		pop	{r4, pc}
 491              	.LVL28:
 492              	.L35:
 493              		.loc 1 209 1 view .LVU153
 494 002e 00BF     		.align	2
 495              	.L34:
 496 0030 00200140 		.word	1073815552
 497 0034 00380240 		.word	1073887232
 498 0038 00000240 		.word	1073872896
 499              		.cfi_endproc
 500              	.LFE241:
 502              		.global	hdma_adc1
 503              		.section	.bss.hdma_adc1,"aw",%nobits
 504              		.align	2
 507              	hdma_adc1:
 508 0000 00000000 		.space	96
 508      00000000 
 508      00000000 
 508      00000000 
 508      00000000 
 509              		.global	hadc1
 510              		.section	.bss.hadc1,"aw",%nobits
 511              		.align	2
 514              	hadc1:
 515 0000 00000000 		.space	72
 515      00000000 
 515      00000000 
 515      00000000 
 515      00000000 
 516              		.text
 517              	.Letext0:
 518              		.file 2 "./Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 519              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 520              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 521              		.file 5 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 522              		.file 6 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 523              		.file 7 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 524              		.file 8 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 525              		.file 9 "./Core/Inc/adc.h"
 526              		.file 10 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 527              		.file 11 "./Core/Inc/main.h"
ARM GAS  /tmp/cccq7UgT.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
     /tmp/cccq7UgT.s:21     .text.MX_ADC1_Init:00000000 $t
     /tmp/cccq7UgT.s:27     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/cccq7UgT.s:251    .text.MX_ADC1_Init:000000e0 $d
     /tmp/cccq7UgT.s:514    .bss.hadc1:00000000 hadc1
     /tmp/cccq7UgT.s:258    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/cccq7UgT.s:264    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/cccq7UgT.s:433    .text.HAL_ADC_MspInit:000000b4 $d
     /tmp/cccq7UgT.s:507    .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/cccq7UgT.s:440    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/cccq7UgT.s:446    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/cccq7UgT.s:496    .text.HAL_ADC_MspDeInit:00000030 $d
     /tmp/cccq7UgT.s:504    .bss.hdma_adc1:00000000 $d
     /tmp/cccq7UgT.s:511    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
