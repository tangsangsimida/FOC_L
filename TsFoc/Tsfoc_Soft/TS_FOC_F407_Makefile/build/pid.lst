ARM GAS  /tmp/ccV2mITI.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"pid.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./underlying/src/pid.c"
  20              		.section	.rodata.Pid_Vel_Init.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 5069645F 		.ascii	"Pid_Vel_Init\015\000"
  23      56656C5F 
  23      496E6974 
  23      0D00
  24              		.section	.text.Pid_Vel_Init,"ax",%progbits
  25              		.align	1
  26              		.global	Pid_Vel_Init
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	Pid_Vel_Init:
  32              	.LVL0:
  33              	.LFB242:
   1:./underlying/src/pid.c **** #include "pid.h"
   2:./underlying/src/pid.c **** 
   3:./underlying/src/pid.c **** #include "stdio.h"
   4:./underlying/src/pid.c **** 
   5:./underlying/src/pid.c **** 
   6:./underlying/src/pid.c **** /// @brief PID_Vel控制器初始化
   7:./underlying/src/pid.c **** /// @param Pid 
   8:./underlying/src/pid.c **** /// @param P 
   9:./underlying/src/pid.c **** /// @param I 
  10:./underlying/src/pid.c **** /// @param D 
  11:./underlying/src/pid.c **** /// @param ramp     PID控制器加速度限幅
  12:./underlying/src/pid.c **** /// @param limit    PID控制器输出限幅
  13:./underlying/src/pid.c **** void Pid_Vel_Init(Pid_Typedef* Pid , float P, float I, float D, float ramp, float limit)
  14:./underlying/src/pid.c **** {
  34              		.loc 1 14 1 view -0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              		.loc 1 14 1 is_stmt 0 view .LVU1
  39 0000 10B5     		push	{r4, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccV2mITI.s 			page 2


  42              		.cfi_offset 4, -8
  43              		.cfi_offset 14, -4
  44 0002 0446     		mov	r4, r0
  15:./underlying/src/pid.c ****     Pid->P = P;
  45              		.loc 1 15 5 is_stmt 1 view .LVU2
  46              		.loc 1 15 12 is_stmt 0 view .LVU3
  47 0004 80ED000A 		vstr.32	s0, [r0]
  16:./underlying/src/pid.c ****     Pid->I = I;
  48              		.loc 1 16 5 is_stmt 1 view .LVU4
  49              		.loc 1 16 12 is_stmt 0 view .LVU5
  50 0008 C0ED010A 		vstr.32	s1, [r0, #4]
  17:./underlying/src/pid.c ****     Pid->D = D;
  51              		.loc 1 17 5 is_stmt 1 view .LVU6
  52              		.loc 1 17 12 is_stmt 0 view .LVU7
  53 000c 80ED021A 		vstr.32	s2, [r0, #8]
  18:./underlying/src/pid.c ****     Pid->output_ramp = ramp;                //PID控制器加速度限幅
  54              		.loc 1 18 5 is_stmt 1 view .LVU8
  55              		.loc 1 18 22 is_stmt 0 view .LVU9
  56 0010 C0ED031A 		vstr.32	s3, [r0, #12]
  19:./underlying/src/pid.c ****     Pid->limit = limit;
  57              		.loc 1 19 5 is_stmt 1 view .LVU10
  58              		.loc 1 19 16 is_stmt 0 view .LVU11
  59 0014 80ED042A 		vstr.32	s4, [r0, #16]
  20:./underlying/src/pid.c ****     Pid->timestamp_prev = HAL_GetTick();
  60              		.loc 1 20 5 is_stmt 1 view .LVU12
  61              		.loc 1 20 27 is_stmt 0 view .LVU13
  62 0018 FFF7FEFF 		bl	HAL_GetTick
  63              	.LVL1:
  64              		.loc 1 20 25 discriminator 1 view .LVU14
  65 001c 2062     		str	r0, [r4, #32]
  21:./underlying/src/pid.c ****     printf("Pid_Vel_Init\r\n");
  66              		.loc 1 21 5 is_stmt 1 view .LVU15
  67 001e 0248     		ldr	r0, .L3
  68 0020 FFF7FEFF 		bl	puts
  69              	.LVL2:
  22:./underlying/src/pid.c **** }
  70              		.loc 1 22 1 is_stmt 0 view .LVU16
  71 0024 10BD     		pop	{r4, pc}
  72              	.LVL3:
  73              	.L4:
  74              		.loc 1 22 1 view .LVU17
  75 0026 00BF     		.align	2
  76              	.L3:
  77 0028 00000000 		.word	.LC0
  78              		.cfi_endproc
  79              	.LFE242:
  81              		.section	.rodata.Pid_Ang_Init.str1.4,"aMS",%progbits,1
  82              		.align	2
  83              	.LC1:
  84 0000 5069645F 		.ascii	"Pid_Ang_Init\015\000"
  84      416E675F 
  84      496E6974 
  84      0D00
  85              		.section	.text.Pid_Ang_Init,"ax",%progbits
  86              		.align	1
  87              		.global	Pid_Ang_Init
  88              		.syntax unified
ARM GAS  /tmp/ccV2mITI.s 			page 3


  89              		.thumb
  90              		.thumb_func
  92              	Pid_Ang_Init:
  93              	.LVL4:
  94              	.LFB243:
  23:./underlying/src/pid.c **** 
  24:./underlying/src/pid.c **** /// @brief PID_Ang控制器初始化
  25:./underlying/src/pid.c **** /// @param Pid 
  26:./underlying/src/pid.c **** /// @param P 
  27:./underlying/src/pid.c **** /// @param I 
  28:./underlying/src/pid.c **** /// @param D 
  29:./underlying/src/pid.c **** /// @param ramp     PID控制器加速度限幅
  30:./underlying/src/pid.c **** /// @param limit    PID控制器输出限幅
  31:./underlying/src/pid.c **** void Pid_Ang_Init(Pid_Typedef* Pid , float P, float I, float D, float ramp, float limit)
  32:./underlying/src/pid.c **** {
  95              		.loc 1 32 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		.loc 1 32 1 is_stmt 0 view .LVU19
 100 0000 10B5     		push	{r4, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 4, -8
 104              		.cfi_offset 14, -4
 105 0002 0446     		mov	r4, r0
  33:./underlying/src/pid.c ****     Pid->P = P;
 106              		.loc 1 33 5 is_stmt 1 view .LVU20
 107              		.loc 1 33 12 is_stmt 0 view .LVU21
 108 0004 80ED000A 		vstr.32	s0, [r0]
  34:./underlying/src/pid.c ****     Pid->I = I;
 109              		.loc 1 34 5 is_stmt 1 view .LVU22
 110              		.loc 1 34 12 is_stmt 0 view .LVU23
 111 0008 C0ED010A 		vstr.32	s1, [r0, #4]
  35:./underlying/src/pid.c ****     Pid->D = D;
 112              		.loc 1 35 5 is_stmt 1 view .LVU24
 113              		.loc 1 35 12 is_stmt 0 view .LVU25
 114 000c 80ED021A 		vstr.32	s2, [r0, #8]
  36:./underlying/src/pid.c ****     Pid->output_ramp = ramp;                //PID控制器加速度限幅
 115              		.loc 1 36 5 is_stmt 1 view .LVU26
 116              		.loc 1 36 22 is_stmt 0 view .LVU27
 117 0010 C0ED031A 		vstr.32	s3, [r0, #12]
  37:./underlying/src/pid.c ****     Pid->limit = limit;
 118              		.loc 1 37 5 is_stmt 1 view .LVU28
 119              		.loc 1 37 16 is_stmt 0 view .LVU29
 120 0014 80ED042A 		vstr.32	s4, [r0, #16]
  38:./underlying/src/pid.c ****     Pid->timestamp_prev = HAL_GetTick();
 121              		.loc 1 38 5 is_stmt 1 view .LVU30
 122              		.loc 1 38 27 is_stmt 0 view .LVU31
 123 0018 FFF7FEFF 		bl	HAL_GetTick
 124              	.LVL5:
 125              		.loc 1 38 25 discriminator 1 view .LVU32
 126 001c 2062     		str	r0, [r4, #32]
  39:./underlying/src/pid.c ****     printf("Pid_Ang_Init\r\n");
 127              		.loc 1 39 5 is_stmt 1 view .LVU33
 128 001e 0248     		ldr	r0, .L7
 129 0020 FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccV2mITI.s 			page 4


 130              	.LVL6:
  40:./underlying/src/pid.c **** }
 131              		.loc 1 40 1 is_stmt 0 view .LVU34
 132 0024 10BD     		pop	{r4, pc}
 133              	.LVL7:
 134              	.L8:
 135              		.loc 1 40 1 view .LVU35
 136 0026 00BF     		.align	2
 137              	.L7:
 138 0028 00000000 		.word	.LC1
 139              		.cfi_endproc
 140              	.LFE243:
 142              		.section	.rodata.Pid_Curr_Init.str1.4,"aMS",%progbits,1
 143              		.align	2
 144              	.LC2:
 145 0000 5069645F 		.ascii	"Pid_Curr_Init\000"
 145      43757272 
 145      5F496E69 
 145      7400
 146              		.section	.text.Pid_Curr_Init,"ax",%progbits
 147              		.align	1
 148              		.global	Pid_Curr_Init
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	Pid_Curr_Init:
 154              	.LVL8:
 155              	.LFB244:
  41:./underlying/src/pid.c **** 
  42:./underlying/src/pid.c **** /// @brief PID_Curr控制器初始化
  43:./underlying/src/pid.c **** /// @param Pid 
  44:./underlying/src/pid.c **** /// @param P 
  45:./underlying/src/pid.c **** /// @param I 
  46:./underlying/src/pid.c **** /// @param D 
  47:./underlying/src/pid.c **** /// @param ramp     PID控制器加速度限幅
  48:./underlying/src/pid.c **** /// @param limit    PID控制器输出限幅
  49:./underlying/src/pid.c **** void Pid_Curr_Init(Pid_Typedef* Pid , float P, float I, float D, float ramp, float limit)
  50:./underlying/src/pid.c **** {
 156              		.loc 1 50 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		.loc 1 50 1 is_stmt 0 view .LVU37
 161 0000 10B5     		push	{r4, lr}
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 166 0002 0446     		mov	r4, r0
  51:./underlying/src/pid.c ****     Pid->P = P;
 167              		.loc 1 51 5 is_stmt 1 view .LVU38
 168              		.loc 1 51 12 is_stmt 0 view .LVU39
 169 0004 80ED000A 		vstr.32	s0, [r0]
  52:./underlying/src/pid.c ****     Pid->I = I;
 170              		.loc 1 52 5 is_stmt 1 view .LVU40
 171              		.loc 1 52 12 is_stmt 0 view .LVU41
 172 0008 C0ED010A 		vstr.32	s1, [r0, #4]
ARM GAS  /tmp/ccV2mITI.s 			page 5


  53:./underlying/src/pid.c ****     Pid->D = D;
 173              		.loc 1 53 5 is_stmt 1 view .LVU42
 174              		.loc 1 53 12 is_stmt 0 view .LVU43
 175 000c 80ED021A 		vstr.32	s2, [r0, #8]
  54:./underlying/src/pid.c ****     Pid->output_ramp = ramp;                //PID控制器加速度限幅
 176              		.loc 1 54 5 is_stmt 1 view .LVU44
 177              		.loc 1 54 22 is_stmt 0 view .LVU45
 178 0010 C0ED031A 		vstr.32	s3, [r0, #12]
  55:./underlying/src/pid.c ****     Pid->limit = limit;                     //PID控制器输出限幅
 179              		.loc 1 55 5 is_stmt 1 view .LVU46
 180              		.loc 1 55 16 is_stmt 0 view .LVU47
 181 0014 80ED042A 		vstr.32	s4, [r0, #16]
  56:./underlying/src/pid.c ****     Pid->timestamp_prev = HAL_GetTick();
 182              		.loc 1 56 5 is_stmt 1 view .LVU48
 183              		.loc 1 56 27 is_stmt 0 view .LVU49
 184 0018 FFF7FEFF 		bl	HAL_GetTick
 185              	.LVL9:
 186              		.loc 1 56 25 discriminator 1 view .LVU50
 187 001c 2062     		str	r0, [r4, #32]
  57:./underlying/src/pid.c ****     printf("Pid_Curr_Init\n");
 188              		.loc 1 57 5 is_stmt 1 view .LVU51
 189 001e 0248     		ldr	r0, .L11
 190 0020 FFF7FEFF 		bl	puts
 191              	.LVL10:
  58:./underlying/src/pid.c **** }
 192              		.loc 1 58 1 is_stmt 0 view .LVU52
 193 0024 10BD     		pop	{r4, pc}
 194              	.LVL11:
 195              	.L12:
 196              		.loc 1 58 1 view .LVU53
 197 0026 00BF     		.align	2
 198              	.L11:
 199 0028 00000000 		.word	.LC2
 200              		.cfi_endproc
 201              	.LFE244:
 203              		.section	.text.Pid_clac,"ax",%progbits
 204              		.align	1
 205              		.global	Pid_clac
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 210              	Pid_clac:
 211              	.LVL12:
 212              	.LFB245:
  59:./underlying/src/pid.c **** 
  60:./underlying/src/pid.c **** /// @brief PID控制器
  61:./underlying/src/pid.c **** /// @param Pid PID控制器实例
  62:./underlying/src/pid.c **** /// @param error 
  63:./underlying/src/pid.c **** /// @return 
  64:./underlying/src/pid.c **** float Pid_clac(Pid_Typedef* Pid, float error)
  65:./underlying/src/pid.c **** {
 213              		.loc 1 65 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		.loc 1 65 1 is_stmt 0 view .LVU55
 218 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccV2mITI.s 			page 6


 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 0002 2DED028B 		vpush.64	{d8}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 80, -16
 227              		.cfi_offset 81, -12
 228 0006 0446     		mov	r4, r0
 229 0008 B0EE408A 		vmov.f32	s16, s0
  66:./underlying/src/pid.c ****     // 计算两次循环中间的间隔时间
  67:./underlying/src/pid.c ****     unsigned long timestamp_now = HAL_GetTick();
 230              		.loc 1 67 5 is_stmt 1 view .LVU56
 231              		.loc 1 67 35 is_stmt 0 view .LVU57
 232 000c FFF7FEFF 		bl	HAL_GetTick
 233              	.LVL13:
  68:./underlying/src/pid.c ****     float Ts = (timestamp_now - Pid->timestamp_prev) * 1e-3f;
 234              		.loc 1 68 5 is_stmt 1 view .LVU58
 235              		.loc 1 68 36 is_stmt 0 view .LVU59
 236 0010 236A     		ldr	r3, [r4, #32]
 237              		.loc 1 68 31 view .LVU60
 238 0012 C31A     		subs	r3, r0, r3
 239 0014 07EE103A 		vmov	s14, r3	@ int
 240              		.loc 1 68 54 view .LVU61
 241 0018 B8EE477A 		vcvt.f32.u32	s14, s14
 242              		.loc 1 68 11 view .LVU62
 243 001c DFED4F7A 		vldr.32	s15, .L41
 244 0020 27EE277A 		vmul.f32	s14, s14, s15
 245              	.LVL14:
  69:./underlying/src/pid.c ****     if(Ts <= 0 || Ts > 0.5f) Ts = 1e-3f;
 246              		.loc 1 69 5 is_stmt 1 view .LVU63
 247              		.loc 1 69 7 is_stmt 0 view .LVU64
 248 0024 B5EEC07A 		vcmpe.f32	s14, #0
 249 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 250 002c 09D9     		bls	.L28
 251              		.loc 1 69 16 discriminator 2 view .LVU65
 252 002e F6EE007A 		vmov.f32	s15, #5.0e-1
 253 0032 B4EEE77A 		vcmpe.f32	s14, s15
 254 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 255 003a 04DD     		ble	.L14
 256              		.loc 1 69 33 discriminator 3 view .LVU66
 257 003c 9FED477A 		vldr.32	s14, .L41
 258              	.LVL15:
 259              		.loc 1 69 33 discriminator 3 view .LVU67
 260 0040 01E0     		b	.L14
 261              	.LVL16:
 262              	.L28:
 263              		.loc 1 69 33 discriminator 3 view .LVU68
 264 0042 9FED467A 		vldr.32	s14, .L41
 265              	.LVL17:
 266              	.L14:
  70:./underlying/src/pid.c **** 
  71:./underlying/src/pid.c ****     // P环
  72:./underlying/src/pid.c ****     float proportional = Pid->P * error;
 267              		.loc 1 72 5 is_stmt 1 view .LVU69
 268              		.loc 1 72 29 is_stmt 0 view .LVU70
ARM GAS  /tmp/ccV2mITI.s 			page 7


 269 0046 D4ED007A 		vldr.32	s15, [r4]
 270              		.loc 1 72 11 view .LVU71
 271 004a 67EE887A 		vmul.f32	s15, s15, s16
 272              	.LVL18:
  73:./underlying/src/pid.c ****     // Tustin 散点积分（I环）
  74:./underlying/src/pid.c ****     float integral = Pid->integral_prev + Pid->I*Ts*0.5f*(error + Pid->error_prev);
 273              		.loc 1 74 5 is_stmt 1 view .LVU72
 274              		.loc 1 74 25 is_stmt 0 view .LVU73
 275 004e D4ED076A 		vldr.32	s13, [r4, #28]
 276              		.loc 1 74 46 view .LVU74
 277 0052 94ED016A 		vldr.32	s12, [r4, #4]
 278              		.loc 1 74 49 view .LVU75
 279 0056 26EE076A 		vmul.f32	s12, s12, s14
 280              		.loc 1 74 52 view .LVU76
 281 005a F6EE005A 		vmov.f32	s11, #5.0e-1
 282 005e 26EE256A 		vmul.f32	s12, s12, s11
 283              		.loc 1 74 70 view .LVU77
 284 0062 D4ED055A 		vldr.32	s11, [r4, #20]
 285              		.loc 1 74 65 view .LVU78
 286 0066 75EE885A 		vadd.f32	s11, s11, s16
 287              		.loc 1 74 57 view .LVU79
 288 006a 26EE256A 		vmul.f32	s12, s12, s11
 289              		.loc 1 74 11 view .LVU80
 290 006e 76EE866A 		vadd.f32	s13, s13, s12
 291              	.LVL19:
  75:./underlying/src/pid.c ****     integral = _constrain(integral, -Pid->limit, Pid->limit);
 292              		.loc 1 75 5 is_stmt 1 view .LVU81
 293              		.loc 1 75 16 is_stmt 0 view .LVU82
 294 0072 94ED046A 		vldr.32	s12, [r4, #16]
 295 0076 B1EE466A 		vneg.f32	s12, s12
 296 007a B4EEE66A 		vcmpe.f32	s12, s13
 297 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 298 0082 44DD     		ble	.L37
 299              		.loc 1 75 16 discriminator 1 view .LVU83
 300 0084 D4ED046A 		vldr.32	s13, [r4, #16]
 301              	.LVL20:
 302              		.loc 1 75 16 discriminator 1 view .LVU84
 303 0088 F1EE666A 		vneg.f32	s13, s13
 304              	.LVL21:
 305              	.L17:
  76:./underlying/src/pid.c ****     // D环（微分环节）
  77:./underlying/src/pid.c ****     float derivative = Pid->D*(error - Pid->error_prev)/Ts;
 306              		.loc 1 77 5 is_stmt 1 view .LVU85
 307              		.loc 1 77 27 is_stmt 0 view .LVU86
 308 008c 94ED026A 		vldr.32	s12, [r4, #8]
 309              		.loc 1 77 43 view .LVU87
 310 0090 D4ED055A 		vldr.32	s11, [r4, #20]
 311              		.loc 1 77 38 view .LVU88
 312 0094 78EE655A 		vsub.f32	s11, s16, s11
 313              		.loc 1 77 30 view .LVU89
 314 0098 26EE256A 		vmul.f32	s12, s12, s11
 315              		.loc 1 77 11 view .LVU90
 316 009c C6EE075A 		vdiv.f32	s11, s12, s14
 317              	.LVL22:
  78:./underlying/src/pid.c **** 
  79:./underlying/src/pid.c ****     // 将P,I,D三环的计算值加起来
  80:./underlying/src/pid.c ****     float output = proportional + integral + derivative;
ARM GAS  /tmp/ccV2mITI.s 			page 8


 318              		.loc 1 80 5 is_stmt 1 view .LVU91
 319              		.loc 1 80 33 is_stmt 0 view .LVU92
 320 00a0 76EEA77A 		vadd.f32	s15, s13, s15
 321              	.LVL23:
 322              		.loc 1 80 11 view .LVU93
 323 00a4 37EEA50A 		vadd.f32	s0, s15, s11
 324              	.LVL24:
  81:./underlying/src/pid.c ****     output = _constrain(output, -Pid->limit, Pid->limit);
 325              		.loc 1 81 5 is_stmt 1 view .LVU94
 326              		.loc 1 81 14 is_stmt 0 view .LVU95
 327 00a8 D4ED047A 		vldr.32	s15, [r4, #16]
 328 00ac F1EE677A 		vneg.f32	s15, s15
 329 00b0 F4EEC07A 		vcmpe.f32	s15, s0
 330 00b4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 331 00b8 33DD     		ble	.L38
 332              		.loc 1 81 14 discriminator 1 view .LVU96
 333 00ba D4ED047A 		vldr.32	s15, [r4, #16]
 334 00be B1EE670A 		vneg.f32	s0, s15
 335              	.LVL25:
 336              	.L21:
  82:./underlying/src/pid.c **** 
  83:./underlying/src/pid.c ****     if(Pid->output_ramp > 0){
 337              		.loc 1 83 5 is_stmt 1 view .LVU97
 338              		.loc 1 83 11 is_stmt 0 view .LVU98
 339 00c2 D4ED037A 		vldr.32	s15, [r4, #12]
 340              		.loc 1 83 7 view .LVU99
 341 00c6 F5EEC07A 		vcmpe.f32	s15, #0
 342 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 343 00ce 14DD     		ble	.L23
 344              	.LBB2:
  84:./underlying/src/pid.c ****         // 对PID的变化速率进行限制
  85:./underlying/src/pid.c ****         float output_rate = (output - Pid->output_prev)/Ts;
 345              		.loc 1 85 9 is_stmt 1 view .LVU100
 346              		.loc 1 85 42 is_stmt 0 view .LVU101
 347 00d0 D4ED067A 		vldr.32	s15, [r4, #24]
 348              		.loc 1 85 37 view .LVU102
 349 00d4 70EE677A 		vsub.f32	s15, s0, s15
 350              		.loc 1 85 15 view .LVU103
 351 00d8 87EE876A 		vdiv.f32	s12, s15, s14
 352              	.LVL26:
  86:./underlying/src/pid.c ****         if (output_rate > Pid->output_ramp)
 353              		.loc 1 86 9 is_stmt 1 view .LVU104
 354              		.loc 1 86 30 is_stmt 0 view .LVU105
 355 00dc D4ED037A 		vldr.32	s15, [r4, #12]
 356              		.loc 1 86 12 view .LVU106
 357 00e0 F4EEC67A 		vcmpe.f32	s15, s12
 358 00e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 359 00e8 25D5     		bpl	.L39
  87:./underlying/src/pid.c ****             output = Pid->output_prev + Pid->output_ramp*Ts;
 360              		.loc 1 87 13 is_stmt 1 view .LVU107
 361              		.loc 1 87 25 is_stmt 0 view .LVU108
 362 00ea D4ED067A 		vldr.32	s15, [r4, #24]
 363              		.loc 1 87 44 view .LVU109
 364 00ee 94ED036A 		vldr.32	s12, [r4, #12]
 365              	.LVL27:
 366              		.loc 1 87 57 view .LVU110
 367 00f2 26EE077A 		vmul.f32	s14, s12, s14
ARM GAS  /tmp/ccV2mITI.s 			page 9


 368              	.LVL28:
 369              		.loc 1 87 20 view .LVU111
 370 00f6 37EE870A 		vadd.f32	s0, s15, s14
 371              	.LVL29:
 372              	.L23:
 373              		.loc 1 87 20 view .LVU112
 374              	.LBE2:
  88:./underlying/src/pid.c ****         else if (output_rate < -Pid->output_ramp)
  89:./underlying/src/pid.c ****             output = Pid->output_prev - Pid->output_ramp*Ts;
  90:./underlying/src/pid.c ****     }
  91:./underlying/src/pid.c **** 
  92:./underlying/src/pid.c ****     // 保存值（为了下一次循环）
  93:./underlying/src/pid.c ****     Pid->integral_prev = integral;
 375              		.loc 1 93 5 is_stmt 1 view .LVU113
 376              		.loc 1 93 24 is_stmt 0 view .LVU114
 377 00fa C4ED076A 		vstr.32	s13, [r4, #28]
  94:./underlying/src/pid.c ****     Pid->output_prev = output;
 378              		.loc 1 94 5 is_stmt 1 view .LVU115
 379              		.loc 1 94 22 is_stmt 0 view .LVU116
 380 00fe 84ED060A 		vstr.32	s0, [r4, #24]
  95:./underlying/src/pid.c ****     Pid->error_prev = error;
 381              		.loc 1 95 5 is_stmt 1 view .LVU117
 382              		.loc 1 95 21 is_stmt 0 view .LVU118
 383 0102 84ED058A 		vstr.32	s16, [r4, #20]
  96:./underlying/src/pid.c ****     Pid->timestamp_prev = timestamp_now;
 384              		.loc 1 96 5 is_stmt 1 view .LVU119
 385              		.loc 1 96 25 is_stmt 0 view .LVU120
 386 0106 2062     		str	r0, [r4, #32]
  97:./underlying/src/pid.c ****     return output;
 387              		.loc 1 97 5 is_stmt 1 view .LVU121
  98:./underlying/src/pid.c **** }
 388              		.loc 1 98 1 is_stmt 0 view .LVU122
 389 0108 BDEC028B 		vldm	sp!, {d8}
 390              	.LCFI5:
 391              		.cfi_remember_state
 392              		.cfi_restore 80
 393              		.cfi_restore 81
 394              		.cfi_def_cfa_offset 8
 395              	.LVL30:
 396              		.loc 1 98 1 view .LVU123
 397 010c 10BD     		pop	{r4, pc}
 398              	.LVL31:
 399              	.L37:
 400              	.LCFI6:
 401              		.cfi_restore_state
  75:./underlying/src/pid.c ****     // D环（微分环节）
 402              		.loc 1 75 16 discriminator 2 view .LVU124
 403 010e 94ED046A 		vldr.32	s12, [r4, #16]
 404 0112 B4EEE66A 		vcmpe.f32	s12, s13
 405 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 406 011a B7D5     		bpl	.L17
  75:./underlying/src/pid.c ****     // D环（微分环节）
 407              		.loc 1 75 16 discriminator 4 view .LVU125
 408 011c D4ED046A 		vldr.32	s13, [r4, #16]
 409              	.LVL32:
  75:./underlying/src/pid.c ****     // D环（微分环节）
 410              		.loc 1 75 16 discriminator 4 view .LVU126
ARM GAS  /tmp/ccV2mITI.s 			page 10


 411 0120 B4E7     		b	.L17
 412              	.LVL33:
 413              	.L38:
  81:./underlying/src/pid.c **** 
 414              		.loc 1 81 14 discriminator 2 view .LVU127
 415 0122 D4ED047A 		vldr.32	s15, [r4, #16]
 416 0126 F4EEC07A 		vcmpe.f32	s15, s0
 417 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 418 012e C8D5     		bpl	.L21
  81:./underlying/src/pid.c **** 
 419              		.loc 1 81 14 discriminator 4 view .LVU128
 420 0130 94ED040A 		vldr.32	s0, [r4, #16]
 421              	.LVL34:
  81:./underlying/src/pid.c **** 
 422              		.loc 1 81 14 discriminator 4 view .LVU129
 423 0134 C5E7     		b	.L21
 424              	.LVL35:
 425              	.L39:
 426              	.LBB3:
  88:./underlying/src/pid.c ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 427              		.loc 1 88 14 is_stmt 1 view .LVU130
  88:./underlying/src/pid.c ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 428              		.loc 1 88 36 is_stmt 0 view .LVU131
 429 0136 D4ED037A 		vldr.32	s15, [r4, #12]
  88:./underlying/src/pid.c ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 430              		.loc 1 88 32 view .LVU132
 431 013a F1EE677A 		vneg.f32	s15, s15
  88:./underlying/src/pid.c ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 432              		.loc 1 88 17 view .LVU133
 433 013e F4EEC67A 		vcmpe.f32	s15, s12
 434 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 435 0146 D8DD     		ble	.L23
  89:./underlying/src/pid.c ****     }
 436              		.loc 1 89 13 is_stmt 1 view .LVU134
  89:./underlying/src/pid.c ****     }
 437              		.loc 1 89 25 is_stmt 0 view .LVU135
 438 0148 D4ED067A 		vldr.32	s15, [r4, #24]
  89:./underlying/src/pid.c ****     }
 439              		.loc 1 89 44 view .LVU136
 440 014c 94ED036A 		vldr.32	s12, [r4, #12]
 441              	.LVL36:
  89:./underlying/src/pid.c ****     }
 442              		.loc 1 89 57 view .LVU137
 443 0150 26EE077A 		vmul.f32	s14, s12, s14
 444              	.LVL37:
  89:./underlying/src/pid.c ****     }
 445              		.loc 1 89 20 view .LVU138
 446 0154 37EEC70A 		vsub.f32	s0, s15, s14
 447              	.LVL38:
  89:./underlying/src/pid.c ****     }
 448              		.loc 1 89 20 view .LVU139
 449 0158 CFE7     		b	.L23
 450              	.L42:
 451 015a 00BF     		.align	2
 452              	.L41:
 453 015c 6F12833A 		.word	981668463
 454              	.LBE3:
ARM GAS  /tmp/ccV2mITI.s 			page 11


 455              		.cfi_endproc
 456              	.LFE245:
 458              		.text
 459              	.Letext0:
 460              		.file 2 "./underlying/inc/pid.h"
 461              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 462              		.file 4 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 463              		.file 5 "<built-in>"
ARM GAS  /tmp/ccV2mITI.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 pid.c
     /tmp/ccV2mITI.s:21     .rodata.Pid_Vel_Init.str1.4:00000000 $d
     /tmp/ccV2mITI.s:25     .text.Pid_Vel_Init:00000000 $t
     /tmp/ccV2mITI.s:31     .text.Pid_Vel_Init:00000000 Pid_Vel_Init
     /tmp/ccV2mITI.s:77     .text.Pid_Vel_Init:00000028 $d
     /tmp/ccV2mITI.s:82     .rodata.Pid_Ang_Init.str1.4:00000000 $d
     /tmp/ccV2mITI.s:86     .text.Pid_Ang_Init:00000000 $t
     /tmp/ccV2mITI.s:92     .text.Pid_Ang_Init:00000000 Pid_Ang_Init
     /tmp/ccV2mITI.s:138    .text.Pid_Ang_Init:00000028 $d
     /tmp/ccV2mITI.s:143    .rodata.Pid_Curr_Init.str1.4:00000000 $d
     /tmp/ccV2mITI.s:147    .text.Pid_Curr_Init:00000000 $t
     /tmp/ccV2mITI.s:153    .text.Pid_Curr_Init:00000000 Pid_Curr_Init
     /tmp/ccV2mITI.s:199    .text.Pid_Curr_Init:00000028 $d
     /tmp/ccV2mITI.s:204    .text.Pid_clac:00000000 $t
     /tmp/ccV2mITI.s:210    .text.Pid_clac:00000000 Pid_clac
     /tmp/ccV2mITI.s:453    .text.Pid_clac:0000015c $d

UNDEFINED SYMBOLS
HAL_GetTick
puts
