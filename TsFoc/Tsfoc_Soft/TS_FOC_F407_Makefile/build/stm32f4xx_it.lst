ARM GAS  /tmp/cchdoX7b.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB239:
   1:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:./Core/Src/stm32f4xx_it.c **** /**
   3:./Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:./Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:./Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:./Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:./Core/Src/stm32f4xx_it.c ****   * @attention
   8:./Core/Src/stm32f4xx_it.c ****   *
   9:./Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:./Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:./Core/Src/stm32f4xx_it.c ****   *
  12:./Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:./Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:./Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:./Core/Src/stm32f4xx_it.c ****   *
  16:./Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:./Core/Src/stm32f4xx_it.c ****   */
  18:./Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:./Core/Src/stm32f4xx_it.c **** 
  20:./Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:./Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:./Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:./Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:./Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:./Core/Src/stm32f4xx_it.c **** 
  27:./Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:./Core/Src/stm32f4xx_it.c **** 
  30:./Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/cchdoX7b.s 			page 2


  31:./Core/Src/stm32f4xx_it.c **** 
  32:./Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:./Core/Src/stm32f4xx_it.c **** 
  35:./Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:./Core/Src/stm32f4xx_it.c **** 
  37:./Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:./Core/Src/stm32f4xx_it.c **** 
  40:./Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:./Core/Src/stm32f4xx_it.c **** 
  42:./Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:./Core/Src/stm32f4xx_it.c **** 
  45:./Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:./Core/Src/stm32f4xx_it.c **** 
  47:./Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:./Core/Src/stm32f4xx_it.c **** 
  50:./Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:./Core/Src/stm32f4xx_it.c **** 
  52:./Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:./Core/Src/stm32f4xx_it.c **** 
  55:./Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:./Core/Src/stm32f4xx_it.c **** 
  57:./Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:./Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:./Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  61:./Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan2;
  62:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  63:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  64:./Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  65:./Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c2;
  66:./Core/Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi2;
  67:./Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  68:./Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim8;
  69:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  70:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  71:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  72:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  73:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  74:./Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  75:./Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  76:./Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  77:./Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart3;
  78:./Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim13;
  79:./Core/Src/stm32f4xx_it.c **** 
  80:./Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  81:./Core/Src/stm32f4xx_it.c **** 
  82:./Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  83:./Core/Src/stm32f4xx_it.c **** 
  84:./Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  85:./Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  86:./Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  87:./Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/cchdoX7b.s 			page 3


  88:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  89:./Core/Src/stm32f4xx_it.c ****   */
  90:./Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  91:./Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 91 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  92:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  93:./Core/Src/stm32f4xx_it.c **** 
  94:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  95:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  96:./Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 96 4 view .LVU1
  97:./Core/Src/stm32f4xx_it.c ****   {
  98:./Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 98 3 view .LVU2
  96:./Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 96 10 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE239:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB240:
  99:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 100:./Core/Src/stm32f4xx_it.c **** }
 101:./Core/Src/stm32f4xx_it.c **** 
 102:./Core/Src/stm32f4xx_it.c **** /**
 103:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
 104:./Core/Src/stm32f4xx_it.c ****   */
 105:./Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
 106:./Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 106 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
 107:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 108:./Core/Src/stm32f4xx_it.c **** 
 109:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 110:./Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 110 3 view .LVU5
 111:./Core/Src/stm32f4xx_it.c ****   {
 112:./Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 113:./Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 114:./Core/Src/stm32f4xx_it.c ****   }
ARM GAS  /tmp/cchdoX7b.s 			page 4


  60              		.loc 1 114 3 view .LVU6
 110:./Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 110 9 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE240:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB241:
 115:./Core/Src/stm32f4xx_it.c **** }
 116:./Core/Src/stm32f4xx_it.c **** 
 117:./Core/Src/stm32f4xx_it.c **** /**
 118:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 119:./Core/Src/stm32f4xx_it.c ****   */
 120:./Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 121:./Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 121 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 122:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 123:./Core/Src/stm32f4xx_it.c **** 
 124:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 125:./Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 125 3 view .LVU9
 126:./Core/Src/stm32f4xx_it.c ****   {
 127:./Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 128:./Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 129:./Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 129 3 view .LVU10
 125:./Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 125 9 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE241:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB242:
 130:./Core/Src/stm32f4xx_it.c **** }
 131:./Core/Src/stm32f4xx_it.c **** 
 132:./Core/Src/stm32f4xx_it.c **** /**
 133:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 134:./Core/Src/stm32f4xx_it.c ****   */
 135:./Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
ARM GAS  /tmp/cchdoX7b.s 			page 5


 136:./Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 136 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 137:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 138:./Core/Src/stm32f4xx_it.c **** 
 139:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 140:./Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 140 3 view .LVU13
 141:./Core/Src/stm32f4xx_it.c ****   {
 142:./Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 143:./Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 144:./Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 144 3 view .LVU14
 140:./Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 140 9 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE242:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB243:
 145:./Core/Src/stm32f4xx_it.c **** }
 146:./Core/Src/stm32f4xx_it.c **** 
 147:./Core/Src/stm32f4xx_it.c **** /**
 148:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 149:./Core/Src/stm32f4xx_it.c ****   */
 150:./Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 151:./Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 151 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 152:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 153:./Core/Src/stm32f4xx_it.c **** 
 154:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 155:./Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 155 3 view .LVU17
 156:./Core/Src/stm32f4xx_it.c ****   {
 157:./Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 158:./Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 159:./Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 159 3 view .LVU18
 155:./Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 155 9 view .LVU19
ARM GAS  /tmp/cchdoX7b.s 			page 6


 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE243:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB244:
 160:./Core/Src/stm32f4xx_it.c **** }
 161:./Core/Src/stm32f4xx_it.c **** 
 162:./Core/Src/stm32f4xx_it.c **** /**
 163:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 164:./Core/Src/stm32f4xx_it.c ****   */
 165:./Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 166:./Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 166 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 167:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 168:./Core/Src/stm32f4xx_it.c **** 
 169:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 170:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 171:./Core/Src/stm32f4xx_it.c **** 
 172:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 173:./Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 173 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE244:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB245:
 174:./Core/Src/stm32f4xx_it.c **** 
 175:./Core/Src/stm32f4xx_it.c **** /**
 176:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 177:./Core/Src/stm32f4xx_it.c ****   */
 178:./Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 179:./Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 179 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 180:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 181:./Core/Src/stm32f4xx_it.c **** 
 182:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 183:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
ARM GAS  /tmp/cchdoX7b.s 			page 7


 184:./Core/Src/stm32f4xx_it.c **** 
 185:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 186:./Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 186 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE245:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB246:
 187:./Core/Src/stm32f4xx_it.c **** 
 188:./Core/Src/stm32f4xx_it.c **** /**
 189:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 190:./Core/Src/stm32f4xx_it.c ****   */
 191:./Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 192:./Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 192 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 193:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 194:./Core/Src/stm32f4xx_it.c **** 
 195:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 196:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 197:./Core/Src/stm32f4xx_it.c **** 
 198:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 199:./Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 199 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE246:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB247:
 200:./Core/Src/stm32f4xx_it.c **** 
 201:./Core/Src/stm32f4xx_it.c **** /**
 202:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 203:./Core/Src/stm32f4xx_it.c ****   */
 204:./Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 205:./Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 205 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
ARM GAS  /tmp/cchdoX7b.s 			page 8


 207:./Core/Src/stm32f4xx_it.c **** 
 208:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 209:./Core/Src/stm32f4xx_it.c **** 
 210:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 211:./Core/Src/stm32f4xx_it.c **** 
 212:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 213:./Core/Src/stm32f4xx_it.c **** }
 206              		.loc 1 213 1 view .LVU27
 207 0000 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE247:
 211              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 212              		.align	1
 213              		.global	DMA1_Stream0_IRQHandler
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	DMA1_Stream0_IRQHandler:
 219              	.LFB248:
 214:./Core/Src/stm32f4xx_it.c **** 
 215:./Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 216:./Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 217:./Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 218:./Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 219:./Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 220:./Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 221:./Core/Src/stm32f4xx_it.c **** 
 222:./Core/Src/stm32f4xx_it.c **** /**
 223:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 224:./Core/Src/stm32f4xx_it.c ****   */
 225:./Core/Src/stm32f4xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 226:./Core/Src/stm32f4xx_it.c **** {
 220              		.loc 1 226 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI0:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 227:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 228:./Core/Src/stm32f4xx_it.c **** 
 229:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 230:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 229              		.loc 1 230 3 view .LVU29
 230 0002 0248     		ldr	r0, .L17
 231 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 232              	.LVL0:
 231:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 232:./Core/Src/stm32f4xx_it.c **** 
 233:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 234:./Core/Src/stm32f4xx_it.c **** }
 233              		.loc 1 234 1 is_stmt 0 view .LVU30
 234 0008 08BD     		pop	{r3, pc}
 235              	.L18:
 236 000a 00BF     		.align	2
ARM GAS  /tmp/cchdoX7b.s 			page 9


 237              	.L17:
 238 000c 00000000 		.word	hdma_i2c1_rx
 239              		.cfi_endproc
 240              	.LFE248:
 242              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
 243              		.align	1
 244              		.global	DMA1_Stream1_IRQHandler
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	DMA1_Stream1_IRQHandler:
 250              	.LFB249:
 235:./Core/Src/stm32f4xx_it.c **** 
 236:./Core/Src/stm32f4xx_it.c **** /**
 237:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 238:./Core/Src/stm32f4xx_it.c ****   */
 239:./Core/Src/stm32f4xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 240:./Core/Src/stm32f4xx_it.c **** {
 251              		.loc 1 240 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI1:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 241:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 242:./Core/Src/stm32f4xx_it.c **** 
 243:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 244:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 260              		.loc 1 244 3 view .LVU32
 261 0002 0248     		ldr	r0, .L21
 262 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 263              	.LVL1:
 245:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 246:./Core/Src/stm32f4xx_it.c **** 
 247:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 248:./Core/Src/stm32f4xx_it.c **** }
 264              		.loc 1 248 1 is_stmt 0 view .LVU33
 265 0008 08BD     		pop	{r3, pc}
 266              	.L22:
 267 000a 00BF     		.align	2
 268              	.L21:
 269 000c 00000000 		.word	hdma_usart3_rx
 270              		.cfi_endproc
 271              	.LFE249:
 273              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 274              		.align	1
 275              		.global	DMA1_Stream4_IRQHandler
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	DMA1_Stream4_IRQHandler:
 281              	.LFB250:
 249:./Core/Src/stm32f4xx_it.c **** 
 250:./Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/cchdoX7b.s 			page 10


 251:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 252:./Core/Src/stm32f4xx_it.c ****   */
 253:./Core/Src/stm32f4xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 254:./Core/Src/stm32f4xx_it.c **** {
 282              		.loc 1 254 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286 0000 08B5     		push	{r3, lr}
 287              	.LCFI2:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 255:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 256:./Core/Src/stm32f4xx_it.c **** 
 257:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 258:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_tx);
 291              		.loc 1 258 3 view .LVU35
 292 0002 0248     		ldr	r0, .L25
 293 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 294              	.LVL2:
 259:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 260:./Core/Src/stm32f4xx_it.c **** 
 261:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 262:./Core/Src/stm32f4xx_it.c **** }
 295              		.loc 1 262 1 is_stmt 0 view .LVU36
 296 0008 08BD     		pop	{r3, pc}
 297              	.L26:
 298 000a 00BF     		.align	2
 299              	.L25:
 300 000c 00000000 		.word	hdma_usart3_tx
 301              		.cfi_endproc
 302              	.LFE250:
 304              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 305              		.align	1
 306              		.global	DMA1_Stream5_IRQHandler
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	DMA1_Stream5_IRQHandler:
 312              	.LFB251:
 263:./Core/Src/stm32f4xx_it.c **** 
 264:./Core/Src/stm32f4xx_it.c **** /**
 265:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 266:./Core/Src/stm32f4xx_it.c ****   */
 267:./Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 268:./Core/Src/stm32f4xx_it.c **** {
 313              		.loc 1 268 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 269:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
ARM GAS  /tmp/cchdoX7b.s 			page 11


 270:./Core/Src/stm32f4xx_it.c **** 
 271:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 272:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 322              		.loc 1 272 3 view .LVU38
 323 0002 0248     		ldr	r0, .L29
 324 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 325              	.LVL3:
 273:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 274:./Core/Src/stm32f4xx_it.c **** 
 275:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 276:./Core/Src/stm32f4xx_it.c **** }
 326              		.loc 1 276 1 is_stmt 0 view .LVU39
 327 0008 08BD     		pop	{r3, pc}
 328              	.L30:
 329 000a 00BF     		.align	2
 330              	.L29:
 331 000c 00000000 		.word	hdma_usart2_rx
 332              		.cfi_endproc
 333              	.LFE251:
 335              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 336              		.align	1
 337              		.global	DMA1_Stream6_IRQHandler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	DMA1_Stream6_IRQHandler:
 343              	.LFB252:
 277:./Core/Src/stm32f4xx_it.c **** 
 278:./Core/Src/stm32f4xx_it.c **** /**
 279:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 280:./Core/Src/stm32f4xx_it.c ****   */
 281:./Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 282:./Core/Src/stm32f4xx_it.c **** {
 344              		.loc 1 282 1 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              	.LCFI4:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 283:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 284:./Core/Src/stm32f4xx_it.c **** 
 285:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 286:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 353              		.loc 1 286 3 view .LVU41
 354 0002 0248     		ldr	r0, .L33
 355 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 356              	.LVL4:
 287:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 288:./Core/Src/stm32f4xx_it.c **** 
 289:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 290:./Core/Src/stm32f4xx_it.c **** }
 357              		.loc 1 290 1 is_stmt 0 view .LVU42
 358 0008 08BD     		pop	{r3, pc}
 359              	.L34:
ARM GAS  /tmp/cchdoX7b.s 			page 12


 360 000a 00BF     		.align	2
 361              	.L33:
 362 000c 00000000 		.word	hdma_usart2_tx
 363              		.cfi_endproc
 364              	.LFE252:
 366              		.section	.text.ADC_IRQHandler,"ax",%progbits
 367              		.align	1
 368              		.global	ADC_IRQHandler
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	ADC_IRQHandler:
 374              	.LFB253:
 291:./Core/Src/stm32f4xx_it.c **** 
 292:./Core/Src/stm32f4xx_it.c **** /**
 293:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles ADC1, ADC2 and ADC3 global interrupts.
 294:./Core/Src/stm32f4xx_it.c ****   */
 295:./Core/Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 296:./Core/Src/stm32f4xx_it.c **** {
 375              		.loc 1 296 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI5:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 297:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 298:./Core/Src/stm32f4xx_it.c **** 
 299:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 300:./Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 384              		.loc 1 300 3 view .LVU44
 385 0002 0248     		ldr	r0, .L37
 386 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 387              	.LVL5:
 301:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 302:./Core/Src/stm32f4xx_it.c **** 
 303:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 304:./Core/Src/stm32f4xx_it.c **** }
 388              		.loc 1 304 1 is_stmt 0 view .LVU45
 389 0008 08BD     		pop	{r3, pc}
 390              	.L38:
 391 000a 00BF     		.align	2
 392              	.L37:
 393 000c 00000000 		.word	hadc1
 394              		.cfi_endproc
 395              	.LFE253:
 397              		.section	.text.CAN1_TX_IRQHandler,"ax",%progbits
 398              		.align	1
 399              		.global	CAN1_TX_IRQHandler
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	CAN1_TX_IRQHandler:
 405              	.LFB254:
 305:./Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/cchdoX7b.s 			page 13


 306:./Core/Src/stm32f4xx_it.c **** /**
 307:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 TX interrupts.
 308:./Core/Src/stm32f4xx_it.c ****   */
 309:./Core/Src/stm32f4xx_it.c **** void CAN1_TX_IRQHandler(void)
 310:./Core/Src/stm32f4xx_it.c **** {
 406              		.loc 1 310 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI6:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 311:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 0 */
 312:./Core/Src/stm32f4xx_it.c **** 
 313:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 0 */
 314:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 415              		.loc 1 314 3 view .LVU47
 416 0002 0248     		ldr	r0, .L41
 417 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 418              	.LVL6:
 315:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 1 */
 316:./Core/Src/stm32f4xx_it.c **** 
 317:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 1 */
 318:./Core/Src/stm32f4xx_it.c **** }
 419              		.loc 1 318 1 is_stmt 0 view .LVU48
 420 0008 08BD     		pop	{r3, pc}
 421              	.L42:
 422 000a 00BF     		.align	2
 423              	.L41:
 424 000c 00000000 		.word	hcan1
 425              		.cfi_endproc
 426              	.LFE254:
 428              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 429              		.align	1
 430              		.global	CAN1_RX0_IRQHandler
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	CAN1_RX0_IRQHandler:
 436              	.LFB255:
 319:./Core/Src/stm32f4xx_it.c **** 
 320:./Core/Src/stm32f4xx_it.c **** /**
 321:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 322:./Core/Src/stm32f4xx_it.c ****   */
 323:./Core/Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 324:./Core/Src/stm32f4xx_it.c **** {
 437              		.loc 1 324 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0000 08B5     		push	{r3, lr}
 442              	.LCFI7:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
ARM GAS  /tmp/cchdoX7b.s 			page 14


 325:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 326:./Core/Src/stm32f4xx_it.c **** 
 327:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 328:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 446              		.loc 1 328 3 view .LVU50
 447 0002 0248     		ldr	r0, .L45
 448 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 449              	.LVL7:
 329:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 330:./Core/Src/stm32f4xx_it.c **** 
 331:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 332:./Core/Src/stm32f4xx_it.c **** }
 450              		.loc 1 332 1 is_stmt 0 view .LVU51
 451 0008 08BD     		pop	{r3, pc}
 452              	.L46:
 453 000a 00BF     		.align	2
 454              	.L45:
 455 000c 00000000 		.word	hcan1
 456              		.cfi_endproc
 457              	.LFE255:
 459              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 460              		.align	1
 461              		.global	CAN1_RX1_IRQHandler
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 466              	CAN1_RX1_IRQHandler:
 467              	.LFB256:
 333:./Core/Src/stm32f4xx_it.c **** 
 334:./Core/Src/stm32f4xx_it.c **** /**
 335:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX1 interrupt.
 336:./Core/Src/stm32f4xx_it.c ****   */
 337:./Core/Src/stm32f4xx_it.c **** void CAN1_RX1_IRQHandler(void)
 338:./Core/Src/stm32f4xx_it.c **** {
 468              		.loc 1 338 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI8:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
 339:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
 340:./Core/Src/stm32f4xx_it.c **** 
 341:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 0 */
 342:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 477              		.loc 1 342 3 view .LVU53
 478 0002 0248     		ldr	r0, .L49
 479 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 480              	.LVL8:
 343:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
 344:./Core/Src/stm32f4xx_it.c **** 
 345:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 1 */
 346:./Core/Src/stm32f4xx_it.c **** }
 481              		.loc 1 346 1 is_stmt 0 view .LVU54
 482 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cchdoX7b.s 			page 15


 483              	.L50:
 484 000a 00BF     		.align	2
 485              	.L49:
 486 000c 00000000 		.word	hcan1
 487              		.cfi_endproc
 488              	.LFE256:
 490              		.section	.text.CAN1_SCE_IRQHandler,"ax",%progbits
 491              		.align	1
 492              		.global	CAN1_SCE_IRQHandler
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	CAN1_SCE_IRQHandler:
 498              	.LFB257:
 347:./Core/Src/stm32f4xx_it.c **** 
 348:./Core/Src/stm32f4xx_it.c **** /**
 349:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 SCE interrupt.
 350:./Core/Src/stm32f4xx_it.c ****   */
 351:./Core/Src/stm32f4xx_it.c **** void CAN1_SCE_IRQHandler(void)
 352:./Core/Src/stm32f4xx_it.c **** {
 499              		.loc 1 352 1 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 08B5     		push	{r3, lr}
 504              	.LCFI9:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 3, -8
 507              		.cfi_offset 14, -4
 353:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 0 */
 354:./Core/Src/stm32f4xx_it.c **** 
 355:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 0 */
 356:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 508              		.loc 1 356 3 view .LVU56
 509 0002 0248     		ldr	r0, .L53
 510 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 511              	.LVL9:
 357:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 1 */
 358:./Core/Src/stm32f4xx_it.c **** 
 359:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 1 */
 360:./Core/Src/stm32f4xx_it.c **** }
 512              		.loc 1 360 1 is_stmt 0 view .LVU57
 513 0008 08BD     		pop	{r3, pc}
 514              	.L54:
 515 000a 00BF     		.align	2
 516              	.L53:
 517 000c 00000000 		.word	hcan1
 518              		.cfi_endproc
 519              	.LFE257:
 521              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 522              		.align	1
 523              		.global	TIM4_IRQHandler
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	TIM4_IRQHandler:
 529              	.LFB258:
ARM GAS  /tmp/cchdoX7b.s 			page 16


 361:./Core/Src/stm32f4xx_it.c **** 
 362:./Core/Src/stm32f4xx_it.c **** /**
 363:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 364:./Core/Src/stm32f4xx_it.c ****   */
 365:./Core/Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 366:./Core/Src/stm32f4xx_it.c **** {
 530              		.loc 1 366 1 is_stmt 1 view -0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 08B5     		push	{r3, lr}
 535              	.LCFI10:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 3, -8
 538              		.cfi_offset 14, -4
 367:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 368:./Core/Src/stm32f4xx_it.c **** 
 369:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 370:./Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 539              		.loc 1 370 3 view .LVU59
 540 0002 0248     		ldr	r0, .L57
 541 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 542              	.LVL10:
 371:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 372:./Core/Src/stm32f4xx_it.c **** 
 373:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 374:./Core/Src/stm32f4xx_it.c **** }
 543              		.loc 1 374 1 is_stmt 0 view .LVU60
 544 0008 08BD     		pop	{r3, pc}
 545              	.L58:
 546 000a 00BF     		.align	2
 547              	.L57:
 548 000c 00000000 		.word	htim4
 549              		.cfi_endproc
 550              	.LFE258:
 552              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 553              		.align	1
 554              		.global	I2C1_EV_IRQHandler
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 559              	I2C1_EV_IRQHandler:
 560              	.LFB259:
 375:./Core/Src/stm32f4xx_it.c **** 
 376:./Core/Src/stm32f4xx_it.c **** /**
 377:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 378:./Core/Src/stm32f4xx_it.c ****   */
 379:./Core/Src/stm32f4xx_it.c **** void I2C1_EV_IRQHandler(void)
 380:./Core/Src/stm32f4xx_it.c **** {
 561              		.loc 1 380 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565 0000 08B5     		push	{r3, lr}
 566              	.LCFI11:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 3, -8
ARM GAS  /tmp/cchdoX7b.s 			page 17


 569              		.cfi_offset 14, -4
 381:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 382:./Core/Src/stm32f4xx_it.c **** 
 383:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 384:./Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 570              		.loc 1 384 3 view .LVU62
 571 0002 0248     		ldr	r0, .L61
 572 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 573              	.LVL11:
 385:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 386:./Core/Src/stm32f4xx_it.c **** 
 387:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 388:./Core/Src/stm32f4xx_it.c **** }
 574              		.loc 1 388 1 is_stmt 0 view .LVU63
 575 0008 08BD     		pop	{r3, pc}
 576              	.L62:
 577 000a 00BF     		.align	2
 578              	.L61:
 579 000c 00000000 		.word	hi2c1
 580              		.cfi_endproc
 581              	.LFE259:
 583              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 584              		.align	1
 585              		.global	I2C1_ER_IRQHandler
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 590              	I2C1_ER_IRQHandler:
 591              	.LFB260:
 389:./Core/Src/stm32f4xx_it.c **** 
 390:./Core/Src/stm32f4xx_it.c **** /**
 391:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 392:./Core/Src/stm32f4xx_it.c ****   */
 393:./Core/Src/stm32f4xx_it.c **** void I2C1_ER_IRQHandler(void)
 394:./Core/Src/stm32f4xx_it.c **** {
 592              		.loc 1 394 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596 0000 08B5     		push	{r3, lr}
 597              	.LCFI12:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 3, -8
 600              		.cfi_offset 14, -4
 395:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 396:./Core/Src/stm32f4xx_it.c **** 
 397:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 398:./Core/Src/stm32f4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 601              		.loc 1 398 3 view .LVU65
 602 0002 0248     		ldr	r0, .L65
 603 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 604              	.LVL12:
 399:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 400:./Core/Src/stm32f4xx_it.c **** 
 401:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 402:./Core/Src/stm32f4xx_it.c **** }
 605              		.loc 1 402 1 is_stmt 0 view .LVU66
ARM GAS  /tmp/cchdoX7b.s 			page 18


 606 0008 08BD     		pop	{r3, pc}
 607              	.L66:
 608 000a 00BF     		.align	2
 609              	.L65:
 610 000c 00000000 		.word	hi2c1
 611              		.cfi_endproc
 612              	.LFE260:
 614              		.section	.text.I2C2_EV_IRQHandler,"ax",%progbits
 615              		.align	1
 616              		.global	I2C2_EV_IRQHandler
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 621              	I2C2_EV_IRQHandler:
 622              	.LFB261:
 403:./Core/Src/stm32f4xx_it.c **** 
 404:./Core/Src/stm32f4xx_it.c **** /**
 405:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C2 event interrupt.
 406:./Core/Src/stm32f4xx_it.c ****   */
 407:./Core/Src/stm32f4xx_it.c **** void I2C2_EV_IRQHandler(void)
 408:./Core/Src/stm32f4xx_it.c **** {
 623              		.loc 1 408 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627 0000 08B5     		push	{r3, lr}
 628              	.LCFI13:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 3, -8
 631              		.cfi_offset 14, -4
 409:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C2_EV_IRQn 0 */
 410:./Core/Src/stm32f4xx_it.c **** 
 411:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C2_EV_IRQn 0 */
 412:./Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c2);
 632              		.loc 1 412 3 view .LVU68
 633 0002 0248     		ldr	r0, .L69
 634 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 635              	.LVL13:
 413:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C2_EV_IRQn 1 */
 414:./Core/Src/stm32f4xx_it.c **** 
 415:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C2_EV_IRQn 1 */
 416:./Core/Src/stm32f4xx_it.c **** }
 636              		.loc 1 416 1 is_stmt 0 view .LVU69
 637 0008 08BD     		pop	{r3, pc}
 638              	.L70:
 639 000a 00BF     		.align	2
 640              	.L69:
 641 000c 00000000 		.word	hi2c2
 642              		.cfi_endproc
 643              	.LFE261:
 645              		.section	.text.I2C2_ER_IRQHandler,"ax",%progbits
 646              		.align	1
 647              		.global	I2C2_ER_IRQHandler
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	I2C2_ER_IRQHandler:
ARM GAS  /tmp/cchdoX7b.s 			page 19


 653              	.LFB262:
 417:./Core/Src/stm32f4xx_it.c **** 
 418:./Core/Src/stm32f4xx_it.c **** /**
 419:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C2 error interrupt.
 420:./Core/Src/stm32f4xx_it.c ****   */
 421:./Core/Src/stm32f4xx_it.c **** void I2C2_ER_IRQHandler(void)
 422:./Core/Src/stm32f4xx_it.c **** {
 654              		.loc 1 422 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 08B5     		push	{r3, lr}
 659              	.LCFI14:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 3, -8
 662              		.cfi_offset 14, -4
 423:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C2_ER_IRQn 0 */
 424:./Core/Src/stm32f4xx_it.c **** 
 425:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C2_ER_IRQn 0 */
 426:./Core/Src/stm32f4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c2);
 663              		.loc 1 426 3 view .LVU71
 664 0002 0248     		ldr	r0, .L73
 665 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 666              	.LVL14:
 427:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C2_ER_IRQn 1 */
 428:./Core/Src/stm32f4xx_it.c **** 
 429:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C2_ER_IRQn 1 */
 430:./Core/Src/stm32f4xx_it.c **** }
 667              		.loc 1 430 1 is_stmt 0 view .LVU72
 668 0008 08BD     		pop	{r3, pc}
 669              	.L74:
 670 000a 00BF     		.align	2
 671              	.L73:
 672 000c 00000000 		.word	hi2c2
 673              		.cfi_endproc
 674              	.LFE262:
 676              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 677              		.align	1
 678              		.global	SPI2_IRQHandler
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 683              	SPI2_IRQHandler:
 684              	.LFB263:
 431:./Core/Src/stm32f4xx_it.c **** 
 432:./Core/Src/stm32f4xx_it.c **** /**
 433:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 434:./Core/Src/stm32f4xx_it.c ****   */
 435:./Core/Src/stm32f4xx_it.c **** void SPI2_IRQHandler(void)
 436:./Core/Src/stm32f4xx_it.c **** {
 685              		.loc 1 436 1 is_stmt 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689 0000 08B5     		push	{r3, lr}
 690              	.LCFI15:
 691              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cchdoX7b.s 			page 20


 692              		.cfi_offset 3, -8
 693              		.cfi_offset 14, -4
 437:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 438:./Core/Src/stm32f4xx_it.c **** 
 439:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 440:./Core/Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 694              		.loc 1 440 3 view .LVU74
 695 0002 0248     		ldr	r0, .L77
 696 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 697              	.LVL15:
 441:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 442:./Core/Src/stm32f4xx_it.c **** 
 443:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 444:./Core/Src/stm32f4xx_it.c **** }
 698              		.loc 1 444 1 is_stmt 0 view .LVU75
 699 0008 08BD     		pop	{r3, pc}
 700              	.L78:
 701 000a 00BF     		.align	2
 702              	.L77:
 703 000c 00000000 		.word	hspi2
 704              		.cfi_endproc
 705              	.LFE263:
 707              		.section	.text.USART1_IRQHandler,"ax",%progbits
 708              		.align	1
 709              		.global	USART1_IRQHandler
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 714              	USART1_IRQHandler:
 715              	.LFB264:
 445:./Core/Src/stm32f4xx_it.c **** 
 446:./Core/Src/stm32f4xx_it.c **** /**
 447:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 448:./Core/Src/stm32f4xx_it.c ****   */
 449:./Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 450:./Core/Src/stm32f4xx_it.c **** {
 716              		.loc 1 450 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720 0000 08B5     		push	{r3, lr}
 721              	.LCFI16:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 3, -8
 724              		.cfi_offset 14, -4
 451:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 452:./Core/Src/stm32f4xx_it.c **** 
 453:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 454:./Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 725              		.loc 1 454 3 view .LVU77
 726 0002 0248     		ldr	r0, .L81
 727 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 728              	.LVL16:
 455:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 456:./Core/Src/stm32f4xx_it.c **** 
 457:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 458:./Core/Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/cchdoX7b.s 			page 21


 729              		.loc 1 458 1 is_stmt 0 view .LVU78
 730 0008 08BD     		pop	{r3, pc}
 731              	.L82:
 732 000a 00BF     		.align	2
 733              	.L81:
 734 000c 00000000 		.word	huart1
 735              		.cfi_endproc
 736              	.LFE264:
 738              		.section	.text.USART2_IRQHandler,"ax",%progbits
 739              		.align	1
 740              		.global	USART2_IRQHandler
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	USART2_IRQHandler:
 746              	.LFB265:
 459:./Core/Src/stm32f4xx_it.c **** 
 460:./Core/Src/stm32f4xx_it.c **** /**
 461:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 462:./Core/Src/stm32f4xx_it.c ****   */
 463:./Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 464:./Core/Src/stm32f4xx_it.c **** {
 747              		.loc 1 464 1 is_stmt 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 08B5     		push	{r3, lr}
 752              	.LCFI17:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 3, -8
 755              		.cfi_offset 14, -4
 465:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 466:./Core/Src/stm32f4xx_it.c **** 
 467:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 468:./Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 756              		.loc 1 468 3 view .LVU80
 757 0002 0248     		ldr	r0, .L85
 758 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 759              	.LVL17:
 469:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 470:./Core/Src/stm32f4xx_it.c **** 
 471:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 472:./Core/Src/stm32f4xx_it.c **** }
 760              		.loc 1 472 1 is_stmt 0 view .LVU81
 761 0008 08BD     		pop	{r3, pc}
 762              	.L86:
 763 000a 00BF     		.align	2
 764              	.L85:
 765 000c 00000000 		.word	huart2
 766              		.cfi_endproc
 767              	.LFE265:
 769              		.section	.text.USART3_IRQHandler,"ax",%progbits
 770              		.align	1
 771              		.global	USART3_IRQHandler
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
ARM GAS  /tmp/cchdoX7b.s 			page 22


 776              	USART3_IRQHandler:
 777              	.LFB266:
 473:./Core/Src/stm32f4xx_it.c **** 
 474:./Core/Src/stm32f4xx_it.c **** /**
 475:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 476:./Core/Src/stm32f4xx_it.c ****   */
 477:./Core/Src/stm32f4xx_it.c **** void USART3_IRQHandler(void)
 478:./Core/Src/stm32f4xx_it.c **** {
 778              		.loc 1 478 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782 0000 08B5     		push	{r3, lr}
 783              	.LCFI18:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 3, -8
 786              		.cfi_offset 14, -4
 479:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 480:./Core/Src/stm32f4xx_it.c **** 
 481:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 482:./Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 787              		.loc 1 482 3 view .LVU83
 788 0002 0248     		ldr	r0, .L89
 789 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 790              	.LVL18:
 483:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 484:./Core/Src/stm32f4xx_it.c **** 
 485:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 486:./Core/Src/stm32f4xx_it.c **** }
 791              		.loc 1 486 1 is_stmt 0 view .LVU84
 792 0008 08BD     		pop	{r3, pc}
 793              	.L90:
 794 000a 00BF     		.align	2
 795              	.L89:
 796 000c 00000000 		.word	huart3
 797              		.cfi_endproc
 798              	.LFE266:
 800              		.section	.text.TIM8_UP_TIM13_IRQHandler,"ax",%progbits
 801              		.align	1
 802              		.global	TIM8_UP_TIM13_IRQHandler
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 807              	TIM8_UP_TIM13_IRQHandler:
 808              	.LFB267:
 487:./Core/Src/stm32f4xx_it.c **** 
 488:./Core/Src/stm32f4xx_it.c **** /**
 489:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
 490:./Core/Src/stm32f4xx_it.c ****   */
 491:./Core/Src/stm32f4xx_it.c **** void TIM8_UP_TIM13_IRQHandler(void)
 492:./Core/Src/stm32f4xx_it.c **** {
 809              		.loc 1 492 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813 0000 08B5     		push	{r3, lr}
 814              	.LCFI19:
ARM GAS  /tmp/cchdoX7b.s 			page 23


 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 3, -8
 817              		.cfi_offset 14, -4
 493:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */
 494:./Core/Src/stm32f4xx_it.c **** 
 495:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
 496:./Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 818              		.loc 1 496 3 view .LVU86
 819 0002 0348     		ldr	r0, .L93
 820 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 821              	.LVL19:
 497:./Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim13);
 822              		.loc 1 497 3 view .LVU87
 823 0008 0248     		ldr	r0, .L93+4
 824 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 825              	.LVL20:
 498:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 1 */
 499:./Core/Src/stm32f4xx_it.c **** 
 500:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_UP_TIM13_IRQn 1 */
 501:./Core/Src/stm32f4xx_it.c **** }
 826              		.loc 1 501 1 is_stmt 0 view .LVU88
 827 000e 08BD     		pop	{r3, pc}
 828              	.L94:
 829              		.align	2
 830              	.L93:
 831 0010 00000000 		.word	htim8
 832 0014 00000000 		.word	htim13
 833              		.cfi_endproc
 834              	.LFE267:
 836              		.section	.text.TIM8_TRG_COM_TIM14_IRQHandler,"ax",%progbits
 837              		.align	1
 838              		.global	TIM8_TRG_COM_TIM14_IRQHandler
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	TIM8_TRG_COM_TIM14_IRQHandler:
 844              	.LFB268:
 502:./Core/Src/stm32f4xx_it.c **** 
 503:./Core/Src/stm32f4xx_it.c **** /**
 504:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt
 505:./Core/Src/stm32f4xx_it.c ****   */
 506:./Core/Src/stm32f4xx_it.c **** void TIM8_TRG_COM_TIM14_IRQHandler(void)
 507:./Core/Src/stm32f4xx_it.c **** {
 845              		.loc 1 507 1 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 08B5     		push	{r3, lr}
 850              	.LCFI20:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 3, -8
 853              		.cfi_offset 14, -4
 508:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */
 509:./Core/Src/stm32f4xx_it.c **** 
 510:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
 511:./Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 854              		.loc 1 511 3 view .LVU90
ARM GAS  /tmp/cchdoX7b.s 			page 24


 855 0002 0248     		ldr	r0, .L97
 856 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 857              	.LVL21:
 512:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */
 513:./Core/Src/stm32f4xx_it.c **** 
 514:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
 515:./Core/Src/stm32f4xx_it.c **** }
 858              		.loc 1 515 1 is_stmt 0 view .LVU91
 859 0008 08BD     		pop	{r3, pc}
 860              	.L98:
 861 000a 00BF     		.align	2
 862              	.L97:
 863 000c 00000000 		.word	htim8
 864              		.cfi_endproc
 865              	.LFE268:
 867              		.section	.text.DMA1_Stream7_IRQHandler,"ax",%progbits
 868              		.align	1
 869              		.global	DMA1_Stream7_IRQHandler
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 874              	DMA1_Stream7_IRQHandler:
 875              	.LFB269:
 516:./Core/Src/stm32f4xx_it.c **** 
 517:./Core/Src/stm32f4xx_it.c **** /**
 518:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream7 global interrupt.
 519:./Core/Src/stm32f4xx_it.c ****   */
 520:./Core/Src/stm32f4xx_it.c **** void DMA1_Stream7_IRQHandler(void)
 521:./Core/Src/stm32f4xx_it.c **** {
 876              		.loc 1 521 1 is_stmt 1 view -0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880 0000 08B5     		push	{r3, lr}
 881              	.LCFI21:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 3, -8
 884              		.cfi_offset 14, -4
 522:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */
 523:./Core/Src/stm32f4xx_it.c **** 
 524:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream7_IRQn 0 */
 525:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 885              		.loc 1 525 3 view .LVU93
 886 0002 0248     		ldr	r0, .L101
 887 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 888              	.LVL22:
 526:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */
 527:./Core/Src/stm32f4xx_it.c **** 
 528:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream7_IRQn 1 */
 529:./Core/Src/stm32f4xx_it.c **** }
 889              		.loc 1 529 1 is_stmt 0 view .LVU94
 890 0008 08BD     		pop	{r3, pc}
 891              	.L102:
 892 000a 00BF     		.align	2
 893              	.L101:
 894 000c 00000000 		.word	hdma_i2c1_tx
 895              		.cfi_endproc
ARM GAS  /tmp/cchdoX7b.s 			page 25


 896              	.LFE269:
 898              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 899              		.align	1
 900              		.global	DMA2_Stream2_IRQHandler
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 905              	DMA2_Stream2_IRQHandler:
 906              	.LFB270:
 530:./Core/Src/stm32f4xx_it.c **** 
 531:./Core/Src/stm32f4xx_it.c **** /**
 532:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 533:./Core/Src/stm32f4xx_it.c ****   */
 534:./Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 535:./Core/Src/stm32f4xx_it.c **** {
 907              		.loc 1 535 1 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911 0000 08B5     		push	{r3, lr}
 912              	.LCFI22:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 3, -8
 915              		.cfi_offset 14, -4
 536:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 537:./Core/Src/stm32f4xx_it.c **** 
 538:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 539:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 916              		.loc 1 539 3 view .LVU96
 917 0002 0248     		ldr	r0, .L105
 918 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 919              	.LVL23:
 540:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 541:./Core/Src/stm32f4xx_it.c **** 
 542:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 543:./Core/Src/stm32f4xx_it.c **** }
 920              		.loc 1 543 1 is_stmt 0 view .LVU97
 921 0008 08BD     		pop	{r3, pc}
 922              	.L106:
 923 000a 00BF     		.align	2
 924              	.L105:
 925 000c 00000000 		.word	hdma_usart1_rx
 926              		.cfi_endproc
 927              	.LFE270:
 929              		.section	.text.DMA2_Stream4_IRQHandler,"ax",%progbits
 930              		.align	1
 931              		.global	DMA2_Stream4_IRQHandler
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 936              	DMA2_Stream4_IRQHandler:
 937              	.LFB271:
 544:./Core/Src/stm32f4xx_it.c **** 
 545:./Core/Src/stm32f4xx_it.c **** /**
 546:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream4 global interrupt.
 547:./Core/Src/stm32f4xx_it.c ****   */
 548:./Core/Src/stm32f4xx_it.c **** void DMA2_Stream4_IRQHandler(void)
ARM GAS  /tmp/cchdoX7b.s 			page 26


 549:./Core/Src/stm32f4xx_it.c **** {
 938              		.loc 1 549 1 is_stmt 1 view -0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942 0000 08B5     		push	{r3, lr}
 943              	.LCFI23:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 3, -8
 946              		.cfi_offset 14, -4
 550:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream4_IRQn 0 */
 551:./Core/Src/stm32f4xx_it.c **** 
 552:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream4_IRQn 0 */
 553:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 947              		.loc 1 553 3 view .LVU99
 948 0002 0248     		ldr	r0, .L109
 949 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 950              	.LVL24:
 554:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream4_IRQn 1 */
 555:./Core/Src/stm32f4xx_it.c **** 
 556:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream4_IRQn 1 */
 557:./Core/Src/stm32f4xx_it.c **** }
 951              		.loc 1 557 1 is_stmt 0 view .LVU100
 952 0008 08BD     		pop	{r3, pc}
 953              	.L110:
 954 000a 00BF     		.align	2
 955              	.L109:
 956 000c 00000000 		.word	hdma_adc1
 957              		.cfi_endproc
 958              	.LFE271:
 960              		.section	.text.CAN2_TX_IRQHandler,"ax",%progbits
 961              		.align	1
 962              		.global	CAN2_TX_IRQHandler
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 967              	CAN2_TX_IRQHandler:
 968              	.LFB272:
 558:./Core/Src/stm32f4xx_it.c **** 
 559:./Core/Src/stm32f4xx_it.c **** /**
 560:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 TX interrupts.
 561:./Core/Src/stm32f4xx_it.c ****   */
 562:./Core/Src/stm32f4xx_it.c **** void CAN2_TX_IRQHandler(void)
 563:./Core/Src/stm32f4xx_it.c **** {
 969              		.loc 1 563 1 is_stmt 1 view -0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973 0000 08B5     		push	{r3, lr}
 974              	.LCFI24:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 3, -8
 977              		.cfi_offset 14, -4
 564:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_TX_IRQn 0 */
 565:./Core/Src/stm32f4xx_it.c **** 
 566:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_TX_IRQn 0 */
 567:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
ARM GAS  /tmp/cchdoX7b.s 			page 27


 978              		.loc 1 567 3 view .LVU102
 979 0002 0248     		ldr	r0, .L113
 980 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 981              	.LVL25:
 568:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_TX_IRQn 1 */
 569:./Core/Src/stm32f4xx_it.c **** 
 570:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_TX_IRQn 1 */
 571:./Core/Src/stm32f4xx_it.c **** }
 982              		.loc 1 571 1 is_stmt 0 view .LVU103
 983 0008 08BD     		pop	{r3, pc}
 984              	.L114:
 985 000a 00BF     		.align	2
 986              	.L113:
 987 000c 00000000 		.word	hcan2
 988              		.cfi_endproc
 989              	.LFE272:
 991              		.section	.text.CAN2_RX0_IRQHandler,"ax",%progbits
 992              		.align	1
 993              		.global	CAN2_RX0_IRQHandler
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 998              	CAN2_RX0_IRQHandler:
 999              	.LFB273:
 572:./Core/Src/stm32f4xx_it.c **** 
 573:./Core/Src/stm32f4xx_it.c **** /**
 574:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX0 interrupts.
 575:./Core/Src/stm32f4xx_it.c ****   */
 576:./Core/Src/stm32f4xx_it.c **** void CAN2_RX0_IRQHandler(void)
 577:./Core/Src/stm32f4xx_it.c **** {
 1000              		.loc 1 577 1 is_stmt 1 view -0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004 0000 08B5     		push	{r3, lr}
 1005              	.LCFI25:
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 3, -8
 1008              		.cfi_offset 14, -4
 578:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 0 */
 579:./Core/Src/stm32f4xx_it.c **** 
 580:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 0 */
 581:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 1009              		.loc 1 581 3 view .LVU105
 1010 0002 0248     		ldr	r0, .L117
 1011 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 1012              	.LVL26:
 582:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 1 */
 583:./Core/Src/stm32f4xx_it.c **** 
 584:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 1 */
 585:./Core/Src/stm32f4xx_it.c **** }
 1013              		.loc 1 585 1 is_stmt 0 view .LVU106
 1014 0008 08BD     		pop	{r3, pc}
 1015              	.L118:
 1016 000a 00BF     		.align	2
 1017              	.L117:
 1018 000c 00000000 		.word	hcan2
ARM GAS  /tmp/cchdoX7b.s 			page 28


 1019              		.cfi_endproc
 1020              	.LFE273:
 1022              		.section	.text.CAN2_RX1_IRQHandler,"ax",%progbits
 1023              		.align	1
 1024              		.global	CAN2_RX1_IRQHandler
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1029              	CAN2_RX1_IRQHandler:
 1030              	.LFB274:
 586:./Core/Src/stm32f4xx_it.c **** 
 587:./Core/Src/stm32f4xx_it.c **** /**
 588:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX1 interrupt.
 589:./Core/Src/stm32f4xx_it.c ****   */
 590:./Core/Src/stm32f4xx_it.c **** void CAN2_RX1_IRQHandler(void)
 591:./Core/Src/stm32f4xx_it.c **** {
 1031              		.loc 1 591 1 is_stmt 1 view -0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035 0000 08B5     		push	{r3, lr}
 1036              	.LCFI26:
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 3, -8
 1039              		.cfi_offset 14, -4
 592:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX1_IRQn 0 */
 593:./Core/Src/stm32f4xx_it.c **** 
 594:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX1_IRQn 0 */
 595:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 1040              		.loc 1 595 3 view .LVU108
 1041 0002 0248     		ldr	r0, .L121
 1042 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 1043              	.LVL27:
 596:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX1_IRQn 1 */
 597:./Core/Src/stm32f4xx_it.c **** 
 598:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX1_IRQn 1 */
 599:./Core/Src/stm32f4xx_it.c **** }
 1044              		.loc 1 599 1 is_stmt 0 view .LVU109
 1045 0008 08BD     		pop	{r3, pc}
 1046              	.L122:
 1047 000a 00BF     		.align	2
 1048              	.L121:
 1049 000c 00000000 		.word	hcan2
 1050              		.cfi_endproc
 1051              	.LFE274:
 1053              		.section	.text.CAN2_SCE_IRQHandler,"ax",%progbits
 1054              		.align	1
 1055              		.global	CAN2_SCE_IRQHandler
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1060              	CAN2_SCE_IRQHandler:
 1061              	.LFB275:
 600:./Core/Src/stm32f4xx_it.c **** 
 601:./Core/Src/stm32f4xx_it.c **** /**
 602:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 SCE interrupt.
 603:./Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/cchdoX7b.s 			page 29


 604:./Core/Src/stm32f4xx_it.c **** void CAN2_SCE_IRQHandler(void)
 605:./Core/Src/stm32f4xx_it.c **** {
 1062              		.loc 1 605 1 is_stmt 1 view -0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066 0000 08B5     		push	{r3, lr}
 1067              	.LCFI27:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 3, -8
 1070              		.cfi_offset 14, -4
 606:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_SCE_IRQn 0 */
 607:./Core/Src/stm32f4xx_it.c **** 
 608:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_SCE_IRQn 0 */
 609:./Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 1071              		.loc 1 609 3 view .LVU111
 1072 0002 0248     		ldr	r0, .L125
 1073 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 1074              	.LVL28:
 610:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_SCE_IRQn 1 */
 611:./Core/Src/stm32f4xx_it.c **** 
 612:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_SCE_IRQn 1 */
 613:./Core/Src/stm32f4xx_it.c **** }
 1075              		.loc 1 613 1 is_stmt 0 view .LVU112
 1076 0008 08BD     		pop	{r3, pc}
 1077              	.L126:
 1078 000a 00BF     		.align	2
 1079              	.L125:
 1080 000c 00000000 		.word	hcan2
 1081              		.cfi_endproc
 1082              	.LFE275:
 1084              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 1085              		.align	1
 1086              		.global	DMA2_Stream7_IRQHandler
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1091              	DMA2_Stream7_IRQHandler:
 1092              	.LFB276:
 614:./Core/Src/stm32f4xx_it.c **** 
 615:./Core/Src/stm32f4xx_it.c **** /**
 616:./Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 617:./Core/Src/stm32f4xx_it.c ****   */
 618:./Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 619:./Core/Src/stm32f4xx_it.c **** {
 1093              		.loc 1 619 1 is_stmt 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097 0000 08B5     		push	{r3, lr}
 1098              	.LCFI28:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 3, -8
 1101              		.cfi_offset 14, -4
 620:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 621:./Core/Src/stm32f4xx_it.c **** 
 622:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
ARM GAS  /tmp/cchdoX7b.s 			page 30


 623:./Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 1102              		.loc 1 623 3 view .LVU114
 1103 0002 0248     		ldr	r0, .L129
 1104 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 1105              	.LVL29:
 624:./Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 625:./Core/Src/stm32f4xx_it.c **** 
 626:./Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 627:./Core/Src/stm32f4xx_it.c **** }
 1106              		.loc 1 627 1 is_stmt 0 view .LVU115
 1107 0008 08BD     		pop	{r3, pc}
 1108              	.L130:
 1109 000a 00BF     		.align	2
 1110              	.L129:
 1111 000c 00000000 		.word	hdma_usart1_tx
 1112              		.cfi_endproc
 1113              	.LFE276:
 1115              		.text
 1116              	.Letext0:
 1117              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 1118              		.file 3 "./Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1119              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1120              		.file 5 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1121              		.file 6 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1122              		.file 7 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1123              		.file 8 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1124              		.file 9 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1125              		.file 10 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1126              		.file 11 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1127              		.file 12 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/cchdoX7b.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
     /tmp/cchdoX7b.s:21     .text.NMI_Handler:00000000 $t
     /tmp/cchdoX7b.s:27     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/cchdoX7b.s:44     .text.HardFault_Handler:00000000 $t
     /tmp/cchdoX7b.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/cchdoX7b.s:67     .text.MemManage_Handler:00000000 $t
     /tmp/cchdoX7b.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/cchdoX7b.s:90     .text.BusFault_Handler:00000000 $t
     /tmp/cchdoX7b.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/cchdoX7b.s:113    .text.UsageFault_Handler:00000000 $t
     /tmp/cchdoX7b.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/cchdoX7b.s:136    .text.SVC_Handler:00000000 $t
     /tmp/cchdoX7b.s:142    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/cchdoX7b.s:155    .text.DebugMon_Handler:00000000 $t
     /tmp/cchdoX7b.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/cchdoX7b.s:174    .text.PendSV_Handler:00000000 $t
     /tmp/cchdoX7b.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/cchdoX7b.s:193    .text.SysTick_Handler:00000000 $t
     /tmp/cchdoX7b.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/cchdoX7b.s:212    .text.DMA1_Stream0_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:218    .text.DMA1_Stream0_IRQHandler:00000000 DMA1_Stream0_IRQHandler
     /tmp/cchdoX7b.s:238    .text.DMA1_Stream0_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:243    .text.DMA1_Stream1_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:249    .text.DMA1_Stream1_IRQHandler:00000000 DMA1_Stream1_IRQHandler
     /tmp/cchdoX7b.s:269    .text.DMA1_Stream1_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:274    .text.DMA1_Stream4_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:280    .text.DMA1_Stream4_IRQHandler:00000000 DMA1_Stream4_IRQHandler
     /tmp/cchdoX7b.s:300    .text.DMA1_Stream4_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:305    .text.DMA1_Stream5_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:311    .text.DMA1_Stream5_IRQHandler:00000000 DMA1_Stream5_IRQHandler
     /tmp/cchdoX7b.s:331    .text.DMA1_Stream5_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:336    .text.DMA1_Stream6_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:342    .text.DMA1_Stream6_IRQHandler:00000000 DMA1_Stream6_IRQHandler
     /tmp/cchdoX7b.s:362    .text.DMA1_Stream6_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:367    .text.ADC_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:373    .text.ADC_IRQHandler:00000000 ADC_IRQHandler
     /tmp/cchdoX7b.s:393    .text.ADC_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:398    .text.CAN1_TX_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:404    .text.CAN1_TX_IRQHandler:00000000 CAN1_TX_IRQHandler
     /tmp/cchdoX7b.s:424    .text.CAN1_TX_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:429    .text.CAN1_RX0_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:435    .text.CAN1_RX0_IRQHandler:00000000 CAN1_RX0_IRQHandler
     /tmp/cchdoX7b.s:455    .text.CAN1_RX0_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:460    .text.CAN1_RX1_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:466    .text.CAN1_RX1_IRQHandler:00000000 CAN1_RX1_IRQHandler
     /tmp/cchdoX7b.s:486    .text.CAN1_RX1_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:491    .text.CAN1_SCE_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:497    .text.CAN1_SCE_IRQHandler:00000000 CAN1_SCE_IRQHandler
     /tmp/cchdoX7b.s:517    .text.CAN1_SCE_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:522    .text.TIM4_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:528    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/cchdoX7b.s:548    .text.TIM4_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:553    .text.I2C1_EV_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:559    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
     /tmp/cchdoX7b.s:579    .text.I2C1_EV_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:584    .text.I2C1_ER_IRQHandler:00000000 $t
ARM GAS  /tmp/cchdoX7b.s 			page 32


     /tmp/cchdoX7b.s:590    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
     /tmp/cchdoX7b.s:610    .text.I2C1_ER_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:615    .text.I2C2_EV_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:621    .text.I2C2_EV_IRQHandler:00000000 I2C2_EV_IRQHandler
     /tmp/cchdoX7b.s:641    .text.I2C2_EV_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:646    .text.I2C2_ER_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:652    .text.I2C2_ER_IRQHandler:00000000 I2C2_ER_IRQHandler
     /tmp/cchdoX7b.s:672    .text.I2C2_ER_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:677    .text.SPI2_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:683    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
     /tmp/cchdoX7b.s:703    .text.SPI2_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:708    .text.USART1_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:714    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
     /tmp/cchdoX7b.s:734    .text.USART1_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:739    .text.USART2_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:745    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
     /tmp/cchdoX7b.s:765    .text.USART2_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:770    .text.USART3_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:776    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
     /tmp/cchdoX7b.s:796    .text.USART3_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:801    .text.TIM8_UP_TIM13_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:807    .text.TIM8_UP_TIM13_IRQHandler:00000000 TIM8_UP_TIM13_IRQHandler
     /tmp/cchdoX7b.s:831    .text.TIM8_UP_TIM13_IRQHandler:00000010 $d
     /tmp/cchdoX7b.s:837    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:843    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000000 TIM8_TRG_COM_TIM14_IRQHandler
     /tmp/cchdoX7b.s:863    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:868    .text.DMA1_Stream7_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:874    .text.DMA1_Stream7_IRQHandler:00000000 DMA1_Stream7_IRQHandler
     /tmp/cchdoX7b.s:894    .text.DMA1_Stream7_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:899    .text.DMA2_Stream2_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:905    .text.DMA2_Stream2_IRQHandler:00000000 DMA2_Stream2_IRQHandler
     /tmp/cchdoX7b.s:925    .text.DMA2_Stream2_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:930    .text.DMA2_Stream4_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:936    .text.DMA2_Stream4_IRQHandler:00000000 DMA2_Stream4_IRQHandler
     /tmp/cchdoX7b.s:956    .text.DMA2_Stream4_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:961    .text.CAN2_TX_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:967    .text.CAN2_TX_IRQHandler:00000000 CAN2_TX_IRQHandler
     /tmp/cchdoX7b.s:987    .text.CAN2_TX_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:992    .text.CAN2_RX0_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:998    .text.CAN2_RX0_IRQHandler:00000000 CAN2_RX0_IRQHandler
     /tmp/cchdoX7b.s:1018   .text.CAN2_RX0_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:1023   .text.CAN2_RX1_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:1029   .text.CAN2_RX1_IRQHandler:00000000 CAN2_RX1_IRQHandler
     /tmp/cchdoX7b.s:1049   .text.CAN2_RX1_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:1054   .text.CAN2_SCE_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:1060   .text.CAN2_SCE_IRQHandler:00000000 CAN2_SCE_IRQHandler
     /tmp/cchdoX7b.s:1080   .text.CAN2_SCE_IRQHandler:0000000c $d
     /tmp/cchdoX7b.s:1085   .text.DMA2_Stream7_IRQHandler:00000000 $t
     /tmp/cchdoX7b.s:1091   .text.DMA2_Stream7_IRQHandler:00000000 DMA2_Stream7_IRQHandler
     /tmp/cchdoX7b.s:1111   .text.DMA2_Stream7_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_i2c1_rx
hdma_usart3_rx
hdma_usart3_tx
hdma_usart2_rx
ARM GAS  /tmp/cchdoX7b.s 			page 33


hdma_usart2_tx
HAL_ADC_IRQHandler
hadc1
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim4
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
hi2c2
HAL_SPI_IRQHandler
hspi2
HAL_UART_IRQHandler
huart1
huart2
huart3
htim8
htim13
hdma_i2c1_tx
hdma_usart1_rx
hdma_adc1
hcan2
hdma_usart1_tx
