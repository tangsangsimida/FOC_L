ARM GAS  /tmp/ccN0GLmg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Thread_cmd.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./app/Threads/Thread_cmd/Thread_cmd.c"
  20              		.section	.rodata.Get_Cmd.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 7365745F 		.ascii	"set_angle:\000"
  23      616E676C 
  23      653A00
  24 000b 00       		.align	2
  25              	.LC1:
  26 000c 7365745F 		.ascii	"set_torque:\000"
  26      746F7271 
  26      75653A00 
  27              		.section	.text.Get_Cmd,"ax",%progbits
  28              		.align	1
  29              		.global	Get_Cmd
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	Get_Cmd:
  35              	.LVL0:
  36              	.LFB250:
   1:./app/Threads/Thread_cmd/Thread_cmd.c **** /**
   2:./app/Threads/Thread_cmd/Thread_cmd.c ****   ******************************************************************************
   3:./app/Threads/Thread_cmd/Thread_cmd.c ****   * @file           : Thread_template.c
   4:./app/Threads/Thread_cmd/Thread_cmd.c ****   * @brief          : 降低代码耦合
   5:./app/Threads/Thread_cmd/Thread_cmd.c ****   ******************************************************************************
   6:./app/Threads/Thread_cmd/Thread_cmd.c ****   * @author			  : Dennis_Re_Yoonjiho
   7:./app/Threads/Thread_cmd/Thread_cmd.c ****   * @attention		:
   8:./app/Threads/Thread_cmd/Thread_cmd.c ****   *	
   9:./app/Threads/Thread_cmd/Thread_cmd.c ****   * 						   	Copyright (c) 2021 Dennis_Re_Yoonjiho
  10:./app/Threads/Thread_cmd/Thread_cmd.c ****   ******************************************************************************
  11:./app/Threads/Thread_cmd/Thread_cmd.c ****   */
  12:./app/Threads/Thread_cmd/Thread_cmd.c **** #include "Thread_cmd.h"
  13:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  14:./app/Threads/Thread_cmd/Thread_cmd.c **** TX_THREAD Thread_Cmd;						//实例化线程句柄,线程相关信息
  15:./app/Threads/Thread_cmd/Thread_cmd.c **** Thread_Cmd_parama Thread_Cmd_parama1 = {
  16:./app/Threads/Thread_cmd/Thread_cmd.c ****     .Cmd_Param_last = 0,
  17:./app/Threads/Thread_cmd/Thread_cmd.c **** };	//实例化入口函数的参数
  18:./app/Threads/Thread_cmd/Thread_cmd.c **** 
ARM GAS  /tmp/ccN0GLmg.s 			page 2


  19:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  20:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  21:./app/Threads/Thread_cmd/Thread_cmd.c **** struct UART_RECEIVE_IDLE_DataStructure
  22:./app/Threads/Thread_cmd/Thread_cmd.c **** {
  23:./app/Threads/Thread_cmd/Thread_cmd.c **** 	volatile uint8_t rxlen; 
  24:./app/Threads/Thread_cmd/Thread_cmd.c **** 	volatile uint8_t rxok; 
  25:./app/Threads/Thread_cmd/Thread_cmd.c **** 	uint8_t rxbuf[UART_RECEIVE_IDLE_RX_MAXLEN]; 
  26:./app/Threads/Thread_cmd/Thread_cmd.c **** } Uart_Receive_Data ={ 0, 1 };
  27:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  28:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  29:./app/Threads/Thread_cmd/Thread_cmd.c **** int8_t Get_Cmd(UART_HandleTypeDef *huart, ULONG THREAD_CMD)
  30:./app/Threads/Thread_cmd/Thread_cmd.c **** {
  37              		.loc 1 30 1 view -0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 256
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  31:./app/Threads/Thread_cmd/Thread_cmd.c ****     Thread_Cmd_parama * Thread_Cmd = (Thread_Cmd_parama *)THREAD_CMD;
  41              		.loc 1 31 5 view .LVU1
  32:./app/Threads/Thread_cmd/Thread_cmd.c **** 	int8_t nret = 0;
  42              		.loc 1 32 2 view .LVU2
  33:./app/Threads/Thread_cmd/Thread_cmd.c **** 	if (Uart_Receive_Data.rxok == 0)
  43              		.loc 1 33 2 view .LVU3
  44              		.loc 1 33 23 is_stmt 0 view .LVU4
  45 0000 2C4B     		ldr	r3, .L10
  46 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  47              		.loc 1 33 5 view .LVU5
  48 0004 002B     		cmp	r3, #0
  49 0006 51D0     		beq	.L5
  30:./app/Threads/Thread_cmd/Thread_cmd.c ****     Thread_Cmd_parama * Thread_Cmd = (Thread_Cmd_parama *)THREAD_CMD;
  50              		.loc 1 30 1 view .LVU6
  51 0008 F0B5     		push	{r4, r5, r6, r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 20
  54              		.cfi_offset 4, -20
  55              		.cfi_offset 5, -16
  56              		.cfi_offset 6, -12
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 000a C1B0     		sub	sp, sp, #260
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 280
  62 000c 0646     		mov	r6, r0
  63 000e 0C46     		mov	r4, r1
  34:./app/Threads/Thread_cmd/Thread_cmd.c **** 	{
  35:./app/Threads/Thread_cmd/Thread_cmd.c **** 		nret = -1;
  36:./app/Threads/Thread_cmd/Thread_cmd.c **** 	}
  37:./app/Threads/Thread_cmd/Thread_cmd.c **** 	else
  38:./app/Threads/Thread_cmd/Thread_cmd.c **** 	{
  39:./app/Threads/Thread_cmd/Thread_cmd.c **** 		if (nret == 0)
  64              		.loc 1 39 3 is_stmt 1 view .LVU7
  65              	.LBB2:
  40:./app/Threads/Thread_cmd/Thread_cmd.c **** 		{
  41:./app/Threads/Thread_cmd/Thread_cmd.c ****             //数据接收成功，清洗数据
  42:./app/Threads/Thread_cmd/Thread_cmd.c ****             char command[UART_RECEIVE_IDLE_RX_MAXLEN] = {0};
  66              		.loc 1 42 13 view .LVU8
  67              		.loc 1 42 18 is_stmt 0 view .LVU9
  68 0010 4FF48072 		mov	r2, #256
ARM GAS  /tmp/ccN0GLmg.s 			page 3


  69 0014 0021     		movs	r1, #0
  70              	.LVL1:
  71              		.loc 1 42 18 view .LVU10
  72 0016 6846     		mov	r0, sp
  73              	.LVL2:
  74              		.loc 1 42 18 view .LVU11
  75 0018 FFF7FEFF 		bl	memset
  76              	.LVL3:
  43:./app/Threads/Thread_cmd/Thread_cmd.c ****             memcpy(command, Uart_Receive_Data.rxbuf, Uart_Receive_Data.rxlen);
  77              		.loc 1 43 13 is_stmt 1 view .LVU12
  78              		.loc 1 43 71 is_stmt 0 view .LVU13
  79 001c 2549     		ldr	r1, .L10
  80 001e 11F8022B 		ldrb	r2, [r1], #2	@ zero_extendqisi2
  81              		.loc 1 43 13 view .LVU14
  82 0022 6846     		mov	r0, sp
  83 0024 FFF7FEFF 		bl	memcpy
  84              	.LVL4:
  44:./app/Threads/Thread_cmd/Thread_cmd.c ****             char *angle_str = NULL;
  85              		.loc 1 44 13 is_stmt 1 view .LVU15
  45:./app/Threads/Thread_cmd/Thread_cmd.c **** 			char *torque_str = NULL;
  86              		.loc 1 45 4 view .LVU16
  46:./app/Threads/Thread_cmd/Thread_cmd.c ****             char *angle_num = NULL;
  87              		.loc 1 46 13 view .LVU17
  47:./app/Threads/Thread_cmd/Thread_cmd.c ****             char *torque_num = NULL;
  88              		.loc 1 47 13 view .LVU18
  48:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  49:./app/Threads/Thread_cmd/Thread_cmd.c ****             angle_str = strstr(command, "set_angle:"); // 找到 "set_angle:" 的位置
  89              		.loc 1 49 13 view .LVU19
  90              		.loc 1 49 25 is_stmt 0 view .LVU20
  91 0028 2349     		ldr	r1, .L10+4
  92 002a 6846     		mov	r0, sp
  93 002c FFF7FEFF 		bl	strstr
  94              	.LVL5:
  50:./app/Threads/Thread_cmd/Thread_cmd.c ****             if (angle_str != NULL) {
  95              		.loc 1 50 13 is_stmt 1 view .LVU21
  96              		.loc 1 50 16 is_stmt 0 view .LVU22
  97 0030 0246     		mov	r2, r0
  98 0032 68B1     		cbz	r0, .L3
  99              	.LBB3:
  51:./app/Threads/Thread_cmd/Thread_cmd.c ****                 strcpy(Thread_Cmd->Cmd_Name_last, "set_angle:"); // 保存命令名称
 100              		.loc 1 51 17 is_stmt 1 view .LVU23
 101 0034 204B     		ldr	r3, .L10+4
 102 0036 03CB     		ldmia	r3!, {r0, r1}
 103              	.LVL6:
 104              		.loc 1 51 17 is_stmt 0 view .LVU24
 105 0038 2060     		str	r0, [r4]	@ unaligned
 106 003a 6160     		str	r1, [r4, #4]	@ unaligned
 107 003c 1988     		ldrh	r1, [r3]	@ unaligned
 108 003e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 109 0040 2181     		strh	r1, [r4, #8]	@ unaligned
 110 0042 A372     		strb	r3, [r4, #10]
  52:./app/Threads/Thread_cmd/Thread_cmd.c ****                 angle_num = angle_str + strlen("set_angle:"); // 指向角度值的起始位置
 111              		.loc 1 52 17 is_stmt 1 view .LVU25
 112              	.LVL7:
  53:./app/Threads/Thread_cmd/Thread_cmd.c ****                 double angle = atof(angle_num); // 将字符串转换为浮点数
 113              		.loc 1 53 17 view .LVU26
 114              		.loc 1 53 32 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccN0GLmg.s 			page 4


 115 0044 02F10A00 		add	r0, r2, #10
 116              	.LVL8:
 117              		.loc 1 53 32 view .LVU28
 118 0048 FFF7FEFF 		bl	atof
 119              	.LVL9:
  54:./app/Threads/Thread_cmd/Thread_cmd.c ****                 Thread_Cmd->Cmd_Param_last = angle; // 保存角度值
 120              		.loc 1 54 17 is_stmt 1 view .LVU29
 121              		.loc 1 54 44 is_stmt 0 view .LVU30
 122 004c 84ED080B 		vstr.64	d0, [r4, #32]
 123              	.LVL10:
 124              	.L3:
 125              		.loc 1 54 44 view .LVU31
 126              	.LBE3:
  55:./app/Threads/Thread_cmd/Thread_cmd.c ****             }
  56:./app/Threads/Thread_cmd/Thread_cmd.c **** 			torque_str = strstr(command, "set_torque:"); // 找到 "set_torque:" 的位置
 127              		.loc 1 56 4 is_stmt 1 view .LVU32
 128              		.loc 1 56 17 is_stmt 0 view .LVU33
 129 0050 1A49     		ldr	r1, .L10+8
 130 0052 6846     		mov	r0, sp
 131 0054 FFF7FEFF 		bl	strstr
 132              	.LVL11:
  57:./app/Threads/Thread_cmd/Thread_cmd.c ****             if (torque_str != NULL) {
 133              		.loc 1 57 13 is_stmt 1 view .LVU34
 134              		.loc 1 57 16 is_stmt 0 view .LVU35
 135 0058 0546     		mov	r5, r0
 136 005a 50B1     		cbz	r0, .L4
 137              	.LBB4:
  58:./app/Threads/Thread_cmd/Thread_cmd.c ****                 strcpy(Thread_Cmd->Cmd_Name_last, "set_torque:"); // 保存命令名称
 138              		.loc 1 58 17 is_stmt 1 view .LVU36
 139 005c 174B     		ldr	r3, .L10+8
 140 005e 07CB     		ldmia	r3!, {r0, r1, r2}
 141              	.LVL12:
 142              		.loc 1 58 17 is_stmt 0 view .LVU37
 143 0060 2060     		str	r0, [r4]	@ unaligned
 144 0062 6160     		str	r1, [r4, #4]	@ unaligned
 145 0064 A260     		str	r2, [r4, #8]	@ unaligned
  59:./app/Threads/Thread_cmd/Thread_cmd.c ****                 torque_num = torque_str + strlen("set_torque:"); // 指向力矩值的起始位置
 146              		.loc 1 59 17 is_stmt 1 view .LVU38
 147              	.LVL13:
  60:./app/Threads/Thread_cmd/Thread_cmd.c ****                 double torque = atof(torque_num); // 将字符串转换为浮点数
 148              		.loc 1 60 17 view .LVU39
 149              		.loc 1 60 33 is_stmt 0 view .LVU40
 150 0066 05F10B00 		add	r0, r5, #11
 151              	.LVL14:
 152              		.loc 1 60 33 view .LVU41
 153 006a FFF7FEFF 		bl	atof
 154              	.LVL15:
  61:./app/Threads/Thread_cmd/Thread_cmd.c ****                 Thread_Cmd->Cmd_Param_last = torque; // 保存力矩值
 155              		.loc 1 61 17 is_stmt 1 view .LVU42
 156              		.loc 1 61 44 is_stmt 0 view .LVU43
 157 006e 84ED080B 		vstr.64	d0, [r4, #32]
 158              	.LVL16:
 159              	.L4:
 160              		.loc 1 61 44 view .LVU44
 161              	.LBE4:
  62:./app/Threads/Thread_cmd/Thread_cmd.c ****             }
  63:./app/Threads/Thread_cmd/Thread_cmd.c ****             //这个地方不要直接打印参数,建议到线程中去处理
ARM GAS  /tmp/ccN0GLmg.s 			page 5


  64:./app/Threads/Thread_cmd/Thread_cmd.c ****             memset(command, 0, UART_RECEIVE_IDLE_RX_MAXLEN); // 清空接收缓存
 162              		.loc 1 64 13 is_stmt 1 view .LVU45
 163 0072 4FF48077 		mov	r7, #256
 164 0076 3A46     		mov	r2, r7
 165 0078 0021     		movs	r1, #0
 166 007a 6846     		mov	r0, sp
 167 007c FFF7FEFF 		bl	memset
 168              	.LVL17:
 169              	.LBE2:
  65:./app/Threads/Thread_cmd/Thread_cmd.c **** 		}
  66:./app/Threads/Thread_cmd/Thread_cmd.c **** 		Uart_Receive_Data.rxok = 0;
 170              		.loc 1 66 3 view .LVU46
 171              		.loc 1 66 26 is_stmt 0 view .LVU47
 172 0080 0C4D     		ldr	r5, .L10
 173              	.LVL18:
 174              		.loc 1 66 26 view .LVU48
 175 0082 0024     		movs	r4, #0
 176              	.LVL19:
 177              		.loc 1 66 26 view .LVU49
 178 0084 6C70     		strb	r4, [r5, #1]
  67:./app/Threads/Thread_cmd/Thread_cmd.c **** 		__HAL_UART_ENABLE_IT(huart, UART_IT_IDLE);
 179              		.loc 1 67 3 is_stmt 1 view .LVU50
 180 0086 3268     		ldr	r2, [r6]
 181 0088 D368     		ldr	r3, [r2, #12]
 182 008a 43F01003 		orr	r3, r3, #16
 183 008e D360     		str	r3, [r2, #12]
  68:./app/Threads/Thread_cmd/Thread_cmd.c **** 		memset(Uart_Receive_Data.rxbuf, 0, UART_RECEIVE_IDLE_RX_MAXLEN);
 184              		.loc 1 68 3 view .LVU51
 185 0090 0235     		adds	r5, r5, #2
 186 0092 3A46     		mov	r2, r7
 187 0094 2146     		mov	r1, r4
 188 0096 2846     		mov	r0, r5
 189 0098 FFF7FEFF 		bl	memset
 190              	.LVL20:
  69:./app/Threads/Thread_cmd/Thread_cmd.c **** 		HAL_UART_Receive_DMA(huart, Uart_Receive_Data.rxbuf, UART_RECEIVE_IDLE_RX_MAXLEN);
 191              		.loc 1 69 3 view .LVU52
 192 009c 3A46     		mov	r2, r7
 193 009e 2946     		mov	r1, r5
 194 00a0 3046     		mov	r0, r6
 195 00a2 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 196              	.LVL21:
  32:./app/Threads/Thread_cmd/Thread_cmd.c **** 	if (Uart_Receive_Data.rxok == 0)
 197              		.loc 1 32 9 is_stmt 0 view .LVU53
 198 00a6 2046     		mov	r0, r4
 199              	.LVL22:
  70:./app/Threads/Thread_cmd/Thread_cmd.c **** 	}
  71:./app/Threads/Thread_cmd/Thread_cmd.c ****     // printf("Get_Cmd_nret: %d\r\n",nret);
  72:./app/Threads/Thread_cmd/Thread_cmd.c **** 	return nret;
 200              		.loc 1 72 2 is_stmt 1 view .LVU54
  73:./app/Threads/Thread_cmd/Thread_cmd.c **** }
 201              		.loc 1 73 1 is_stmt 0 view .LVU55
 202 00a8 41B0     		add	sp, sp, #260
 203              	.LCFI2:
 204              		.cfi_def_cfa_offset 20
 205              		@ sp needed
 206 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 207              	.LVL23:
ARM GAS  /tmp/ccN0GLmg.s 			page 6


 208              	.L5:
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 0
 211              		.cfi_restore 4
 212              		.cfi_restore 5
 213              		.cfi_restore 6
 214              		.cfi_restore 7
 215              		.cfi_restore 14
  35:./app/Threads/Thread_cmd/Thread_cmd.c **** 	}
 216              		.loc 1 35 8 view .LVU56
 217 00ac 4FF0FF30 		mov	r0, #-1
 218              	.LVL24:
  72:./app/Threads/Thread_cmd/Thread_cmd.c **** }
 219              		.loc 1 72 2 is_stmt 1 view .LVU57
 220              		.loc 1 73 1 is_stmt 0 view .LVU58
 221 00b0 7047     		bx	lr
 222              	.L11:
 223 00b2 00BF     		.align	2
 224              	.L10:
 225 00b4 00000000 		.word	Uart_Receive_Data
 226 00b8 00000000 		.word	.LC0
 227 00bc 0C000000 		.word	.LC1
 228              		.cfi_endproc
 229              	.LFE250:
 231              		.section	.text.BSP_UART_IDLE_CallBack,"ax",%progbits
 232              		.align	1
 233              		.global	BSP_UART_IDLE_CallBack
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	BSP_UART_IDLE_CallBack:
 239              	.LVL25:
 240              	.LFB251:
  74:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  75:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  76:./app/Threads/Thread_cmd/Thread_cmd.c **** void BSP_UART_IDLE_CallBack(UART_HandleTypeDef *huart)
  77:./app/Threads/Thread_cmd/Thread_cmd.c **** {
 241              		.loc 1 77 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 8
 244              		@ frame_needed = 0, uses_anonymous_args = 0
  78:./app/Threads/Thread_cmd/Thread_cmd.c **** 	if ((__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) != RESET))
 245              		.loc 1 78 2 view .LVU60
 246              		.loc 1 78 7 is_stmt 0 view .LVU61
 247 0000 0368     		ldr	r3, [r0]
 248 0002 1B68     		ldr	r3, [r3]
 249              		.loc 1 78 5 view .LVU62
 250 0004 13F0100F 		tst	r3, #16
 251 0008 00D1     		bne	.L18
 252 000a 7047     		bx	lr
 253              	.L18:
  77:./app/Threads/Thread_cmd/Thread_cmd.c **** 	if ((__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) != RESET))
 254              		.loc 1 77 1 view .LVU63
 255 000c 10B5     		push	{r4, lr}
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 4, -8
ARM GAS  /tmp/ccN0GLmg.s 			page 7


 259              		.cfi_offset 14, -4
 260 000e 82B0     		sub	sp, sp, #8
 261              	.LCFI5:
 262              		.cfi_def_cfa_offset 16
 263 0010 0446     		mov	r4, r0
  79:./app/Threads/Thread_cmd/Thread_cmd.c **** 	{
  80:./app/Threads/Thread_cmd/Thread_cmd.c **** 		HAL_UART_DMAStop(huart);
 264              		.loc 1 80 3 is_stmt 1 view .LVU64
 265 0012 FFF7FEFF 		bl	HAL_UART_DMAStop
 266              	.LVL26:
  81:./app/Threads/Thread_cmd/Thread_cmd.c **** 		__HAL_UART_CLEAR_IDLEFLAG(huart);
 267              		.loc 1 81 3 view .LVU65
 268              	.LBB5:
 269              		.loc 1 81 3 view .LVU66
 270 0016 0023     		movs	r3, #0
 271 0018 0193     		str	r3, [sp, #4]
 272              		.loc 1 81 3 view .LVU67
 273 001a 2368     		ldr	r3, [r4]
 274 001c 1A68     		ldr	r2, [r3]
 275 001e 0192     		str	r2, [sp, #4]
 276              		.loc 1 81 3 view .LVU68
 277 0020 5B68     		ldr	r3, [r3, #4]
 278 0022 0193     		str	r3, [sp, #4]
 279              		.loc 1 81 3 view .LVU69
 280 0024 019B     		ldr	r3, [sp, #4]
 281              	.LBE5:
 282              		.loc 1 81 3 view .LVU70
  82:./app/Threads/Thread_cmd/Thread_cmd.c **** 		Uart_Receive_Data.rxlen = UART_RECEIVE_IDLE_RX_MAXLEN - __HAL_DMA_GET_COUNTER(huart->hdmarx);
 283              		.loc 1 82 3 view .LVU71
 284              		.loc 1 82 59 is_stmt 0 view .LVU72
 285 0026 E36B     		ldr	r3, [r4, #60]
 286 0028 1B68     		ldr	r3, [r3]
 287 002a 5B68     		ldr	r3, [r3, #4]
 288              		.loc 1 82 57 view .LVU73
 289 002c 5B42     		rsbs	r3, r3, #0
 290 002e DBB2     		uxtb	r3, r3
 291              		.loc 1 82 27 view .LVU74
 292 0030 024A     		ldr	r2, .L19
 293 0032 1370     		strb	r3, [r2]
  83:./app/Threads/Thread_cmd/Thread_cmd.c **** 		Uart_Receive_Data.rxok = 1;
 294              		.loc 1 83 3 is_stmt 1 view .LVU75
 295              		.loc 1 83 26 is_stmt 0 view .LVU76
 296 0034 0123     		movs	r3, #1
 297 0036 5370     		strb	r3, [r2, #1]
  84:./app/Threads/Thread_cmd/Thread_cmd.c **** 	}
  85:./app/Threads/Thread_cmd/Thread_cmd.c **** }
 298              		.loc 1 85 1 view .LVU77
 299 0038 02B0     		add	sp, sp, #8
 300              	.LCFI6:
 301              		.cfi_def_cfa_offset 8
 302              		@ sp needed
 303 003a 10BD     		pop	{r4, pc}
 304              	.LVL27:
 305              	.L20:
 306              		.loc 1 85 1 view .LVU78
 307              		.align	2
 308              	.L19:
ARM GAS  /tmp/ccN0GLmg.s 			page 8


 309 003c 00000000 		.word	Uart_Receive_Data
 310              		.cfi_endproc
 311              	.LFE251:
 313              		.section	.rodata.Thread_Cmd_Entry.str1.4,"aMS",%progbits,1
 314              		.align	2
 315              	.LC2:
 316 0000 436D645F 		.ascii	"Cmd_Name_last: %s\015\012\000"
 316      4E616D65 
 316      5F6C6173 
 316      743A2025 
 316      730D0A00 
 317              		.align	2
 318              	.LC3:
 319 0014 436D645F 		.ascii	"Cmd_Param_last: %lf\015\012\000"
 319      50617261 
 319      6D5F6C61 
 319      73743A20 
 319      256C660D 
 320              		.section	.text.Thread_Cmd_Entry,"ax",%progbits
 321              		.align	1
 322              		.global	Thread_Cmd_Entry
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	Thread_Cmd_Entry:
 328              	.LVL28:
 329              	.LFB252:
  86:./app/Threads/Thread_cmd/Thread_cmd.c **** 
  87:./app/Threads/Thread_cmd/Thread_cmd.c **** /*******************************************************************************
  88:./app/Threads/Thread_cmd/Thread_cmd.c **** * Function Name  : Thread_Cmd_Entry
  89:./app/Threads/Thread_cmd/Thread_cmd.c **** * Description    : Thread_Cmd_Entry线程
  90:./app/Threads/Thread_cmd/Thread_cmd.c **** * Input          : ULONG thread_input
  91:./app/Threads/Thread_cmd/Thread_cmd.c **** * Output         : None
  92:./app/Threads/Thread_cmd/Thread_cmd.c **** * Return         : None
  93:./app/Threads/Thread_cmd/Thread_cmd.c **** * Note			 : 快速创建线程demo
  94:./app/Threads/Thread_cmd/Thread_cmd.c **** *******************************************************************************/
  95:./app/Threads/Thread_cmd/Thread_cmd.c **** void Thread_Cmd_Entry(ULONG thread_input)
  96:./app/Threads/Thread_cmd/Thread_cmd.c **** {
 330              		.loc 1 96 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		.loc 1 96 1 is_stmt 0 view .LVU80
 335 0000 10B5     		push	{r4, lr}
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 4, -8
 339              		.cfi_offset 14, -4
 340 0002 0446     		mov	r4, r0
  97:./app/Threads/Thread_cmd/Thread_cmd.c ****     Thread_Cmd_parama * thread_param = (Thread_Cmd_parama *)thread_input;
 341              		.loc 1 97 5 is_stmt 1 view .LVU81
 342              	.LVL29:
 343              		.loc 1 97 5 is_stmt 0 view .LVU82
 344 0004 0BE0     		b	.L23
 345              	.LVL30:
 346              	.L25:
  98:./app/Threads/Thread_cmd/Thread_cmd.c **** 	while(1)
ARM GAS  /tmp/ccN0GLmg.s 			page 9


  99:./app/Threads/Thread_cmd/Thread_cmd.c **** 	{
 100:./app/Threads/Thread_cmd/Thread_cmd.c ****         if (Get_Cmd(&DEBUG_UART, thread_input) == 0)   //接收到数据
 101:./app/Threads/Thread_cmd/Thread_cmd.c ****         {
 102:./app/Threads/Thread_cmd/Thread_cmd.c ****             //处理数据
 103:./app/Threads/Thread_cmd/Thread_cmd.c ****             printf("Cmd_Name_last: %s\r\n", thread_param->Cmd_Name_last);
 347              		.loc 1 103 13 is_stmt 1 view .LVU83
 348 0006 2146     		mov	r1, r4
 349 0008 0848     		ldr	r0, .L26
 350 000a FFF7FEFF 		bl	printf
 351              	.LVL31:
 104:./app/Threads/Thread_cmd/Thread_cmd.c ****             printf("Cmd_Param_last: %lf\r\n", thread_param->Cmd_Param_last);
 352              		.loc 1 104 13 view .LVU84
 353 000e D4E90823 		ldrd	r2, [r4, #32]
 354 0012 0748     		ldr	r0, .L26+4
 355 0014 FFF7FEFF 		bl	printf
 356              	.LVL32:
 357              	.L22:
 105:./app/Threads/Thread_cmd/Thread_cmd.c ****         }
 106:./app/Threads/Thread_cmd/Thread_cmd.c ****         else
 107:./app/Threads/Thread_cmd/Thread_cmd.c ****         {
 108:./app/Threads/Thread_cmd/Thread_cmd.c ****             //处理接收错误
 109:./app/Threads/Thread_cmd/Thread_cmd.c ****         }
 358              		.loc 1 109 9 view .LVU85
 110:./app/Threads/Thread_cmd/Thread_cmd.c ****         
 111:./app/Threads/Thread_cmd/Thread_cmd.c ****     tx_thread_sleep(2);
 359              		.loc 1 111 5 view .LVU86
 360 0018 0220     		movs	r0, #2
 361 001a FFF7FEFF 		bl	_tx_thread_sleep
 362              	.LVL33:
  98:./app/Threads/Thread_cmd/Thread_cmd.c **** 	{
 363              		.loc 1 98 7 view .LVU87
 364              	.L23:
  98:./app/Threads/Thread_cmd/Thread_cmd.c **** 	{
 365              		.loc 1 98 2 view .LVU88
 100:./app/Threads/Thread_cmd/Thread_cmd.c ****         {
 366              		.loc 1 100 9 view .LVU89
 100:./app/Threads/Thread_cmd/Thread_cmd.c ****         {
 367              		.loc 1 100 13 is_stmt 0 view .LVU90
 368 001e 2146     		mov	r1, r4
 369 0020 0448     		ldr	r0, .L26+8
 370 0022 FFF7FEFF 		bl	Get_Cmd
 371              	.LVL34:
 100:./app/Threads/Thread_cmd/Thread_cmd.c ****         {
 372              		.loc 1 100 12 discriminator 1 view .LVU91
 373 0026 0028     		cmp	r0, #0
 374 0028 EDD0     		beq	.L25
 375 002a F5E7     		b	.L22
 376              	.L27:
 377              		.align	2
 378              	.L26:
 379 002c 00000000 		.word	.LC2
 380 0030 14000000 		.word	.LC3
 381 0034 00000000 		.word	huart1
 382              		.cfi_endproc
 383              	.LFE252:
 385              		.global	Uart_Receive_Data
 386              		.section	.data.Uart_Receive_Data,"aw"
ARM GAS  /tmp/ccN0GLmg.s 			page 10


 387              		.align	2
 390              	Uart_Receive_Data:
 391 0000 00       		.byte	0
 392 0001 01       		.byte	1
 393 0002 00000000 		.space	256
 393      00000000 
 393      00000000 
 393      00000000 
 393      00000000 
 394              		.global	Thread_Cmd_parama1
 395              		.section	.bss.Thread_Cmd_parama1,"aw",%nobits
 396              		.align	3
 399              	Thread_Cmd_parama1:
 400 0000 00000000 		.space	40
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 401              		.global	Thread_Cmd
 402              		.section	.bss.Thread_Cmd,"aw",%nobits
 403              		.align	2
 406              	Thread_Cmd:
 407 0000 00000000 		.space	176
 407      00000000 
 407      00000000 
 407      00000000 
 407      00000000 
 408              		.text
 409              	.Letext0:
 410              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h"
 411              		.file 3 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
 412              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_api.h"
 413              		.file 5 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 414              		.file 6 "./Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 415              		.file 7 "./Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 416              		.file 8 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 417              		.file 9 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 418              		.file 10 "./Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 419              		.file 11 "./app/Threads/Thread_cmd/Thread_cmd.h"
 420              		.file 12 "./Core/Inc/usart.h"
 421              		.file 13 "/usr/include/newlib/stdio.h"
 422              		.file 14 "/usr/include/newlib/string.h"
 423              		.file 15 "/usr/include/newlib/stdlib.h"
 424              		.file 16 "<built-in>"
ARM GAS  /tmp/ccN0GLmg.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 Thread_cmd.c
     /tmp/ccN0GLmg.s:21     .rodata.Get_Cmd.str1.4:00000000 $d
     /tmp/ccN0GLmg.s:28     .text.Get_Cmd:00000000 $t
     /tmp/ccN0GLmg.s:34     .text.Get_Cmd:00000000 Get_Cmd
     /tmp/ccN0GLmg.s:225    .text.Get_Cmd:000000b4 $d
     /tmp/ccN0GLmg.s:390    .data.Uart_Receive_Data:00000000 Uart_Receive_Data
     /tmp/ccN0GLmg.s:232    .text.BSP_UART_IDLE_CallBack:00000000 $t
     /tmp/ccN0GLmg.s:238    .text.BSP_UART_IDLE_CallBack:00000000 BSP_UART_IDLE_CallBack
     /tmp/ccN0GLmg.s:309    .text.BSP_UART_IDLE_CallBack:0000003c $d
     /tmp/ccN0GLmg.s:314    .rodata.Thread_Cmd_Entry.str1.4:00000000 $d
     /tmp/ccN0GLmg.s:321    .text.Thread_Cmd_Entry:00000000 $t
     /tmp/ccN0GLmg.s:327    .text.Thread_Cmd_Entry:00000000 Thread_Cmd_Entry
     /tmp/ccN0GLmg.s:379    .text.Thread_Cmd_Entry:0000002c $d
     /tmp/ccN0GLmg.s:387    .data.Uart_Receive_Data:00000000 $d
     /tmp/ccN0GLmg.s:399    .bss.Thread_Cmd_parama1:00000000 Thread_Cmd_parama1
     /tmp/ccN0GLmg.s:396    .bss.Thread_Cmd_parama1:00000000 $d
     /tmp/ccN0GLmg.s:406    .bss.Thread_Cmd:00000000 Thread_Cmd
     /tmp/ccN0GLmg.s:403    .bss.Thread_Cmd:00000000 $d

UNDEFINED SYMBOLS
memset
memcpy
strstr
atof
HAL_UART_Receive_DMA
HAL_UART_DMAStop
printf
_tx_thread_sleep
huart1
