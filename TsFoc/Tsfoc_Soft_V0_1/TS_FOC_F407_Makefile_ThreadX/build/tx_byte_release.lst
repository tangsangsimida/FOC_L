ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_byte_release.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_byte_release,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_byte_release
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_byte_release:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "./Middlewares/ST/threadx/common/src/tx_byte_release.c"
   1:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**   Byte Memory                                                         */
  19:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  26:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /* Include necessary system files.  */
  27:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  28:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #include "tx_api.h"
  29:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #include "tx_trace.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #include "tx_thread.h"
  31:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #include "tx_byte_pool.h"
  32:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  33:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  34:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  35:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  36:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  FUNCTION                                               RELEASE        */
  37:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  38:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    _tx_byte_release                                    PORTABLE C      */
  39:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                           6.1          */
  40:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  AUTHOR                                                                */
  41:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  42:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  44:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  DESCRIPTION                                                           */
  45:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  46:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    This function returns previously allocated memory to its            */
  47:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    associated memory byte pool.                                        */
  48:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  49:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  INPUT                                                                 */
  50:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  51:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    memory_ptr                        Pointer to allocated memory       */
  52:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  53:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  OUTPUT                                                                */
  54:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  55:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    [TX_PTR_ERROR | TX_SUCCESS]       Completion status                 */
  56:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  57:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  CALLS                                                                 */
  58:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  59:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    _tx_thread_system_preempt_check   Check for preemption              */
  60:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    _tx_thread_system_resume          Resume thread service             */
  61:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    _tx_thread_system_ni_resume       Non-interruptable resume thread   */
  62:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    _tx_byte_pool_search              Search the byte pool for memory   */
  63:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  64:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  CALLED BY                                                             */
  65:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  66:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    Application Code                                                    */
  67:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  68:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  RELEASE HISTORY                                                       */
  69:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  70:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*    DATE              NAME                      DESCRIPTION             */
  71:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  72:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  73:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  74:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                            resulting in version 6.1    */
  75:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /*                                                                        */
  76:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** /**************************************************************************/
  77:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UINT  _tx_byte_release(VOID *memory_ptr)
  78:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** {
  30              		.loc 1 78 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 78 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 3


  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 0446     		mov	r4, r0
  79:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  80:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_INTERRUPT_SAVE_AREA
  45              		.loc 1 80 1 is_stmt 1 view .LVU2
  81:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  82:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UINT                status;
  46              		.loc 1 82 1 view .LVU3
  83:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_BYTE_POOL        *pool_ptr;
  47              		.loc 1 83 1 view .LVU4
  84:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_THREAD           *thread_ptr;
  48              		.loc 1 84 1 view .LVU5
  85:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UCHAR               *work_ptr;
  49              		.loc 1 85 1 view .LVU6
  86:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UCHAR               *temp_ptr;
  50              		.loc 1 86 1 view .LVU7
  87:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UCHAR               *next_block_ptr;
  51              		.loc 1 87 1 view .LVU8
  88:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_THREAD           *susp_thread_ptr;
  52              		.loc 1 88 1 view .LVU9
  89:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UINT                suspended_count;
  53              		.loc 1 89 1 view .LVU10
  90:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_THREAD           *next_thread;
  54              		.loc 1 90 1 view .LVU11
  91:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_THREAD           *previous_thread;
  55              		.loc 1 91 1 view .LVU12
  92:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** ULONG               memory_size;
  56              		.loc 1 92 1 view .LVU13
  93:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** ALIGN_TYPE          *free_ptr;
  57              		.loc 1 93 1 view .LVU14
  94:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** TX_BYTE_POOL        **byte_pool_ptr;
  58              		.loc 1 94 1 view .LVU15
  95:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UCHAR               **block_link_ptr;
  59              		.loc 1 95 1 view .LVU16
  96:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** UCHAR               **suspend_info_ptr;
  60              		.loc 1 96 1 view .LVU17
  97:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  98:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
  99:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     /* Default to successful status.  */
 100:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     status =  TX_SUCCESS;
  61              		.loc 1 100 5 view .LVU18
  62              	.LVL1:
 101:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 102:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     /* Set the pool pointer to NULL.  */
 103:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     pool_ptr =  TX_NULL;
  63              		.loc 1 103 5 view .LVU19
 104:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 105:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     /* Lockout interrupts.  */
 106:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     TX_DISABLE
  64              		.loc 1 106 5 view .LVU20
  65              	.LBB26:
  66              	.LBI26:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 4


  67              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.10       */
  30:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 5


  57:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  60:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  61:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  62:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  63:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  64:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  65:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  66:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  67:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  69:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  70:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  71:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  72:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  73:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  74:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  75:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  77:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  78:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  80:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  81:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  83:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  84:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  85:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  86:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  87:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  88:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  89:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  90:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  91:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  92:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  93:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
  94:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  95:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
  97:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
  98:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
  99:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 100:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 102:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 103:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 104:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 105:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 106:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 108:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 109:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 110:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 111:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 112:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 113:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 6


 114:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 115:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 116:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 117:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 118:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 119:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 120:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 121:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 122:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 123:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 124:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 125:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 126:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 127:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 128:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 129:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 130:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 131:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 132:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 133:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 134:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 135:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 136:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 137:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 138:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 139:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 140:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 142:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 143:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 144:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 145:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 146:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 147:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 148:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 149:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 150:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 151:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 153:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 154:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 155:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 156:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 157:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0x0a800024)
 158:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 159:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 160:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 161:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 162:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 163:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 164:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0xE0001004)
 165:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 166:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 167:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 168:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 169:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 170:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 7


 171:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 172:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 173:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 175:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 176:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 177:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 178:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 179:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 180:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 181:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 182:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 184:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 185:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 186:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 187:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 188:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 189:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 191:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 192:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 194:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 196:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 197:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 198:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 199:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 200:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 201:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 202:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 203:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 204:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 206:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 208:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 209:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 210:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 211:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 212:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 213:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 214:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 215:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 216:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 218:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 220:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 221:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 222:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 223:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 224:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 225:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 226:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 227:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 8


 228:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 229:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 230:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 231:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 232:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 233:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 234:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 235:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 237:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 238:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 239:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 240:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 241:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 242:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 243:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 244:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 245:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 246:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 247:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 248:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 249:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 250:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 253:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 254:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 256:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 257:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 258:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 259:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 260:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 261:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 262:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 265:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 266:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 267:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 268:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 269:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 270:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 271:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 272:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 273:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 274:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 276:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 277:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 278:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 279:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 280:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 281:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 282:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 283:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 284:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 9


 285:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 286:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 288:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 289:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 290:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 291:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 292:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 293:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 294:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 295:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 296:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 297:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 298:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 300:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 301:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 302:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 303:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 304:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 305:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 307:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 308:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 310:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 311:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 312:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 313:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 314:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 315:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 316:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 317:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 318:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 319:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 320:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 321:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 322:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 325:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 326:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 327:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 328:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 329:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 330:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 331:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 333:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 334:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 335:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 337:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 338:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 339:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 340:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 341:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 10


 342:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 343:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 345:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 346:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 347:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 348:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 349:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 350:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 351:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 352:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 353:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 354:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 355:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 356:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 357:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 358:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 360:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 362:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 363:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 364:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 365:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 366:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 367:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 368:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 369:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 370:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 371:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 372:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 373:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 374:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 375:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 376:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 377:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 378:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 379:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 380:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 381:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((ULONG *) 0xE000EF34);  
 382:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 383:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 384:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 385:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 386:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 387:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 388:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 389:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 390:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 391:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 392:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 393:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 394:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 395:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 396:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 397:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 398:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 11


 399:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 400:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 401:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 402:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 403:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 404:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 405:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 406:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 407:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 408:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 409:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 410:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 411:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 412:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 413:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 414:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 415:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 416:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 417:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 418:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 419:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 420:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 421:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 422:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 423:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 424:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 425:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 426:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 427:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 428:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 429:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 430:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 432:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 433:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 434:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 435:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 436:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 437:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 438:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 439:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 440:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 441:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 442:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 443:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 444:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 445:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 446:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 447:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 448:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 449:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 450:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 452:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 453:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 454:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 455:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 12


 456:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 457:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 458:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 459:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 460:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 461:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 463:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 464:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 465:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 466:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 467:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 468:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 469:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 470:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 471:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 472:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 473:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 475:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 479:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 480:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 482:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 483:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 484:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 485:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 486:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 487:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 488:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 489:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 490:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 491:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 492:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 493:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 494:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 496:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 497:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 498:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 499:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 500:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 502:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 503:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 504:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 505:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 506:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 507:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 509:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 510:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 511:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 512:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 13


 513:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 514:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 515:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 516:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 517:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 518:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 519:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 520:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 521:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 522:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 523:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 524:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 526:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 528:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 529:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 530:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 531:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 532:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 534:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 536:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 537:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 538:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 540:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 542:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 543:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 544:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 545:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 546:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 548:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 549:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 551:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 553:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 554:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 555:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 557:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 558:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 559:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 560:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 561:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 563:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 565:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  68              		.loc 2 566 63 view .LVU21
  69              	.LBB27:
 567:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 14


 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  70              		.loc 2 568 1 view .LVU22
 569:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  71              		.loc 2 570 5 view .LVU23
  72              	.LBB28:
  73              	.LBI28:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  74              		.loc 2 533 63 view .LVU24
  75              	.LBB29:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  76              		.loc 2 535 1 view .LVU25
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  77              		.loc 2 539 5 view .LVU26
  78              		.syntax unified
  79              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  80 0006 EFF3108C 		MRS  ip, PRIMASK 
  81              	@ 0 "" 2
  82              	.LVL2:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  83              		.loc 2 541 5 view .LVU27
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  84              		.loc 2 541 5 is_stmt 0 view .LVU28
  85              		.thumb
  86              		.syntax unified
  87              	.LBE29:
  88              	.LBE28:
 571:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 572:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 573:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 574:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  89              		.loc 2 575 5 is_stmt 1 view .LVU29
  90              		.syntax unified
  91              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  92 000a 72B6     		CPSID i
  93              	@ 0 "" 2
 576:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 577:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
  94              		.loc 2 577 5 view .LVU30
  95              	.LVL3:
  96              		.loc 2 577 5 is_stmt 0 view .LVU31
  97              		.thumb
  98              		.syntax unified
  99              	.LBE27:
 100              	.LBE26:
 107:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 108:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     /* Determine if the memory pointer is valid.  */
 109:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     work_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(memory_ptr);
 101              		.loc 1 109 5 is_stmt 1 view .LVU32
 110:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     if (work_ptr != TX_NULL)
 102              		.loc 1 110 5 view .LVU33
 103              		.loc 1 110 8 is_stmt 0 view .LVU34
 104 000c 20B3     		cbz	r0, .L14
 111:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     {
 112:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 113:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Back off the memory pointer to pickup its header.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 15


 114:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         work_ptr =  TX_UCHAR_POINTER_SUB(work_ptr, ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE))));
 105              		.loc 1 114 9 is_stmt 1 view .LVU35
 106              		.loc 1 114 18 is_stmt 0 view .LVU36
 107 000e A0F10803 		sub	r3, r0, #8
 108              	.LVL4:
 115:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 116:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* There is a pointer, pickup the pool pointer address.  */
 117:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         temp_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(UCHAR *)));
 109              		.loc 1 117 9 is_stmt 1 view .LVU37
 118:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(temp_ptr);
 110              		.loc 1 118 9 view .LVU38
 119:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         if ((*free_ptr) != TX_BYTE_BLOCK_FREE)
 111              		.loc 1 119 9 view .LVU39
 112              		.loc 1 119 14 is_stmt 0 view .LVU40
 113 0012 50F8042C 		ldr	r2, [r0, #-4]
 114              		.loc 1 119 12 view .LVU41
 115 0016 3C49     		ldr	r1, .L23
 116 0018 8A42     		cmp	r2, r1
 117 001a 20D0     		beq	.L15
 120:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         {
 121:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 122:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* Pickup the pool pointer.  */
 123:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             temp_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(UCHAR *)));
 118              		.loc 1 123 13 is_stmt 1 view .LVU42
 124:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             byte_pool_ptr =  TX_UCHAR_TO_INDIRECT_BYTE_POOL_POINTER(temp_ptr);
 119              		.loc 1 124 13 view .LVU43
 120              	.LVL5:
 125:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             pool_ptr =  *byte_pool_ptr;
 121              		.loc 1 125 13 view .LVU44
 122 001c 1446     		mov	r4, r2
 123              	.LVL6:
 126:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 127:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* See if we have a valid pool pointer.  */
 128:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             if (pool_ptr == TX_NULL)
 124              		.loc 1 128 13 view .LVU45
 125              		.loc 1 128 16 is_stmt 0 view .LVU46
 126 001e 0AB3     		cbz	r2, .L16
 129:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             {
 130:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 131:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Return pointer error.  */
 132:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 status =  TX_PTR_ERROR;
 133:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             }
 134:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             else
 135:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             {
 136:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 137:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* See if we have a valid pool.  */
 138:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 if (pool_ptr -> tx_byte_pool_id != TX_BYTE_POOL_ID)
 127              		.loc 1 138 17 is_stmt 1 view .LVU47
 128              		.loc 1 138 30 is_stmt 0 view .LVU48
 129 0020 1168     		ldr	r1, [r2]
 130              		.loc 1 138 20 view .LVU49
 131 0022 3A4A     		ldr	r2, .L23+4
 132              	.LVL7:
 133              		.loc 1 138 20 view .LVU50
 134 0024 9142     		cmp	r1, r2
 135 0026 15D0     		beq	.L20
 139:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 16


 140:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 141:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* Return pointer error.  */
 142:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     status =  TX_PTR_ERROR;
 143:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 144:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* Reset the pool pointer is NULL.  */
 145:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     pool_ptr =  TX_NULL;
 136              		.loc 1 145 30 view .LVU51
 137 0028 0024     		movs	r4, #0
 138              	.LVL8:
 142:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 139              		.loc 1 142 28 view .LVU52
 140 002a 0326     		movs	r6, #3
 141              	.LVL9:
 142              	.L2:
 146:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 }
 147:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             }
 148:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 149:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         else
 150:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         {
 151:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 152:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* Return pointer error.  */
 153:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             status =  TX_PTR_ERROR;
 154:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 155:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     }
 156:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     else
 157:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     {
 158:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 159:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Return pointer error.  */
 160:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         status =  TX_PTR_ERROR;
 161:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     }
 162:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 163:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     /* Determine if the pointer is valid.  */
 164:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     if (pool_ptr == TX_NULL)
 143              		.loc 1 164 5 is_stmt 1 view .LVU53
 144              		.loc 1 164 8 is_stmt 0 view .LVU54
 145 002c E4B1     		cbz	r4, .L21
 165:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     {
 166:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 167:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Restore interrupts.  */
 168:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         TX_RESTORE
 169:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     }
 170:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     else
 171:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     {
 172:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 173:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* At this point, we know that the pointer is valid.  */
 174:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 175:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Pickup thread pointer.  */
 176:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         TX_THREAD_GET_CURRENT(thread_ptr)
 146              		.loc 1 176 9 is_stmt 1 view .LVU55
 147 002e 384A     		ldr	r2, .L23+8
 148 0030 1568     		ldr	r5, [r2]
 149              	.LVL10:
 177:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 178:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Indicate that this thread is the current owner.  */
 179:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         pool_ptr -> tx_byte_pool_owner =  thread_ptr;
 150              		.loc 1 179 9 view .LVU56
 151              		.loc 1 179 40 is_stmt 0 view .LVU57
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 17


 152 0032 2562     		str	r5, [r4, #32]
 180:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 181:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #ifdef TX_BYTE_POOL_ENABLE_PERFORMANCE_INFO
 182:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 183:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Increment the total release counter.  */
 184:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         _tx_byte_pool_performance_release_count++;
 185:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 186:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Increment the number of releases on this pool.  */
 187:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         pool_ptr -> tx_byte_pool_performance_release_count++;
 188:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #endif
 189:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 190:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* If trace is enabled, insert this event into the trace buffer.  */
 191:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         TX_TRACE_IN_LINE_INSERT(TX_TRACE_BYTE_RELEASE, pool_ptr, TX_POINTER_TO_ULONG_CONVERT(memory
 192:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 193:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Log this kernel call.  */
 194:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         TX_EL_BYTE_RELEASE_INSERT
 195:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 196:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Release the memory.  */
 197:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         temp_ptr =   TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(UCHAR *)));
 153              		.loc 1 197 9 is_stmt 1 view .LVU58
 154              	.LVL11:
 198:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         free_ptr =   TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(temp_ptr);
 155              		.loc 1 198 9 view .LVU59
 199:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         *free_ptr =  TX_BYTE_BLOCK_FREE;
 156              		.loc 1 199 9 view .LVU60
 157              		.loc 1 199 19 is_stmt 0 view .LVU61
 158 0034 344A     		ldr	r2, .L23
 159 0036 5A60     		str	r2, [r3, #4]
 200:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 201:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Update the number of available bytes in the pool.  */
 202:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         block_link_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
 160              		.loc 1 202 9 is_stmt 1 view .LVU62
 161              	.LVL12:
 203:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         next_block_ptr =  *block_link_ptr;
 162              		.loc 1 203 9 view .LVU63
 163              		.loc 1 203 24 is_stmt 0 view .LVU64
 164 0038 1968     		ldr	r1, [r3]
 165              	.LVL13:
 204:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         pool_ptr -> tx_byte_pool_available =
 166              		.loc 1 204 9 is_stmt 1 view .LVU65
 205:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             pool_ptr -> tx_byte_pool_available + TX_UCHAR_POINTER_DIF(next_block_ptr, work_ptr);
 167              		.loc 1 205 22 is_stmt 0 view .LVU66
 168 003a A268     		ldr	r2, [r4, #8]
 169              		.loc 1 205 50 view .LVU67
 170 003c C91A     		subs	r1, r1, r3
 171              	.LVL14:
 172              		.loc 1 205 48 view .LVU68
 173 003e 0A44     		add	r2, r2, r1
 204:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         pool_ptr -> tx_byte_pool_available =
 174              		.loc 1 204 44 view .LVU69
 175 0040 A260     		str	r2, [r4, #8]
 176              	.LVL15:
 206:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 207:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Determine if the free block is prior to current search pointer.  */
 208:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         if (work_ptr < (pool_ptr -> tx_byte_pool_search))
 177              		.loc 1 208 9 is_stmt 1 view .LVU70
 178              		.loc 1 208 34 is_stmt 0 view .LVU71
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 18


 179 0042 6269     		ldr	r2, [r4, #20]
 180              		.loc 1 208 12 view .LVU72
 181 0044 9A42     		cmp	r2, r3
 182 0046 00D9     		bls	.L5
 209:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         {
 210:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 211:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* Yes, update the search pointer to the released block.  */
 212:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             pool_ptr -> tx_byte_pool_search =  work_ptr;
 183              		.loc 1 212 13 is_stmt 1 view .LVU73
 184              		.loc 1 212 45 is_stmt 0 view .LVU74
 185 0048 6361     		str	r3, [r4, #20]
 186              	.L5:
 213:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 214:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 215:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         /* Determine if there are threads suspended on this byte pool.  */
 216:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         if (pool_ptr -> tx_byte_pool_suspended_count != TX_NO_SUSPENSIONS)
 187              		.loc 1 216 9 is_stmt 1 view .LVU75
 188              		.loc 1 216 22 is_stmt 0 view .LVU76
 189 004a A36A     		ldr	r3, [r4, #40]
 190              	.LVL16:
 191              		.loc 1 216 12 view .LVU77
 192 004c 53BB     		cbnz	r3, .L6
 217:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         {
 218:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 219:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* Now examine the suspension list to find threads waiting for
 220:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                memory.  Maybe it is now available!  */
 221:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             while (pool_ptr -> tx_byte_pool_suspended_count != TX_NO_SUSPENSIONS)
 222:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             {
 223:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 224:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Pickup the first suspended thread pointer.  */
 225:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 susp_thread_ptr =  pool_ptr -> tx_byte_pool_suspension_list;
 226:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 227:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Pickup the size of the memory the thread is requesting.  */
 228:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 memory_size =  susp_thread_ptr -> tx_thread_suspend_info;
 229:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 230:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Restore interrupts.  */
 231:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 TX_RESTORE
 232:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 233:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* See if the request can be satisfied.  */
 234:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 work_ptr =  _tx_byte_pool_search(pool_ptr, memory_size);
 235:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 236:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Optional processing extension.  */
 237:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 TX_BYTE_RELEASE_EXTENSION
 238:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 239:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Disable interrupts.  */
 240:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 TX_DISABLE
 241:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 242:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Indicate that this thread is the current owner.  */
 243:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 pool_ptr -> tx_byte_pool_owner =  thread_ptr;
 244:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 245:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* If there is not enough memory, break this loop!  */
 246:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 if (work_ptr == TX_NULL)
 247:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 248:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 249:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                   /* Break out of the loop.  */
 250:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     break;
 251:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 }
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 19


 252:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 253:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Check to make sure the thread is still suspended.  */
 254:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 if (susp_thread_ptr ==  pool_ptr -> tx_byte_pool_suspension_list)
 255:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 256:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 257:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* Also, makes sure the memory size is the same.  */
 258:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     if (susp_thread_ptr -> tx_thread_suspend_info == memory_size)
 259:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 260:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 261:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Remove the suspended thread from the list.  */
 262:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 263:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Decrement the number of threads suspended.  */
 264:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         pool_ptr -> tx_byte_pool_suspended_count--;
 265:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 266:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Pickup the suspended count.  */
 267:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         suspended_count =  pool_ptr -> tx_byte_pool_suspended_count;
 268:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 269:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* See if this is the only suspended thread on the list.  */
 270:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         if (suspended_count == TX_NO_SUSPENSIONS)
 271:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         {
 272:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 273:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             /* Yes, the only suspended thread.  */
 274:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 275:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             /* Update the head pointer.  */
 276:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             pool_ptr -> tx_byte_pool_suspension_list =  TX_NULL;
 277:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         }
 278:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         else
 279:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         {
 280:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 281:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             /* At least one more thread is on the same expiration list.  */
 282:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 283:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             /* Update the list head pointer.  */
 284:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             next_thread =                                susp_thread_ptr -> tx_thre
 285:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             pool_ptr -> tx_byte_pool_suspension_list =   next_thread;
 286:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 287:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             /* Update the links of the adjacent threads.  */
 288:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             previous_thread =                              susp_thread_ptr -> tx_th
 289:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 290:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 291:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         }
 292:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 293:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Prepare for resumption of the thread.  */
 294:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 295:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Clear cleanup routine to avoid timeout.  */
 296:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         susp_thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
 297:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 298:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Return this block pointer to the suspended thread waiting for
 299:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                            a block.  */
 300:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         suspend_info_ptr =   TX_VOID_TO_INDIRECT_UCHAR_POINTER_CONVERT(susp_thread_
 301:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         *suspend_info_ptr =  work_ptr;
 302:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 303:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Clear the memory pointer to indicate that it was given to the suspended 
 304:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         work_ptr =  TX_NULL;
 305:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 306:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Put return status into the thread control block.  */
 307:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         susp_thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 308:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 20


 309:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #ifdef TX_NOT_INTERRUPTABLE
 310:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 311:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Resume the thread!  */
 312:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         _tx_thread_system_ni_resume(susp_thread_ptr);
 313:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 314:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Restore interrupts.  */
 315:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         TX_RESTORE
 316:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #else
 317:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Temporarily disable preemption.  */
 318:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         _tx_thread_preempt_disable++;
 319:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 320:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Restore interrupts.  */
 321:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         TX_RESTORE
 322:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 323:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Resume thread.  */
 324:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         _tx_thread_system_resume(susp_thread_ptr);
 325:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #endif
 326:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 327:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Lockout interrupts.  */
 328:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         TX_DISABLE
 329:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     }
 330:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 }
 331:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 332:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 /* Determine if the memory was given to the suspended thread.  */
 333:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 if (work_ptr != TX_NULL)
 334:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 335:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 336:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* No, it wasn't given to the suspended thread.  */
 337:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 338:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* Put the memory back on the available list since this thread is no longer
 339:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                        suspended.  */
 340:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     work_ptr =  TX_UCHAR_POINTER_SUB(work_ptr, (((sizeof(UCHAR *)) + (sizeof(ALIGN_
 341:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     temp_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(UCHAR *)));
 342:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(temp_ptr);
 343:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     *free_ptr =  TX_BYTE_BLOCK_FREE;
 344:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 345:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* Update the number of available bytes in the pool.  */
 346:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     block_link_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
 347:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     next_block_ptr =  *block_link_ptr;
 348:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     pool_ptr -> tx_byte_pool_available =
 349:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         pool_ptr -> tx_byte_pool_available + TX_UCHAR_POINTER_DIF(next_block_ptr, w
 350:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 351:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     /* Determine if the current pointer is before the search pointer.  */
 352:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     if (work_ptr < (pool_ptr -> tx_byte_pool_search))
 353:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 354:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 355:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         /* Yes, update the search pointer.  */
 356:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         pool_ptr -> tx_byte_pool_search =  work_ptr;
 357:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     }
 358:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 }
 359:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             }
 360:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 361:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* Restore interrupts.  */
 362:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             TX_RESTORE
 363:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 364:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* Check for preemption.  */
 365:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             _tx_thread_system_preempt_check();
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 21


 366:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 367:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         else
 368:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         {
 369:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 370:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             /* No, threads suspended, restore interrupts.  */
 371:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             TX_RESTORE
 193              		.loc 1 371 13 is_stmt 1 view .LVU78
 194              	.LVL17:
 195              	.LBB30:
 196              	.LBI30:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 197              		.loc 2 556 55 view .LVU79
 198              	.LBB31:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 199              		.loc 2 562 5 view .LVU80
 200              		.syntax unified
 201              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 202 004e 8CF31088 		MSR  PRIMASK,ip
 203              	@ 0 "" 2
 204              	.LVL18:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205              		.loc 2 562 5 is_stmt 0 view .LVU81
 206              		.thumb
 207              		.syntax unified
 208              	.LBE31:
 209              	.LBE30:
 372:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 373:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     }
 374:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 375:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     /* Return completion status.  */
 376:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     return(status);
 210              		.loc 1 376 5 is_stmt 1 view .LVU82
 211              		.loc 1 376 11 is_stmt 0 view .LVU83
 212 0052 56E0     		b	.L1
 213              	.LVL19:
 214              	.L20:
 100:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 215              		.loc 1 100 12 view .LVU84
 216 0054 0026     		movs	r6, #0
 217 0056 E9E7     		b	.L2
 218              	.LVL20:
 219              	.L14:
 109:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     if (work_ptr != TX_NULL)
 220              		.loc 1 109 14 view .LVU85
 221 0058 0346     		mov	r3, r0
 160:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     }
 222              		.loc 1 160 16 view .LVU86
 223 005a 0326     		movs	r6, #3
 224 005c E6E7     		b	.L2
 225              	.LVL21:
 226              	.L15:
 103:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 227              		.loc 1 103 14 view .LVU87
 228 005e 0024     		movs	r4, #0
 153:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 229              		.loc 1 153 20 view .LVU88
 230 0060 0326     		movs	r6, #3
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 22


 231 0062 E3E7     		b	.L2
 232              	.LVL22:
 233              	.L16:
 132:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             }
 234              		.loc 1 132 24 view .LVU89
 235 0064 0326     		movs	r6, #3
 236 0066 E1E7     		b	.L2
 237              	.LVL23:
 238              	.L21:
 168:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****     }
 239              		.loc 1 168 9 is_stmt 1 view .LVU90
 240              	.LBB32:
 241              	.LBI32:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 242              		.loc 2 556 55 view .LVU91
 243              	.LBB33:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 244              		.loc 2 562 5 view .LVU92
 245              		.syntax unified
 246              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 247 0068 8CF31088 		MSR  PRIMASK,ip
 248              	@ 0 "" 2
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 249              		.loc 2 564 1 is_stmt 0 view .LVU93
 250              		.thumb
 251              		.syntax unified
 252 006c 49E0     		b	.L1
 253              	.LVL24:
 254              	.L22:
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255              		.loc 2 564 1 view .LVU94
 256              	.LBE33:
 257              	.LBE32:
 258:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 258              		.loc 1 258 21 is_stmt 1 view .LVU95
 258:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 259              		.loc 1 258 41 is_stmt 0 view .LVU96
 260 006e BB6F     		ldr	r3, [r7, #120]
 258:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 261              		.loc 1 258 24 view .LVU97
 262 0070 4345     		cmp	r3, r8
 263 0072 2AD1     		bne	.L9
 264:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 264              		.loc 1 264 25 is_stmt 1 view .LVU98
 264:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 265              		.loc 1 264 34 is_stmt 0 view .LVU99
 266 0074 A36A     		ldr	r3, [r4, #40]
 264:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 267              		.loc 1 264 65 view .LVU100
 268 0076 013B     		subs	r3, r3, #1
 269 0078 A362     		str	r3, [r4, #40]
 267:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 270              		.loc 1 267 25 is_stmt 1 view .LVU101
 271              	.LVL25:
 270:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         {
 272              		.loc 1 270 25 view .LVU102
 270:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 23


 273              		.loc 1 270 28 is_stmt 0 view .LVU103
 274 007a 002B     		cmp	r3, #0
 275 007c 37D1     		bne	.L10
 276:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         }
 276              		.loc 1 276 29 is_stmt 1 view .LVU104
 276:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         }
 277              		.loc 1 276 70 is_stmt 0 view .LVU105
 278 007e 6362     		str	r3, [r4, #36]
 279              	.LVL26:
 280              	.L11:
 296:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 281              		.loc 1 296 25 is_stmt 1 view .LVU106
 296:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 282              		.loc 1 296 70 is_stmt 0 view .LVU107
 283 0080 0023     		movs	r3, #0
 284 0082 BB66     		str	r3, [r7, #104]
 300:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         *suspend_info_ptr =  work_ptr;
 285              		.loc 1 300 25 is_stmt 1 view .LVU108
 300:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         *suspend_info_ptr =  work_ptr;
 286              		.loc 1 300 42 is_stmt 0 view .LVU109
 287 0084 FA6F     		ldr	r2, [r7, #124]
 288              	.LVL27:
 301:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 289              		.loc 1 301 25 is_stmt 1 view .LVU110
 301:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 290              		.loc 1 301 43 is_stmt 0 view .LVU111
 291 0086 1060     		str	r0, [r2]
 304:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 292              		.loc 1 304 25 is_stmt 1 view .LVU112
 293              	.LVL28:
 307:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 294              		.loc 1 307 25 view .LVU113
 307:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 295              		.loc 1 307 69 is_stmt 0 view .LVU114
 296 0088 C7F88430 		str	r3, [r7, #132]
 318:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 297              		.loc 1 318 25 is_stmt 1 view .LVU115
 318:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 298              		.loc 1 318 51 is_stmt 0 view .LVU116
 299 008c 214A     		ldr	r2, .L23+12
 300              	.LVL29:
 318:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 301              		.loc 1 318 51 view .LVU117
 302 008e 1368     		ldr	r3, [r2]
 303 0090 0133     		adds	r3, r3, #1
 304 0092 1360     		str	r3, [r2]
 321:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 305              		.loc 1 321 25 is_stmt 1 view .LVU118
 306              	.LVL30:
 307              	.LBB34:
 308              	.LBI34:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309              		.loc 2 556 55 view .LVU119
 310              	.LBB35:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 311              		.loc 2 562 5 view .LVU120
 312              		.syntax unified
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 24


 313              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 314 0094 8CF31088 		MSR  PRIMASK,ip
 315              	@ 0 "" 2
 316              	.LVL31:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 317              		.loc 2 562 5 is_stmt 0 view .LVU121
 318              		.thumb
 319              		.syntax unified
 320              	.LBE35:
 321              	.LBE34:
 324:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** #endif
 322              		.loc 1 324 25 is_stmt 1 view .LVU122
 323 0098 3846     		mov	r0, r7
 324 009a FFF7FEFF 		bl	_tx_thread_system_resume
 325              	.LVL32:
 328:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     }
 326              		.loc 1 328 25 view .LVU123
 327              	.LBB36:
 328              	.LBI36:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 329              		.loc 2 566 63 view .LVU124
 330              	.LBB37:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 331              		.loc 2 568 1 view .LVU125
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332              		.loc 2 570 5 view .LVU126
 333              	.LBB38:
 334              	.LBI38:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 335              		.loc 2 533 63 view .LVU127
 336              	.LBB39:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 337              		.loc 2 535 1 view .LVU128
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 338              		.loc 2 539 5 view .LVU129
 339              		.syntax unified
 340              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 341 009e EFF3108C 		MRS  ip, PRIMASK 
 342              	@ 0 "" 2
 343              	.LVL33:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 344              		.loc 2 541 5 view .LVU130
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 345              		.loc 2 541 5 is_stmt 0 view .LVU131
 346              		.thumb
 347              		.syntax unified
 348              	.LBE39:
 349              	.LBE38:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 350              		.loc 2 575 5 is_stmt 1 view .LVU132
 351              		.syntax unified
 352              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 353 00a2 72B6     		CPSID i
 354              	@ 0 "" 2
 355              		.loc 2 577 5 view .LVU133
 356              	.LVL34:
 357              		.loc 2 577 5 is_stmt 0 view .LVU134
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 25


 358              		.thumb
 359              		.syntax unified
 360              	.LBE37:
 361              	.LBE36:
 333:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 362              		.loc 1 333 17 is_stmt 1 view .LVU135
 363              	.L6:
 221:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             {
 364              		.loc 1 221 19 view .LVU136
 221:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             {
 365              		.loc 1 221 29 is_stmt 0 view .LVU137
 366 00a4 A36A     		ldr	r3, [r4, #40]
 221:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****             {
 367              		.loc 1 221 19 view .LVU138
 368 00a6 43B3     		cbz	r3, .L8
 225:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 369              		.loc 1 225 17 is_stmt 1 view .LVU139
 225:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 370              		.loc 1 225 33 is_stmt 0 view .LVU140
 371 00a8 676A     		ldr	r7, [r4, #36]
 372              	.LVL35:
 228:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 373              		.loc 1 228 17 is_stmt 1 view .LVU141
 228:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 374              		.loc 1 228 29 is_stmt 0 view .LVU142
 375 00aa D7F87880 		ldr	r8, [r7, #120]
 376              	.LVL36:
 231:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 377              		.loc 1 231 17 is_stmt 1 view .LVU143
 378              	.LBB40:
 379              	.LBI40:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 380              		.loc 2 556 55 view .LVU144
 381              	.LBB41:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 382              		.loc 2 562 5 view .LVU145
 383              		.syntax unified
 384              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 385 00ae 8CF31088 		MSR  PRIMASK,ip
 386              	@ 0 "" 2
 387              	.LVL37:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 388              		.loc 2 562 5 is_stmt 0 view .LVU146
 389              		.thumb
 390              		.syntax unified
 391              	.LBE41:
 392              	.LBE40:
 234:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 393              		.loc 1 234 17 is_stmt 1 view .LVU147
 234:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 394              		.loc 1 234 29 is_stmt 0 view .LVU148
 395 00b2 4146     		mov	r1, r8
 396 00b4 2046     		mov	r0, r4
 397 00b6 FFF7FEFF 		bl	_tx_byte_pool_search
 398              	.LVL38:
 240:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 399              		.loc 1 240 17 is_stmt 1 view .LVU149
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 26


 400              	.LBB42:
 401              	.LBI42:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 402              		.loc 2 566 63 view .LVU150
 403              	.LBB43:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 404              		.loc 2 568 1 view .LVU151
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 405              		.loc 2 570 5 view .LVU152
 406              	.LBB44:
 407              	.LBI44:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 408              		.loc 2 533 63 view .LVU153
 409              	.LBB45:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 410              		.loc 2 535 1 view .LVU154
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 411              		.loc 2 539 5 view .LVU155
 412              		.syntax unified
 413              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 414 00ba EFF3108C 		MRS  ip, PRIMASK 
 415              	@ 0 "" 2
 416              	.LVL39:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 417              		.loc 2 541 5 view .LVU156
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 418              		.loc 2 541 5 is_stmt 0 view .LVU157
 419              		.thumb
 420              		.syntax unified
 421              	.LBE45:
 422              	.LBE44:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 423              		.loc 2 575 5 is_stmt 1 view .LVU158
 424              		.syntax unified
 425              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 426 00be 72B6     		CPSID i
 427              	@ 0 "" 2
 428              		.loc 2 577 5 view .LVU159
 429              	.LVL40:
 430              		.loc 2 577 5 is_stmt 0 view .LVU160
 431              		.thumb
 432              		.syntax unified
 433              	.LBE43:
 434              	.LBE42:
 243:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 435              		.loc 1 243 17 is_stmt 1 view .LVU161
 243:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 436              		.loc 1 243 48 is_stmt 0 view .LVU162
 437 00c0 2562     		str	r5, [r4, #32]
 246:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 438              		.loc 1 246 17 is_stmt 1 view .LVU163
 246:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 439              		.loc 1 246 20 is_stmt 0 view .LVU164
 440 00c2 D0B1     		cbz	r0, .L8
 254:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 441              		.loc 1 254 17 is_stmt 1 view .LVU165
 254:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 27


 442              		.loc 1 254 50 is_stmt 0 view .LVU166
 443 00c4 636A     		ldr	r3, [r4, #36]
 254:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 444              		.loc 1 254 20 view .LVU167
 445 00c6 BB42     		cmp	r3, r7
 446 00c8 D1D0     		beq	.L22
 447              	.L9:
 333:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 448              		.loc 1 333 17 is_stmt 1 view .LVU168
 333:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                 {
 449              		.loc 1 333 20 is_stmt 0 view .LVU169
 450 00ca 0028     		cmp	r0, #0
 451 00cc EAD0     		beq	.L6
 340:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     temp_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(UCHAR *)));
 452              		.loc 1 340 21 is_stmt 1 view .LVU170
 340:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     temp_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(UCHAR *)));
 453              		.loc 1 340 30 is_stmt 0 view .LVU171
 454 00ce A0F10801 		sub	r1, r0, #8
 455              	.LVL41:
 341:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(temp_ptr);
 456              		.loc 1 341 21 is_stmt 1 view .LVU172
 342:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     *free_ptr =  TX_BYTE_BLOCK_FREE;
 457              		.loc 1 342 21 view .LVU173
 343:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 458              		.loc 1 343 21 view .LVU174
 343:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 459              		.loc 1 343 31 is_stmt 0 view .LVU175
 460 00d2 0D4B     		ldr	r3, .L23
 461 00d4 40F8043C 		str	r3, [r0, #-4]
 346:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     next_block_ptr =  *block_link_ptr;
 462              		.loc 1 346 21 is_stmt 1 view .LVU176
 463              	.LVL42:
 347:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     pool_ptr -> tx_byte_pool_available =
 464              		.loc 1 347 21 view .LVU177
 347:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     pool_ptr -> tx_byte_pool_available =
 465              		.loc 1 347 36 is_stmt 0 view .LVU178
 466 00d8 50F8082C 		ldr	r2, [r0, #-8]
 467              	.LVL43:
 348:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         pool_ptr -> tx_byte_pool_available + TX_UCHAR_POINTER_DIF(next_block_ptr, w
 468              		.loc 1 348 21 is_stmt 1 view .LVU179
 349:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 469              		.loc 1 349 34 is_stmt 0 view .LVU180
 470 00dc A368     		ldr	r3, [r4, #8]
 349:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 471              		.loc 1 349 62 view .LVU181
 472 00de 521A     		subs	r2, r2, r1
 473              	.LVL44:
 349:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 474              		.loc 1 349 60 view .LVU182
 475 00e0 1344     		add	r3, r3, r2
 348:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         pool_ptr -> tx_byte_pool_available + TX_UCHAR_POINTER_DIF(next_block_ptr, w
 476              		.loc 1 348 56 view .LVU183
 477 00e2 A360     		str	r3, [r4, #8]
 478              	.LVL45:
 352:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 479              		.loc 1 352 21 is_stmt 1 view .LVU184
 352:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 28


 480              		.loc 1 352 46 is_stmt 0 view .LVU185
 481 00e4 6369     		ldr	r3, [r4, #20]
 352:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     {
 482              		.loc 1 352 24 view .LVU186
 483 00e6 8B42     		cmp	r3, r1
 484 00e8 DCD9     		bls	.L6
 356:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     }
 485              		.loc 1 356 25 is_stmt 1 view .LVU187
 356:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                     }
 486              		.loc 1 356 57 is_stmt 0 view .LVU188
 487 00ea 6161     		str	r1, [r4, #20]
 488 00ec DAE7     		b	.L6
 489              	.LVL46:
 490              	.L10:
 284:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             pool_ptr -> tx_byte_pool_suspension_list =   next_thread;
 491              		.loc 1 284 29 is_stmt 1 view .LVU189
 284:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             pool_ptr -> tx_byte_pool_suspension_list =   next_thread;
 492              		.loc 1 284 41 is_stmt 0 view .LVU190
 493 00ee 3B6F     		ldr	r3, [r7, #112]
 494              	.LVL47:
 285:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 495              		.loc 1 285 29 is_stmt 1 view .LVU191
 285:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 496              		.loc 1 285 70 is_stmt 0 view .LVU192
 497 00f0 6362     		str	r3, [r4, #36]
 288:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 498              		.loc 1 288 29 is_stmt 1 view .LVU193
 288:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 499              		.loc 1 288 45 is_stmt 0 view .LVU194
 500 00f2 7A6F     		ldr	r2, [r7, #116]
 501              	.LVL48:
 289:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 502              		.loc 1 289 29 is_stmt 1 view .LVU195
 289:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 503              		.loc 1 289 73 is_stmt 0 view .LVU196
 504 00f4 5A67     		str	r2, [r3, #116]
 505              	.LVL49:
 290:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         }
 506              		.loc 1 290 29 is_stmt 1 view .LVU197
 290:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****                         }
 507              		.loc 1 290 73 is_stmt 0 view .LVU198
 508 00f6 1367     		str	r3, [r2, #112]
 509 00f8 C2E7     		b	.L11
 510              	.LVL50:
 511              	.L8:
 362:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** 
 512              		.loc 1 362 13 is_stmt 1 view .LVU199
 513              	.LBB46:
 514              	.LBI46:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 515              		.loc 2 556 55 view .LVU200
 516              	.LBB47:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 517              		.loc 2 562 5 view .LVU201
 518              		.syntax unified
 519              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 520 00fa 8CF31088 		MSR  PRIMASK,ip
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 29


 521              	@ 0 "" 2
 522              	.LVL51:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 523              		.loc 2 562 5 is_stmt 0 view .LVU202
 524              		.thumb
 525              		.syntax unified
 526              	.LBE47:
 527              	.LBE46:
 365:./Middlewares/ST/threadx/common/src/tx_byte_release.c ****         }
 528              		.loc 1 365 13 is_stmt 1 view .LVU203
 529 00fe FFF7FEFF 		bl	_tx_thread_system_preempt_check
 530              	.LVL52:
 531              	.L1:
 377:./Middlewares/ST/threadx/common/src/tx_byte_release.c **** }
 532              		.loc 1 377 1 is_stmt 0 view .LVU204
 533 0102 3046     		mov	r0, r6
 534 0104 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 535              	.LVL53:
 536              	.L24:
 537              		.loc 1 377 1 view .LVU205
 538              		.align	2
 539              	.L23:
 540 0108 EEEEFFFF 		.word	-4370
 541 010c 45545942 		.word	1113150533
 542 0110 00000000 		.word	_tx_thread_current_ptr
 543 0114 00000000 		.word	_tx_thread_preempt_disable
 544              		.cfi_endproc
 545              	.LFE8:
 547              		.text
 548              	.Letext0:
 549              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
 550              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_thread.h"
 551              		.file 5 "./Middlewares/ST/threadx/common/inc/tx_byte_pool.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 tx_byte_release.c
C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s:20     .text._tx_byte_release:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s:26     .text._tx_byte_release:00000000 _tx_byte_release
C:\Users\Dennis\AppData\Local\Temp\ccrWYwTl.s:540    .text._tx_byte_release:00000108 $d

UNDEFINED SYMBOLS
_tx_thread_system_resume
_tx_byte_pool_search
_tx_thread_system_preempt_check
_tx_thread_current_ptr
_tx_thread_preempt_disable
