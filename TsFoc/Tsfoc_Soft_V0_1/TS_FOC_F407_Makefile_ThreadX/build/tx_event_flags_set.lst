ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_event_flags_set.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_event_flags_set,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_event_flags_set
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_event_flags_set:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "./Middlewares/ST/threadx/common/src/tx_event_flags_set.c"
   1:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**   Event Flags                                                         */
  19:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  26:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /* Include necessary system files.  */
  27:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  28:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_api.h"
  29:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_trace.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_thread.h"
  31:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_event_flags.h"
  32:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  33:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  34:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  35:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  36:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  FUNCTION                                               RELEASE        */
  37:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  38:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_event_flags_set                                 PORTABLE C      */
  39:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                           6.1          */
  40:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  AUTHOR                                                                */
  41:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  42:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  44:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  DESCRIPTION                                                           */
  45:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  46:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    This function sets the specified flags in the event group based on  */
  47:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    the set option specified.  All threads suspended on the group whose */
  48:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    get request can now be satisfied are resumed.                       */
  49:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  50:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  INPUT                                                                 */
  51:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  52:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    group_ptr                         Pointer to group control block    */
  53:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    flags_to_set                      Event flags to set                */
  54:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    set_option                        Specified either AND or OR        */
  55:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                        operation on the event flags    */
  56:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  57:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  OUTPUT                                                                */
  58:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  59:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    TX_SUCCESS                        Always returns success            */
  60:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  61:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  CALLS                                                                 */
  62:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  63:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_thread_system_preempt_check   Check for preemption              */
  64:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_thread_system_resume          Resume thread service             */
  65:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_thread_system_ni_resume       Non-interruptable resume thread   */
  66:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  67:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  CALLED BY                                                             */
  68:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  69:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    Application Code                                                    */
  70:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  71:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  RELEASE HISTORY                                                       */
  72:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  73:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    DATE              NAME                      DESCRIPTION             */
  74:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  75:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  76:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  77:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                            resulting in version 6.1    */
  78:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  79:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  80:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT  _tx_event_flags_set(TX_EVENT_FLAGS_GROUP *group_ptr, ULONG flags_to_set, UINT set_option)
  81:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** {
  30              		.loc 1 81 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 81 1 is_stmt 0 view .LVU1
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 3


  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 48
  50 0006 8446     		mov	ip, r0
  82:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  83:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_INTERRUPT_SAVE_AREA
  51              		.loc 1 83 1 is_stmt 1 view .LVU2
  84:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  85:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *thread_ptr;
  52              		.loc 1 85 1 view .LVU3
  86:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *next_thread_ptr;
  53              		.loc 1 86 1 view .LVU4
  87:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *next_thread;
  54              		.loc 1 87 1 view .LVU5
  88:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *previous_thread;
  55              		.loc 1 88 1 view .LVU6
  89:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *satisfied_list;
  56              		.loc 1 89 1 view .LVU7
  90:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *last_satisfied;
  57              		.loc 1 90 1 view .LVU8
  91:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *suspended_list;
  58              		.loc 1 91 1 view .LVU9
  92:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            suspended_count;
  59              		.loc 1 92 1 view .LVU10
  93:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           current_event_flags;
  60              		.loc 1 93 1 view .LVU11
  94:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           requested_flags;
  61              		.loc 1 94 1 view .LVU12
  95:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           flags_satisfied;
  62              		.loc 1 95 1 view .LVU13
  96:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           *suspend_info_ptr;
  63              		.loc 1 96 1 view .LVU14
  97:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            and_request;
  64              		.loc 1 97 1 view .LVU15
  98:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            get_option;
  65              		.loc 1 98 1 view .LVU16
  99:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            clear_request;
  66              		.loc 1 99 1 view .LVU17
 100:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            preempt_check;
  67              		.loc 1 100 1 view .LVU18
 101:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 102:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            interrupted_set_request;
  68              		.loc 1 102 1 view .LVU19
 103:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 104:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 4


 105:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** VOID            (*events_set_notify)(struct TX_EVENT_FLAGS_GROUP_STRUCT *notify_group_ptr);
 106:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 107:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 108:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 109:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Disable interrupts to remove the semaphore from the created list.  */
 110:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     TX_DISABLE
  69              		.loc 1 110 5 view .LVU20
  70              	.LBB36:
  71              	.LBI36:
  72              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.10       */
  30:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 5


  48:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  60:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  61:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  62:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  63:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  64:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  65:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  66:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  67:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  69:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  70:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  71:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  72:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  73:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  74:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  75:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  77:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  78:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  80:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  81:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  83:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  84:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  85:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  86:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  87:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  88:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  89:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  90:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  91:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  92:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  93:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
  94:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  95:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
  97:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
  98:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
  99:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 100:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 102:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 103:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 104:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 6


 105:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 106:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 108:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 109:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 110:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 111:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 112:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 113:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 114:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 115:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 116:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 117:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 118:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 119:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 120:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 121:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 122:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 123:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 124:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 125:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 126:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 127:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 128:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 129:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 130:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 131:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 132:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 133:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 134:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 135:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 136:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 137:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 138:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 139:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 140:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 142:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 143:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 144:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 145:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 146:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 147:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 148:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 149:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 150:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 151:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 153:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 154:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 155:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 156:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 157:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0x0a800024)
 158:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 159:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 160:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 161:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 7


 162:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 163:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 164:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0xE0001004)
 165:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 166:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 167:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 168:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 169:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 170:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 171:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 172:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 173:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 175:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 176:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 177:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 178:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 179:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 180:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 181:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 182:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 184:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 185:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 186:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 187:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 188:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 189:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 191:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 192:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 194:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 196:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 197:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 198:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 199:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 200:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 201:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 202:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 203:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 204:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 206:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 208:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 209:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 210:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 211:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 212:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 213:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 214:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 215:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 216:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 218:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 8


 219:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 220:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 221:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 222:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 223:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 224:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 225:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 226:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 227:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 228:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 229:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 230:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 231:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 232:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 233:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 234:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 235:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 237:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 238:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 239:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 240:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 241:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 242:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 243:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 244:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 245:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 246:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 247:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 248:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 249:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 250:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 253:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 254:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 256:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 257:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 258:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 259:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 260:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 261:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 262:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 265:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 266:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 267:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 268:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 269:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 270:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 271:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 272:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 273:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 274:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 9


 276:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 277:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 278:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 279:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 280:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 281:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 282:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 283:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 284:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 285:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 286:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 288:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 289:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 290:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 291:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 292:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 293:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 294:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 295:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 296:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 297:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 298:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 300:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 301:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 302:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 303:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 304:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 305:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 307:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 308:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 310:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 311:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 312:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 313:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 314:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 315:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 316:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 317:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 318:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 319:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 320:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 321:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 322:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 325:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 326:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 327:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 328:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 329:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 330:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 331:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 10


 333:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 334:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 335:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 337:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 338:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 339:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 340:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 341:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 342:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 343:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 345:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 346:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 347:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 348:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 349:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 350:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 351:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 352:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 353:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 354:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 355:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 356:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 357:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 358:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 360:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 362:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 363:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 364:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 365:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 366:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 367:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 368:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 369:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 370:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 371:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 372:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 373:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 374:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 375:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 376:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 377:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 378:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 379:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 380:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 381:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((ULONG *) 0xE000EF34);  
 382:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 383:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 384:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 385:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 386:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 387:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 388:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 389:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 11


 390:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 391:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 392:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 393:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 394:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 395:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 396:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 397:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 398:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 399:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 400:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 401:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 402:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 403:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 404:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 405:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 406:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 407:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 408:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 409:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 410:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 411:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 412:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 413:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 414:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 415:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 416:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 417:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 418:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 419:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 420:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 421:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 422:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 423:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 424:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 425:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 426:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 427:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 428:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 429:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 430:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 432:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 433:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 434:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 435:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 436:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 437:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 438:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 439:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 440:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 441:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 442:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 443:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 444:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 445:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 446:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 12


 447:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 448:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 449:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 450:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 452:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 453:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 454:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 455:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 456:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 457:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 458:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 459:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 460:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 461:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 463:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 464:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 465:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 466:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 467:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 468:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 469:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 470:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 471:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 472:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 473:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 475:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 479:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 480:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 482:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 483:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 484:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 485:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 486:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 487:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 488:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 489:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 490:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 491:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 492:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 493:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 494:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 496:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 497:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 498:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 499:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 500:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 502:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 503:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 13


 504:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 505:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 506:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 507:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 509:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 510:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 511:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 512:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 514:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 515:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 516:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 517:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 518:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 519:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 520:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 521:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 522:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 523:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 524:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 526:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 528:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 529:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 530:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 531:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 532:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 534:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 536:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 537:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 538:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 540:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 542:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 543:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 544:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 545:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 546:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 548:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 549:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 551:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 553:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 554:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 555:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 557:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 558:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 559:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 560:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 14


 561:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 563:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 565:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  73              		.loc 2 566 63 view .LVU21
  74              	.LBB37:
 567:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  75              		.loc 2 568 1 view .LVU22
 569:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  76              		.loc 2 570 5 view .LVU23
  77              	.LBB38:
  78              	.LBI38:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  79              		.loc 2 533 63 view .LVU24
  80              	.LBB39:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  81              		.loc 2 535 1 view .LVU25
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  82              		.loc 2 539 5 view .LVU26
  83              		.syntax unified
  84              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  85 0008 EFF3108E 		MRS  lr, PRIMASK 
  86              	@ 0 "" 2
  87              	.LVL1:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  88              		.loc 2 541 5 view .LVU27
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  89              		.loc 2 541 5 is_stmt 0 view .LVU28
  90              		.thumb
  91              		.syntax unified
  92              	.LBE39:
  93              	.LBE38:
 571:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 572:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 573:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 574:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  94              		.loc 2 575 5 is_stmt 1 view .LVU29
  95              		.syntax unified
  96              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  97 000c 72B6     		CPSID i
  98              	@ 0 "" 2
 576:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 577:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
  99              		.loc 2 577 5 view .LVU30
 100              	.LVL2:
 101              		.loc 2 577 5 is_stmt 0 view .LVU31
 102              		.thumb
 103              		.syntax unified
 104              	.LBE37:
 105              	.LBE36:
 111:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 112:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifdef TX_EVENT_FLAGS_ENABLE_PERFORMANCE_INFO
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 15


 113:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 114:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Increment the total event flags set counter.  */
 115:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     _tx_event_flags_performance_set_count++;
 116:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 117:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Increment the number of event flags sets on this semaphore.  */
 118:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     group_ptr -> tx_event_flags_group_performance_set_count++;
 119:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 120:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 121:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 122:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_EVENT_FLAGS_SET, group_ptr, flags_to_set, set_option, group_pt
 123:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 124:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Log this kernel call.  */
 125:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     TX_EL_EVENT_FLAGS_SET_INSERT
 126:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 127:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Determine how to set this group's event flags.  */
 128:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     if ((set_option & TX_EVENT_FLAGS_AND_MASK) == TX_AND)
 106              		.loc 1 128 5 is_stmt 1 view .LVU32
 107              		.loc 1 128 8 is_stmt 0 view .LVU33
 108 000e 12F00203 		ands	r3, r2, #2
 109 0012 0193     		str	r3, [sp, #4]
 110 0014 13D0     		beq	.L2
 129:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     {
 130:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 131:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 132:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 133:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Set interrupted set request flag to false.  */
 134:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         interrupted_set_request =  TX_FALSE;
 111              		.loc 1 134 9 is_stmt 1 view .LVU34
 112              	.LVL3:
 135:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 136:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if the suspension list is being processed by an interrupted
 137:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****            set request.  */
 138:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (group_ptr -> tx_event_flags_group_suspended_count != TX_NO_SUSPENSIONS)
 113              		.loc 1 138 9 view .LVU35
 114              		.loc 1 138 23 is_stmt 0 view .LVU36
 115 0016 4369     		ldr	r3, [r0, #20]
 116              		.loc 1 138 12 view .LVU37
 117 0018 0BB1     		cbz	r3, .L3
 139:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 140:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 141:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             if (group_ptr -> tx_event_flags_group_suspension_list == TX_NULL)
 118              		.loc 1 141 13 is_stmt 1 view .LVU38
 119              		.loc 1 141 27 is_stmt 0 view .LVU39
 120 001a 0369     		ldr	r3, [r0, #16]
 121              		.loc 1 141 16 view .LVU40
 122 001c 53B1     		cbz	r3, .L32
 123              	.L3:
 124              	.LVL4:
 142:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 143:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 144:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Set the interrupted set request flag.  */
 145:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 interrupted_set_request =  TX_TRUE;
 146:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 147:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 148:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 149:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Was a set request interrupted?  */
 150:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (interrupted_set_request == TX_TRUE)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 16


 151:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 152:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 153:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* A previous set operation was interrupted, we need to defer the
 154:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                event clearing until the set operation is complete.  */
 155:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 156:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Remember the events to clear.  */
 157:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_delayed_clear =
 158:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear | ~flags_to
 159:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 160:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         else
 161:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 162:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 163:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 164:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Previous set operation was not interrupted, simply clear the
 165:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                specified flags by "ANDing" the flags into the current events
 166:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                of the group.  */
 167:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current =
 125              		.loc 1 167 13 is_stmt 1 view .LVU41
 168:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_current & flags_to_set;
 126              		.loc 1 168 27 is_stmt 0 view .LVU42
 127 001e DCF80830 		ldr	r3, [ip, #8]
 128              		.loc 1 168 59 view .LVU43
 129 0022 1940     		ands	r1, r1, r3
 130              	.LVL5:
 167:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_current & flags_to_set;
 131              		.loc 1 167 55 view .LVU44
 132 0024 CCF80810 		str	r1, [ip, #8]
 133              	.L4:
 169:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 170:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 171:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 172:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 173:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 174:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 175:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Restore interrupts.  */
 176:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         TX_RESTORE
 134              		.loc 1 176 9 is_stmt 1 view .LVU45
 135              	.LVL6:
 136              	.LBB40:
 137              	.LBI40:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 138              		.loc 2 556 55 view .LVU46
 139              	.LBB41:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 140              		.loc 2 562 5 view .LVU47
 141              		.syntax unified
 142              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 143 0028 8EF31088 		MSR  PRIMASK,lr
 144              	@ 0 "" 2
 145              	.LVL7:
 146              		.thumb
 147              		.syntax unified
 148              	.L5:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 149              		.loc 2 562 5 is_stmt 0 view .LVU48
 150              	.LBE41:
 151              	.LBE40:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 17


 177:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     }
 178:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     else
 179:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     {
 180:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 181:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 182:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 183:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Pickup the notify callback routine for this event flag group.  */
 184:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         events_set_notify =  group_ptr -> tx_event_flags_group_set_notify;
 185:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 186:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 187:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* "OR" the flags into the current events of the group.  */
 188:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         group_ptr -> tx_event_flags_group_current =
 189:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current | flags_to_set;
 190:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 191:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 192:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 193:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if there are any delayed flags to clear.  */
 194:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (group_ptr -> tx_event_flags_group_delayed_clear != ((ULONG) 0))
 195:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 196:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 197:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Yes, we need to neutralize the delayed clearing as well.  */
 198:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_delayed_clear =
 199:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear & ~flags_to
 200:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 201:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 202:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 203:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Clear the preempt check flag.  */
 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         preempt_check =  TX_FALSE;
 205:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 206:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Pickup the thread suspended count.  */
 207:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         suspended_count =  group_ptr -> tx_event_flags_group_suspended_count;
 208:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 209:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if there are any threads suspended on the event flag group.  */
 210:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (group_ptr -> tx_event_flags_group_suspension_list != TX_NULL)
 211:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 212:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 213:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Determine if there is just a single thread waiting on the event
 214:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                flag group.  */
 215:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             if (suspended_count == ((UINT) 1))
 216:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 217:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 218:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Single thread waiting for event flags.  Bypass the multiple thread
 219:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    logic.  */
 220:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 221:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup thread pointer.  */
 222:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =  group_ptr -> tx_event_flags_group_suspension_list;
 223:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 224:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the current event flags.  */
 225:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 current_event_flags =  group_ptr -> tx_event_flags_group_current;
 226:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 227:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the suspend information.  */
 228:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 requested_flags =  thread_ptr -> tx_thread_suspend_info;
 229:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 230:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the suspend option.  */
 231:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 get_option =  thread_ptr -> tx_thread_suspend_option;
 232:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 233:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Isolate the AND selection.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 18


 234:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 and_request =  (get_option & TX_AND);
 235:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 236:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Check for AND condition. All flags must be present to satisfy request.  */
 237:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 if (and_request == TX_AND)
 238:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 239:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 240:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* AND request is present.  */
 241:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 242:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Calculate the flags present.  */
 243:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     flags_satisfied =  (current_event_flags & requested_flags);
 244:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 245:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine if they satisfy the AND request.  */
 246:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (flags_satisfied != requested_flags)
 247:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 248:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 249:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* No, not all the requested flags are present. Clear the flags present var
 250:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  ((ULONG) 0);
 251:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 252:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 253:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 else
 254:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 255:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 256:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* OR request is present. Simply or the requested flags and the current flags. 
 257:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     flags_satisfied =  (current_event_flags & requested_flags);
 258:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 259:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 260:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Determine if the request is satisfied.  */
 261:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 if (flags_satisfied != ((ULONG) 0))
 262:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 263:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 264:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Yes, resume the thread and apply any event flag
 265:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        clearing.  */
 266:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 267:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Set the preempt check flag.  */
 268:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     preempt_check =  TX_TRUE;
 269:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 270:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Return the actual event flags that satisfied the request.  */
 271:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     suspend_info_ptr =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_a
 272:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     *suspend_info_ptr =  current_event_flags;
 273:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 274:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Pickup the clear bit.  */
 275:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     clear_request =  (get_option & TX_EVENT_FLAGS_CLEAR_MASK);
 276:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 277:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine whether or not clearing needs to take place.  */
 278:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (clear_request == TX_TRUE)
 279:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 280:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 281:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Yes, clear the flags that satisfied this request.  */
 282:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current =  group_ptr -> tx_event_flags_gr
 283:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 284:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 285:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Clear the suspension information in the event flag group.  */
 286:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspension_list =  TX_NULL;
 287:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 288:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 289:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Clear cleanup routine to avoid timeout.  */
 290:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 19


 291:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 292:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Put return status into the thread control block.  */
 293:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 294:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 295:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifdef TX_NOT_INTERRUPTABLE
 296:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 297:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume the thread!  */
 298:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_ni_resume(thread_ptr);
 299:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #else
 300:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 301:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Temporarily disable preemption.  */
 302:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_preempt_disable++;
 303:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 304:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupts.  */
 305:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 306:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 307:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume thread.  */
 308:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_resume(thread_ptr);
 309:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 310:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable interrupts to remove the semaphore from the created list.  */
 311:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_DISABLE
 312:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 313:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 314:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 315:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             else
 316:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 317:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 318:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Otherwise, the event flag requests of multiple threads must be
 319:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    examined.  */
 320:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 321:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup thread pointer, keep a local copy of the head pointer.  */
 322:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 suspended_list =  group_ptr -> tx_event_flags_group_suspension_list;
 323:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =      suspended_list;
 324:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 325:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Clear the suspended list head pointer to thwart manipulation of
 326:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    the list in ISR's while we are processing here.  */
 327:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_suspension_list =  TX_NULL;
 328:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 329:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup the satisfied thread pointers.  */
 330:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 satisfied_list =  TX_NULL;
 331:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 last_satisfied =  TX_NULL;
 332:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 333:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the current event flags.  */
 334:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 current_event_flags =  group_ptr -> tx_event_flags_group_current;
 335:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 336:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Disable preemption while we process the suspended list.  */
 337:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 _tx_thread_preempt_disable++;
 338:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 339:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Loop to examine all of the suspended threads. */
 340:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 do
 341:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 342:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 343:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 344:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 345:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupts temporarily.  */
 346:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 347:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 20


 348:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable interrupts again.  */
 349:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_DISABLE
 350:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 351:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 352:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine if we need to reset the search.  */
 353:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (group_ptr -> tx_event_flags_group_reset_search != TX_FALSE)
 354:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 355:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 356:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Clear the reset search flag.  */
 357:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_reset_search =  TX_FALSE;
 358:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 359:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Move the thread pointer to the beginning of the search list.  */
 360:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         thread_ptr =  suspended_list;
 361:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 362:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Reset the suspended count.  */
 363:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         suspended_count =  group_ptr -> tx_event_flags_group_suspended_count;
 364:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 365:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Update the current events with any new ones that might
 366:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                            have been set in a nested set events call from an ISR.  */
 367:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         current_event_flags =  current_event_flags | group_ptr -> tx_event_flags_gr
 368:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 369:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 370:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Save next thread pointer.  */
 371:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     next_thread_ptr =  thread_ptr -> tx_thread_suspended_next;
 372:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 373:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Pickup the suspend information.  */
 374:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     requested_flags =  thread_ptr -> tx_thread_suspend_info;
 375:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 376:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Pickup this thread's suspension get option.  */
 377:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     get_option =  thread_ptr -> tx_thread_suspend_option;
 378:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 379:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Isolate the AND selection.  */
 380:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     and_request =  (get_option & TX_AND);
 381:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 382:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Check for AND condition. All flags must be present to satisfy request.  */
 383:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (and_request == TX_AND)
 384:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 385:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 386:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* AND request is present.  */
 387:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 388:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Calculate the flags present.  */
 389:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  (current_event_flags & requested_flags);
 390:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 391:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Determine if they satisfy the AND request.  */
 392:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (flags_satisfied != requested_flags)
 393:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 394:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 395:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* No, not all the requested flags are present. Clear the flags present
 396:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             flags_satisfied =  ((ULONG) 0);
 397:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 398:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 399:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     else
 400:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 401:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 402:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* OR request is present. Simply or the requested flags and the current fla
 403:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  (current_event_flags & requested_flags);
 404:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 21


 405:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 406:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Check to see if the thread had a timeout or wait abort during the event sear
 407:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        If so, just set the flags satisfied to ensure the processing here removes th
 408:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        the suspension list.  */
 409:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (thread_ptr -> tx_thread_state != TX_EVENT_FLAG)
 410:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 411:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 412:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        /* Simply set the satisfied flags to 1 in order to remove the thread from th
 413:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  ((ULONG) 1);
 414:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 415:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 416:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine if the request is satisfied.  */
 417:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (flags_satisfied != ((ULONG) 0))
 418:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 419:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 420:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Yes, this request can be handled now.  */
 421:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 422:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Set the preempt check flag.  */
 423:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         preempt_check =  TX_TRUE;
 424:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 425:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Determine if the thread is still suspended on the event flag group. If n
 426:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                            abort must have been done from an ISR.  */
 427:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (thread_ptr -> tx_thread_state == TX_EVENT_FLAG)
 428:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 429:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 430:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Return the actual event flags that satisfied the request.  */
 431:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             suspend_info_ptr =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_
 432:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             *suspend_info_ptr =  current_event_flags;
 433:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 434:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Pickup the clear bit.  */
 435:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             clear_request =  (get_option & TX_EVENT_FLAGS_CLEAR_MASK);
 436:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 437:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Determine whether or not clearing needs to take place.  */
 438:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             if (clear_request == TX_TRUE)
 439:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 440:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 441:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 /* Yes, clear the flags that satisfied this request.  */
 442:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 group_ptr -> tx_event_flags_group_current =  group_ptr -> tx_event_
 443:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 444:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 445:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Prepare for resumption of the first thread.  */
 446:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 447:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Clear cleanup routine to avoid timeout.  */
 448:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
 449:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 450:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Put return status into the thread control block.  */
 451:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 452:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 453:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 454:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* We need to remove the thread from the suspension list and place it in th
 455:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                            expired list.  */
 456:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 457:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* See if this is the only suspended thread on the list.  */
 458:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (thread_ptr == thread_ptr -> tx_thread_suspended_next)
 459:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 460:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 461:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Yes, the only suspended thread.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 22


 462:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 463:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Update the head pointer.  */
 464:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             suspended_list =  TX_NULL;
 465:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 466:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         else
 467:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 468:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 469:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* At least one more thread is on the same expiration list.  */
 470:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 471:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Update the links of the adjacent threads.  */
 472:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread =                                  thread_ptr -> tx_thread_
 473:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread =                              thread_ptr -> tx_thread_
 474:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 475:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 476:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 477:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Update the list head pointer, if removing the head of the
 478:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                list.  */
 479:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             if (suspended_list == thread_ptr)
 480:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 481:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 482:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 /* Yes, head pointer needs to be updated.  */
 483:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 suspended_list =  thread_ptr -> tx_thread_suspended_next;
 484:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 485:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 486:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 487:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Decrement the suspension count.  */
 488:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_suspended_count--;
 489:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 490:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Place this thread on the expired list.  */
 491:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (satisfied_list == TX_NULL)
 492:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 493:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 494:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* First thread on the satisfied list.  */
 495:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             satisfied_list =  thread_ptr;
 496:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =  thread_ptr;
 497:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 498:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Setup initial next pointer.  */
 499:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =  TX_NULL;
 500:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 501:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         else
 502:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 503:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 504:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Not the first thread on the satisfied list.  */
 505:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 506:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Link it up at the end.  */
 507:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied -> tx_thread_suspended_next =  thread_ptr;
 508:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =      TX_NULL;
 509:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =                              thread_ptr;
 510:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 511:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 512:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 513:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Copy next thread pointer to working thread ptr.  */
 514:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr =  next_thread_ptr;
 515:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 516:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Decrement the suspension count.  */
 517:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     suspended_count--;
 518:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 23


 519:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 } while (suspended_count != TX_NO_SUSPENSIONS);
 520:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 521:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup the group's suspension list head again.  */
 522:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_suspension_list =  suspended_list;
 523:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 524:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 525:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 526:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Determine if there is any delayed event clearing to perform.  */
 527:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 if (group_ptr -> tx_event_flags_group_delayed_clear != ((ULONG) 0))
 528:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 529:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 530:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Perform the delayed event clearing.  */
 531:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_current =
 532:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current & ~(group_ptr -> tx_event_flags_g
 533:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 534:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Clear the delayed event flag clear value.  */
 535:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_delayed_clear =  ((ULONG) 0);
 536:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 537:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 538:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 539:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Restore interrupts.  */
 540:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 TX_RESTORE
 541:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 542:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Walk through the satisfied list, setup initial thread pointer. */
 543:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =  satisfied_list;
 544:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 while(thread_ptr != TX_NULL)
 545:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 546:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 547:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Get next pointer first.  */
 548:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     next_thread_ptr =  thread_ptr -> tx_thread_suspended_next;
 549:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 550:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable interrupts.  */
 551:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_DISABLE
 552:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 553:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifdef TX_NOT_INTERRUPTABLE
 554:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 555:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume the thread!  */
 556:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_ni_resume(thread_ptr);
 557:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 558:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupts.  */
 559:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 560:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #else
 561:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 562:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable preemption again.  */
 563:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_preempt_disable++;
 564:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 565:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupt posture.  */
 566:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 567:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 568:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume the thread.  */
 569:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_resume(thread_ptr);
 570:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 571:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 572:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Move next thread to current.  */
 573:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr =  next_thread_ptr;
 574:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 575:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 24


 576:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Disable interrupts.  */
 577:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 TX_DISABLE
 578:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 579:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Release thread preemption disable.  */
 580:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 _tx_thread_preempt_disable--;
 581:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 582:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 583:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         else
 584:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 585:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 586:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Determine if we need to set the reset search field.  */
 587:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             if (group_ptr -> tx_event_flags_group_suspended_count != TX_NO_SUSPENSIONS)
 588:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 589:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 590:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* We interrupted a search of an event flag group suspension
 591:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    list.  Make sure we reset the search.  */
 592:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_reset_search =  TX_TRUE;
 593:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 594:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 595:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 596:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Restore interrupts.  */
 597:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         TX_RESTORE
 598:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 599:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 600:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 601:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if a notify callback is required.  */
 602:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (events_set_notify != TX_NULL)
 603:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 604:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 605:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Call application event flags set notification.  */
 606:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             (events_set_notify)(group_ptr);
 607:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 608:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 609:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 610:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if a check for preemption is necessary.  */
 611:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (preempt_check == TX_TRUE)
 612:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 613:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 614:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Yes, one or more threads were resumed, check for preemption.  */
 615:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             _tx_thread_system_preempt_check();
 616:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 617:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     }
 618:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 619:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Return completion status.  */
 620:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     return(TX_SUCCESS);
 152              		.loc 1 620 5 is_stmt 1 view .LVU49
 621:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** }
 153              		.loc 1 621 1 is_stmt 0 view .LVU50
 154 002c 0020     		movs	r0, #0
 155 002e 03B0     		add	sp, sp, #12
 156              	.LCFI2:
 157              		.cfi_remember_state
 158              		.cfi_def_cfa_offset 36
 159              		@ sp needed
 160 0030 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 161              	.LVL8:
 162              	.L32:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 25


 163              	.LCFI3:
 164              		.cfi_restore_state
 145:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 165              		.loc 1 145 17 is_stmt 1 view .LVU51
 150:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 166              		.loc 1 150 9 view .LVU52
 157:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear | ~flags_to
 167              		.loc 1 157 13 view .LVU53
 158:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 168              		.loc 1 158 51 is_stmt 0 view .LVU54
 169 0034 036A     		ldr	r3, [r0, #32]
 158:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 170              		.loc 1 158 89 view .LVU55
 171 0036 63EA0101 		orn	r1, r3, r1
 172              	.LVL9:
 157:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear | ~flags_to
 173              		.loc 1 157 61 view .LVU56
 174 003a 0162     		str	r1, [r0, #32]
 175 003c F4E7     		b	.L4
 176              	.LVL10:
 177              	.L2:
 188:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current | flags_to_set;
 178              		.loc 1 188 9 is_stmt 1 view .LVU57
 189:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 179              		.loc 1 189 23 is_stmt 0 view .LVU58
 180 003e 8268     		ldr	r2, [r0, #8]
 181              	.LVL11:
 189:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 182              		.loc 1 189 55 view .LVU59
 183 0040 0A43     		orrs	r2, r2, r1
 188:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current | flags_to_set;
 184              		.loc 1 188 51 view .LVU60
 185 0042 8260     		str	r2, [r0, #8]
 194:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 186              		.loc 1 194 9 is_stmt 1 view .LVU61
 194:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 187              		.loc 1 194 23 is_stmt 0 view .LVU62
 188 0044 036A     		ldr	r3, [r0, #32]
 194:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 189              		.loc 1 194 12 view .LVU63
 190 0046 13B1     		cbz	r3, .L6
 198:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear & ~flags_to
 191              		.loc 1 198 13 is_stmt 1 view .LVU64
 199:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 192              		.loc 1 199 89 is_stmt 0 view .LVU65
 193 0048 23EA0101 		bic	r1, r3, r1
 194              	.LVL12:
 198:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear & ~flags_to
 195              		.loc 1 198 61 view .LVU66
 196 004c 0162     		str	r1, [r0, #32]
 197              	.L6:
 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 198              		.loc 1 204 9 is_stmt 1 view .LVU67
 199              	.LVL13:
 207:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 200              		.loc 1 207 9 view .LVU68
 207:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 26


 201              		.loc 1 207 25 is_stmt 0 view .LVU69
 202 004e DCF81440 		ldr	r4, [ip, #20]
 203              	.LVL14:
 210:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 204              		.loc 1 210 9 is_stmt 1 view .LVU70
 210:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 205              		.loc 1 210 23 is_stmt 0 view .LVU71
 206 0052 DCF81080 		ldr	r8, [ip, #16]
 210:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 207              		.loc 1 210 12 view .LVU72
 208 0056 B8F1000F 		cmp	r8, #0
 209 005a 00F0D680 		beq	.L7
 215:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 210              		.loc 1 215 13 is_stmt 1 view .LVU73
 215:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 211              		.loc 1 215 16 is_stmt 0 view .LVU74
 212 005e 012C     		cmp	r4, #1
 213 0060 0CD0     		beq	.L33
 322:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =      suspended_list;
 214              		.loc 1 322 17 is_stmt 1 view .LVU75
 215              	.LVL15:
 323:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 216              		.loc 1 323 17 view .LVU76
 327:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 217              		.loc 1 327 17 view .LVU77
 327:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 218              		.loc 1 327 67 is_stmt 0 view .LVU78
 219 0062 0020     		movs	r0, #0
 220              	.LVL16:
 327:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 221              		.loc 1 327 67 view .LVU79
 222 0064 CCF81000 		str	r0, [ip, #16]
 330:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 last_satisfied =  TX_NULL;
 223              		.loc 1 330 17 is_stmt 1 view .LVU80
 224              	.LVL17:
 331:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 225              		.loc 1 331 17 view .LVU81
 334:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 226              		.loc 1 334 17 view .LVU82
 337:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 227              		.loc 1 337 17 view .LVU83
 337:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 228              		.loc 1 337 43 is_stmt 0 view .LVU84
 229 0068 6C49     		ldr	r1, .L39
 230 006a 0B68     		ldr	r3, [r1]
 231 006c 0133     		adds	r3, r3, #1
 232 006e 0B60     		str	r3, [r1]
 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 233              		.loc 1 204 23 view .LVU85
 234 0070 019D     		ldr	r5, [sp, #4]
 322:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =      suspended_list;
 235              		.loc 1 322 32 view .LVU86
 236 0072 4646     		mov	r6, r8
 330:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 last_satisfied =  TX_NULL;
 237              		.loc 1 330 32 view .LVU87
 238 0074 4746     		mov	r7, r8
 239 0076 A946     		mov	r9, r5
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 27


 240 0078 8046     		mov	r8, r0
 241              	.LVL18:
 330:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 last_satisfied =  TX_NULL;
 242              		.loc 1 330 32 view .LVU88
 243 007a 56E0     		b	.L22
 244              	.LVL19:
 245              	.L33:
 222:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 246              		.loc 1 222 17 is_stmt 1 view .LVU89
 225:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 247              		.loc 1 225 17 view .LVU90
 228:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 248              		.loc 1 228 17 view .LVU91
 228:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 249              		.loc 1 228 33 is_stmt 0 view .LVU92
 250 007c D8F87830 		ldr	r3, [r8, #120]
 251              	.LVL20:
 231:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 252              		.loc 1 231 17 is_stmt 1 view .LVU93
 231:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 253              		.loc 1 231 28 is_stmt 0 view .LVU94
 254 0080 D8F88010 		ldr	r1, [r8, #128]
 255              	.LVL21:
 234:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 256              		.loc 1 234 17 is_stmt 1 view .LVU95
 237:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 257              		.loc 1 237 17 view .LVU96
 237:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 258              		.loc 1 237 20 is_stmt 0 view .LVU97
 259 0084 11F0020F 		tst	r1, #2
 260 0088 06D0     		beq	.L9
 243:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 261              		.loc 1 243 21 is_stmt 1 view .LVU98
 243:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 262              		.loc 1 243 37 is_stmt 0 view .LVU99
 263 008a 02EA0305 		and	r5, r2, r3
 264              	.LVL22:
 246:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 265              		.loc 1 246 21 is_stmt 1 view .LVU100
 246:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 266              		.loc 1 246 24 is_stmt 0 view .LVU101
 267 008e 33EA0200 		bics	r0, r3, r2
 268              	.LVL23:
 246:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 269              		.loc 1 246 24 view .LVU102
 270 0092 03D0     		beq	.L11
 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 271              		.loc 1 204 23 view .LVU103
 272 0094 019D     		ldr	r5, [sp, #4]
 273              	.LVL24:
 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 274              		.loc 1 204 23 view .LVU104
 275 0096 B0E0     		b	.L10
 276              	.LVL25:
 277              	.L9:
 257:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 278              		.loc 1 257 21 is_stmt 1 view .LVU105
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 28


 257:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 279              		.loc 1 257 37 is_stmt 0 view .LVU106
 280 0098 02EA0305 		and	r5, r2, r3
 281              	.LVL26:
 282              	.L11:
 261:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 283              		.loc 1 261 17 is_stmt 1 view .LVU107
 261:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 284              		.loc 1 261 20 is_stmt 0 view .LVU108
 285 009c 002D     		cmp	r5, #0
 286 009e 00F0AC80 		beq	.L10
 268:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 287              		.loc 1 268 21 is_stmt 1 view .LVU109
 288              	.LVL27:
 271:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     *suspend_info_ptr =  current_event_flags;
 289              		.loc 1 271 21 view .LVU110
 271:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     *suspend_info_ptr =  current_event_flags;
 290              		.loc 1 271 38 is_stmt 0 view .LVU111
 291 00a2 D8F87C00 		ldr	r0, [r8, #124]
 292              	.LVL28:
 272:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 293              		.loc 1 272 21 is_stmt 1 view .LVU112
 272:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 294              		.loc 1 272 39 is_stmt 0 view .LVU113
 295 00a6 0260     		str	r2, [r0]
 275:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 296              		.loc 1 275 21 is_stmt 1 view .LVU114
 297              	.LVL29:
 278:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 298              		.loc 1 278 21 view .LVU115
 278:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 299              		.loc 1 278 24 is_stmt 0 view .LVU116
 300 00a8 11F0010F 		tst	r1, #1
 301 00ac 05D0     		beq	.L12
 282:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 302              		.loc 1 282 25 is_stmt 1 view .LVU117
 282:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 303              		.loc 1 282 80 is_stmt 0 view .LVU118
 304 00ae DCF80820 		ldr	r2, [ip, #8]
 305              	.LVL30:
 282:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 306              		.loc 1 282 112 view .LVU119
 307 00b2 22EA0303 		bic	r3, r2, r3
 308              	.LVL31:
 282:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 309              		.loc 1 282 67 view .LVU120
 310 00b6 CCF80830 		str	r3, [ip, #8]
 311              	.LVL32:
 312              	.L12:
 286:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 313              		.loc 1 286 21 is_stmt 1 view .LVU121
 286:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 314              		.loc 1 286 71 is_stmt 0 view .LVU122
 315 00ba 0023     		movs	r3, #0
 316 00bc CCF81030 		str	r3, [ip, #16]
 287:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 317              		.loc 1 287 21 is_stmt 1 view .LVU123
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 29


 287:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 318              		.loc 1 287 71 is_stmt 0 view .LVU124
 319 00c0 CCF81430 		str	r3, [ip, #20]
 290:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 320              		.loc 1 290 21 is_stmt 1 view .LVU125
 290:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 321              		.loc 1 290 61 is_stmt 0 view .LVU126
 322 00c4 C8F86830 		str	r3, [r8, #104]
 293:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 323              		.loc 1 293 21 is_stmt 1 view .LVU127
 293:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 324              		.loc 1 293 60 is_stmt 0 view .LVU128
 325 00c8 C8F88430 		str	r3, [r8, #132]
 302:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 326              		.loc 1 302 21 is_stmt 1 view .LVU129
 302:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 327              		.loc 1 302 47 is_stmt 0 view .LVU130
 328 00cc 534A     		ldr	r2, .L39
 329 00ce 1368     		ldr	r3, [r2]
 330 00d0 0133     		adds	r3, r3, #1
 331 00d2 1360     		str	r3, [r2]
 305:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 332              		.loc 1 305 21 is_stmt 1 view .LVU131
 333              	.LVL33:
 334              	.LBB42:
 335              	.LBI42:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 336              		.loc 2 556 55 view .LVU132
 337              	.LBB43:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 338              		.loc 2 562 5 view .LVU133
 339              		.syntax unified
 340              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 341 00d4 8EF31088 		MSR  PRIMASK,lr
 342              	@ 0 "" 2
 343              	.LVL34:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 344              		.loc 2 562 5 is_stmt 0 view .LVU134
 345              		.thumb
 346              		.syntax unified
 347              	.LBE43:
 348              	.LBE42:
 308:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 349              		.loc 1 308 21 is_stmt 1 view .LVU135
 350 00d8 4046     		mov	r0, r8
 351              	.LVL35:
 308:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 352              		.loc 1 308 21 is_stmt 0 view .LVU136
 353 00da FFF7FEFF 		bl	_tx_thread_system_resume
 354              	.LVL36:
 311:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 355              		.loc 1 311 21 is_stmt 1 view .LVU137
 356              	.LBB44:
 357              	.LBI44:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 358              		.loc 2 566 63 view .LVU138
 359              	.LBB45:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 30


 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 360              		.loc 2 568 1 view .LVU139
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361              		.loc 2 570 5 view .LVU140
 362              	.LBB46:
 363              	.LBI46:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 364              		.loc 2 533 63 view .LVU141
 365              	.LBB47:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 366              		.loc 2 535 1 view .LVU142
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 367              		.loc 2 539 5 view .LVU143
 368              		.syntax unified
 369              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 370 00de EFF3108E 		MRS  lr, PRIMASK 
 371              	@ 0 "" 2
 372              	.LVL37:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 373              		.loc 2 541 5 view .LVU144
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 374              		.loc 2 541 5 is_stmt 0 view .LVU145
 375              		.thumb
 376              		.syntax unified
 377              	.LBE47:
 378              	.LBE46:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 379              		.loc 2 575 5 is_stmt 1 view .LVU146
 380              		.syntax unified
 381              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 382 00e2 72B6     		CPSID i
 383              	@ 0 "" 2
 384              		.loc 2 577 5 view .LVU147
 385              	.LVL38:
 386              		.loc 2 577 5 is_stmt 0 view .LVU148
 387              		.thumb
 388              		.syntax unified
 389              	.LBE45:
 390              	.LBE44:
 268:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 391              		.loc 1 268 35 view .LVU149
 392 00e4 2546     		mov	r5, r4
 393              	.LVL39:
 268:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 394              		.loc 1 268 35 view .LVU150
 395 00e6 88E0     		b	.L10
 396              	.LVL40:
 397              	.L27:
 268:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 398              		.loc 1 268 35 view .LVU151
 399 00e8 3B46     		mov	r3, r7
 400 00ea 30E0     		b	.L13
 401              	.LVL41:
 402              	.L14:
 403:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 403              		.loc 1 403 25 is_stmt 1 view .LVU152
 403:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 31


 404              		.loc 1 403 41 is_stmt 0 view .LVU153
 405 00ec 02EA050B 		and	fp, r2, r5
 406              	.LVL42:
 407              	.L15:
 409:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 408              		.loc 1 409 21 is_stmt 1 view .LVU154
 409:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 409              		.loc 1 409 36 is_stmt 0 view .LVU155
 410 00f0 196B     		ldr	r1, [r3, #48]
 409:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 411              		.loc 1 409 24 view .LVU156
 412 00f2 0729     		cmp	r1, #7
 413 00f4 3AD0     		beq	.L34
 414              	.L16:
 415              	.LVL43:
 423:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 416              		.loc 1 423 25 is_stmt 1 view .LVU157
 427:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 417              		.loc 1 427 25 view .LVU158
 427:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 418              		.loc 1 427 28 is_stmt 0 view .LVU159
 419 00f6 0729     		cmp	r1, #7
 420 00f8 3CD0     		beq	.L35
 421              	.L18:
 458:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 422              		.loc 1 458 25 is_stmt 1 view .LVU160
 458:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 423              		.loc 1 458 54 is_stmt 0 view .LVU161
 424 00fa 196F     		ldr	r1, [r3, #112]
 458:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 425              		.loc 1 458 28 view .LVU162
 426 00fc 9942     		cmp	r1, r3
 427 00fe 4BD0     		beq	.L29
 472:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread =                              thread_ptr -> tx_thread_
 428              		.loc 1 472 29 is_stmt 1 view .LVU163
 429              	.LVL44:
 473:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 430              		.loc 1 473 29 view .LVU164
 473:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 431              		.loc 1 473 45 is_stmt 0 view .LVU165
 432 0100 5D6F     		ldr	r5, [r3, #116]
 433              	.LVL45:
 474:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 434              		.loc 1 474 29 is_stmt 1 view .LVU166
 474:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 435              		.loc 1 474 73 is_stmt 0 view .LVU167
 436 0102 4D67     		str	r5, [r1, #116]
 475:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 437              		.loc 1 475 29 is_stmt 1 view .LVU168
 475:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 438              		.loc 1 475 73 is_stmt 0 view .LVU169
 439 0104 2967     		str	r1, [r5, #112]
 479:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 440              		.loc 1 479 29 is_stmt 1 view .LVU170
 479:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 441              		.loc 1 479 32 is_stmt 0 view .LVU171
 442 0106 B342     		cmp	r3, r6
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 32


 443 0108 44D0     		beq	.L36
 444              	.LVL46:
 445              	.L20:
 488:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 446              		.loc 1 488 25 is_stmt 1 view .LVU172
 488:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 447              		.loc 1 488 35 is_stmt 0 view .LVU173
 448 010a DCF81410 		ldr	r1, [ip, #20]
 488:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 449              		.loc 1 488 74 view .LVU174
 450 010e 0139     		subs	r1, r1, #1
 451 0110 CCF81410 		str	r1, [ip, #20]
 491:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 452              		.loc 1 491 25 is_stmt 1 view .LVU175
 491:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 453              		.loc 1 491 28 is_stmt 0 view .LVU176
 454 0114 0028     		cmp	r0, #0
 455 0116 41D0     		beq	.L37
 507:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =      TX_NULL;
 456              		.loc 1 507 29 is_stmt 1 view .LVU177
 507:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =      TX_NULL;
 457              		.loc 1 507 72 is_stmt 0 view .LVU178
 458 0118 C8F87030 		str	r3, [r8, #112]
 508:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =                              thread_ptr;
 459              		.loc 1 508 29 is_stmt 1 view .LVU179
 508:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =                              thread_ptr;
 460              		.loc 1 508 68 is_stmt 0 view .LVU180
 461 011c 0021     		movs	r1, #0
 462 011e 1967     		str	r1, [r3, #112]
 509:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 463              		.loc 1 509 29 is_stmt 1 view .LVU181
 464              	.LVL47:
 509:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 465              		.loc 1 509 44 is_stmt 0 view .LVU182
 466 0120 9846     		mov	r8, r3
 423:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 467              		.loc 1 423 39 view .LVU183
 468 0122 4FF00109 		mov	r9, #1
 469              	.LVL48:
 470              	.L17:
 514:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 471              		.loc 1 514 21 is_stmt 1 view .LVU184
 517:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 472              		.loc 1 517 21 view .LVU185
 519:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 473              		.loc 1 519 25 view .LVU186
 519:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 474              		.loc 1 519 17 is_stmt 0 view .LVU187
 475 0126 013C     		subs	r4, r4, #1
 476              	.LVL49:
 519:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 477              		.loc 1 519 17 view .LVU188
 478 0128 3FD0     		beq	.L38
 479              	.LVL50:
 480              	.L22:
 340:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 481              		.loc 1 340 17 is_stmt 1 view .LVU189
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 33


 346:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 482              		.loc 1 346 21 view .LVU190
 483              	.LBB48:
 484              	.LBI48:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 485              		.loc 2 556 55 view .LVU191
 486              	.LBB49:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 487              		.loc 2 562 5 view .LVU192
 488              		.syntax unified
 489              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 490 012a 8EF31088 		MSR  PRIMASK,lr
 491              	@ 0 "" 2
 492              	.LVL51:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 493              		.loc 2 562 5 is_stmt 0 view .LVU193
 494              		.thumb
 495              		.syntax unified
 496              	.LBE49:
 497              	.LBE48:
 349:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 498              		.loc 1 349 21 is_stmt 1 view .LVU194
 499              	.LBB50:
 500              	.LBI50:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 501              		.loc 2 566 63 view .LVU195
 502              	.LBB51:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 503              		.loc 2 568 1 view .LVU196
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 504              		.loc 2 570 5 view .LVU197
 505              	.LBB52:
 506              	.LBI52:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 507              		.loc 2 533 63 view .LVU198
 508              	.LBB53:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 509              		.loc 2 535 1 view .LVU199
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 510              		.loc 2 539 5 view .LVU200
 511              		.syntax unified
 512              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 513 012e EFF3108E 		MRS  lr, PRIMASK 
 514              	@ 0 "" 2
 515              	.LVL52:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 516              		.loc 2 541 5 view .LVU201
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 517              		.loc 2 541 5 is_stmt 0 view .LVU202
 518              		.thumb
 519              		.syntax unified
 520              	.LBE53:
 521              	.LBE52:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 522              		.loc 2 575 5 is_stmt 1 view .LVU203
 523              		.syntax unified
 524              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 34


 525 0132 72B6     		CPSID i
 526              	@ 0 "" 2
 527              		.loc 2 577 5 view .LVU204
 528              	.LVL53:
 529              		.loc 2 577 5 is_stmt 0 view .LVU205
 530              		.thumb
 531              		.syntax unified
 532              	.LBE51:
 533              	.LBE50:
 353:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 534              		.loc 1 353 21 is_stmt 1 view .LVU206
 353:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 535              		.loc 1 353 35 is_stmt 0 view .LVU207
 536 0134 DCF80C30 		ldr	r3, [ip, #12]
 353:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 537              		.loc 1 353 24 view .LVU208
 538 0138 002B     		cmp	r3, #0
 539 013a D5D0     		beq	.L27
 357:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 540              		.loc 1 357 25 is_stmt 1 view .LVU209
 357:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 541              		.loc 1 357 72 is_stmt 0 view .LVU210
 542 013c 0023     		movs	r3, #0
 543 013e CCF80C30 		str	r3, [ip, #12]
 360:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 544              		.loc 1 360 25 is_stmt 1 view .LVU211
 545              	.LVL54:
 363:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 546              		.loc 1 363 25 view .LVU212
 363:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 547              		.loc 1 363 41 is_stmt 0 view .LVU213
 548 0142 DCF81440 		ldr	r4, [ip, #20]
 549              	.LVL55:
 367:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 550              		.loc 1 367 25 is_stmt 1 view .LVU214
 367:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 551              		.loc 1 367 80 is_stmt 0 view .LVU215
 552 0146 DCF80830 		ldr	r3, [ip, #8]
 367:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 553              		.loc 1 367 45 view .LVU216
 554 014a 1A43     		orrs	r2, r2, r3
 555              	.LVL56:
 360:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 556              		.loc 1 360 36 view .LVU217
 557 014c 3346     		mov	r3, r6
 558              	.LVL57:
 559              	.L13:
 371:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 560              		.loc 1 371 21 is_stmt 1 view .LVU218
 371:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 561              		.loc 1 371 37 is_stmt 0 view .LVU219
 562 014e 1F6F     		ldr	r7, [r3, #112]
 563              	.LVL58:
 374:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 564              		.loc 1 374 21 is_stmt 1 view .LVU220
 374:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 565              		.loc 1 374 37 is_stmt 0 view .LVU221
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 35


 566 0150 9D6F     		ldr	r5, [r3, #120]
 567              	.LVL59:
 377:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 568              		.loc 1 377 21 is_stmt 1 view .LVU222
 377:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 569              		.loc 1 377 32 is_stmt 0 view .LVU223
 570 0152 D3F880A0 		ldr	r10, [r3, #128]
 571              	.LVL60:
 380:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 572              		.loc 1 380 21 is_stmt 1 view .LVU224
 383:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 573              		.loc 1 383 21 view .LVU225
 383:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 574              		.loc 1 383 24 is_stmt 0 view .LVU226
 575 0156 1AF0020F 		tst	r10, #2
 576 015a C7D0     		beq	.L14
 389:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 577              		.loc 1 389 25 is_stmt 1 view .LVU227
 389:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 578              		.loc 1 389 41 is_stmt 0 view .LVU228
 579 015c 02EA050B 		and	fp, r2, r5
 580              	.LVL61:
 392:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 581              		.loc 1 392 25 is_stmt 1 view .LVU229
 392:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 582              		.loc 1 392 28 is_stmt 0 view .LVU230
 583 0160 35EA0201 		bics	r1, r5, r2
 584 0164 C4D0     		beq	.L15
 396:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 585              		.loc 1 396 45 view .LVU231
 586 0166 DDF804B0 		ldr	fp, [sp, #4]
 587              	.LVL62:
 396:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 588              		.loc 1 396 45 view .LVU232
 589 016a C1E7     		b	.L15
 590              	.LVL63:
 591              	.L34:
 417:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 592              		.loc 1 417 21 is_stmt 1 view .LVU233
 417:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 593              		.loc 1 417 24 is_stmt 0 view .LVU234
 594 016c BBF1000F 		cmp	fp, #0
 595 0170 D9D0     		beq	.L17
 596 0172 C0E7     		b	.L16
 597              	.LVL64:
 598              	.L35:
 431:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             *suspend_info_ptr =  current_event_flags;
 599              		.loc 1 431 29 is_stmt 1 view .LVU235
 431:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             *suspend_info_ptr =  current_event_flags;
 600              		.loc 1 431 46 is_stmt 0 view .LVU236
 601 0174 D96F     		ldr	r1, [r3, #124]
 602              	.LVL65:
 432:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 603              		.loc 1 432 29 is_stmt 1 view .LVU237
 432:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 604              		.loc 1 432 47 is_stmt 0 view .LVU238
 605 0176 0A60     		str	r2, [r1]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 36


 435:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 606              		.loc 1 435 29 is_stmt 1 view .LVU239
 607              	.LVL66:
 438:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 608              		.loc 1 438 29 view .LVU240
 438:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 609              		.loc 1 438 32 is_stmt 0 view .LVU241
 610 0178 1AF0010F 		tst	r10, #1
 611 017c 05D0     		beq	.L19
 442:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 612              		.loc 1 442 33 is_stmt 1 view .LVU242
 442:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 613              		.loc 1 442 88 is_stmt 0 view .LVU243
 614 017e DCF80810 		ldr	r1, [ip, #8]
 615              	.LVL67:
 442:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 616              		.loc 1 442 120 view .LVU244
 617 0182 21EA0501 		bic	r1, r1, r5
 442:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 618              		.loc 1 442 75 view .LVU245
 619 0186 CCF80810 		str	r1, [ip, #8]
 620              	.L19:
 448:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 621              		.loc 1 448 29 is_stmt 1 view .LVU246
 448:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 622              		.loc 1 448 69 is_stmt 0 view .LVU247
 623 018a 0021     		movs	r1, #0
 624 018c 9966     		str	r1, [r3, #104]
 451:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 625              		.loc 1 451 29 is_stmt 1 view .LVU248
 451:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 626              		.loc 1 451 68 is_stmt 0 view .LVU249
 627 018e C3F88410 		str	r1, [r3, #132]
 628 0192 B2E7     		b	.L18
 629              	.LVL68:
 630              	.L36:
 483:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 631              		.loc 1 483 33 is_stmt 1 view .LVU250
 483:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 632              		.loc 1 483 48 is_stmt 0 view .LVU251
 633 0194 1E6F     		ldr	r6, [r3, #112]
 634              	.LVL69:
 483:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 635              		.loc 1 483 48 view .LVU252
 636 0196 B8E7     		b	.L20
 637              	.LVL70:
 638              	.L29:
 464:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 639              		.loc 1 464 44 view .LVU253
 640 0198 0026     		movs	r6, #0
 641              	.LVL71:
 464:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 642              		.loc 1 464 44 view .LVU254
 643 019a B6E7     		b	.L20
 644              	.LVL72:
 645              	.L37:
 495:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =  thread_ptr;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 37


 646              		.loc 1 495 29 is_stmt 1 view .LVU255
 496:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 647              		.loc 1 496 29 view .LVU256
 499:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 648              		.loc 1 499 29 view .LVU257
 499:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 649              		.loc 1 499 68 is_stmt 0 view .LVU258
 650 019c 0021     		movs	r1, #0
 651 019e 1967     		str	r1, [r3, #112]
 496:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 652              		.loc 1 496 44 view .LVU259
 653 01a0 9846     		mov	r8, r3
 495:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =  thread_ptr;
 654              		.loc 1 495 44 view .LVU260
 655 01a2 1846     		mov	r0, r3
 423:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 656              		.loc 1 423 39 view .LVU261
 657 01a4 4FF00109 		mov	r9, #1
 658 01a8 BDE7     		b	.L17
 659              	.LVL73:
 660              	.L38:
 522:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 661              		.loc 1 522 67 view .LVU262
 662 01aa 4D46     		mov	r5, r9
 522:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 663              		.loc 1 522 17 is_stmt 1 view .LVU263
 522:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 664              		.loc 1 522 67 is_stmt 0 view .LVU264
 665 01ac CCF81060 		str	r6, [ip, #16]
 527:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 666              		.loc 1 527 17 is_stmt 1 view .LVU265
 527:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 667              		.loc 1 527 31 is_stmt 0 view .LVU266
 668 01b0 DCF82030 		ldr	r3, [ip, #32]
 527:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 669              		.loc 1 527 20 view .LVU267
 670 01b4 43B1     		cbz	r3, .L23
 671              	.LVL74:
 531:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current & ~(group_ptr -> tx_event_flags_g
 672              		.loc 1 531 21 is_stmt 1 view .LVU268
 532:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 673              		.loc 1 532 35 is_stmt 0 view .LVU269
 674 01b6 DCF80820 		ldr	r2, [ip, #8]
 675              	.LVL75:
 532:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 676              		.loc 1 532 67 view .LVU270
 677 01ba 22EA0303 		bic	r3, r2, r3
 531:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current & ~(group_ptr -> tx_event_flags_g
 678              		.loc 1 531 63 view .LVU271
 679 01be CCF80830 		str	r3, [ip, #8]
 535:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 680              		.loc 1 535 21 is_stmt 1 view .LVU272
 535:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 681              		.loc 1 535 69 is_stmt 0 view .LVU273
 682 01c2 0023     		movs	r3, #0
 683 01c4 CCF82030 		str	r3, [ip, #32]
 684              	.L23:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 38


 540:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 685              		.loc 1 540 17 is_stmt 1 view .LVU274
 686              	.LVL76:
 687              	.LBB54:
 688              	.LBI54:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 689              		.loc 2 556 55 view .LVU275
 690              	.LBB55:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 691              		.loc 2 562 5 view .LVU276
 692              		.syntax unified
 693              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 694 01c8 8EF31088 		MSR  PRIMASK,lr
 695              	@ 0 "" 2
 696              	.LVL77:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 697              		.loc 2 562 5 is_stmt 0 view .LVU277
 698              		.thumb
 699              		.syntax unified
 700              	.LBE55:
 701              	.LBE54:
 543:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 while(thread_ptr != TX_NULL)
 702              		.loc 1 543 17 is_stmt 1 view .LVU278
 544:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 703              		.loc 1 544 17 view .LVU279
 544:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 704              		.loc 1 544 22 is_stmt 0 view .LVU280
 705 01cc 0CE0     		b	.L24
 706              	.LVL78:
 707              	.L25:
 548:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 708              		.loc 1 548 21 is_stmt 1 view .LVU281
 548:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 709              		.loc 1 548 37 is_stmt 0 view .LVU282
 710 01ce 046F     		ldr	r4, [r0, #112]
 711              	.LVL79:
 551:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 712              		.loc 1 551 21 is_stmt 1 view .LVU283
 713              	.LBB56:
 714              	.LBI56:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 715              		.loc 2 566 63 view .LVU284
 716              	.LBB57:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 717              		.loc 2 568 1 view .LVU285
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 718              		.loc 2 570 5 view .LVU286
 719              	.LBB58:
 720              	.LBI58:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 721              		.loc 2 533 63 view .LVU287
 722              	.LBB59:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 723              		.loc 2 535 1 view .LVU288
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 724              		.loc 2 539 5 view .LVU289
 725              		.syntax unified
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 39


 726              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 727 01d0 EFF31081 		MRS  r1, PRIMASK 
 728              	@ 0 "" 2
 729              	.LVL80:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 730              		.loc 2 541 5 view .LVU290
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 731              		.loc 2 541 5 is_stmt 0 view .LVU291
 732              		.thumb
 733              		.syntax unified
 734              	.LBE59:
 735              	.LBE58:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 736              		.loc 2 575 5 is_stmt 1 view .LVU292
 737              		.syntax unified
 738              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 739 01d4 72B6     		CPSID i
 740              	@ 0 "" 2
 741              		.loc 2 577 5 view .LVU293
 742              	.LVL81:
 743              		.loc 2 577 5 is_stmt 0 view .LVU294
 744              		.thumb
 745              		.syntax unified
 746              	.LBE57:
 747              	.LBE56:
 563:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 748              		.loc 1 563 21 is_stmt 1 view .LVU295
 563:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 749              		.loc 1 563 47 is_stmt 0 view .LVU296
 750 01d6 114A     		ldr	r2, .L39
 751 01d8 1368     		ldr	r3, [r2]
 752 01da 0133     		adds	r3, r3, #1
 753 01dc 1360     		str	r3, [r2]
 566:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 754              		.loc 1 566 21 is_stmt 1 view .LVU297
 755              	.LVL82:
 756              	.LBB60:
 757              	.LBI60:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 758              		.loc 2 556 55 view .LVU298
 759              	.LBB61:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 760              		.loc 2 562 5 view .LVU299
 761              		.syntax unified
 762              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 763 01de 81F31088 		MSR  PRIMASK,r1
 764              	@ 0 "" 2
 765              	.LVL83:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 766              		.loc 2 562 5 is_stmt 0 view .LVU300
 767              		.thumb
 768              		.syntax unified
 769              	.LBE61:
 770              	.LBE60:
 569:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 771              		.loc 1 569 21 is_stmt 1 view .LVU301
 772 01e2 FFF7FEFF 		bl	_tx_thread_system_resume
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 40


 773              	.LVL84:
 573:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 774              		.loc 1 573 21 view .LVU302
 573:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 775              		.loc 1 573 32 is_stmt 0 view .LVU303
 776 01e6 2046     		mov	r0, r4
 777              	.LVL85:
 778              	.L24:
 544:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 779              		.loc 1 544 22 is_stmt 1 view .LVU304
 780 01e8 0028     		cmp	r0, #0
 781 01ea F0D1     		bne	.L25
 577:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 782              		.loc 1 577 17 view .LVU305
 783              	.LBB62:
 784              	.LBI62:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 785              		.loc 2 566 63 view .LVU306
 786              	.LBB63:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 787              		.loc 2 568 1 view .LVU307
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 788              		.loc 2 570 5 view .LVU308
 789              	.LBB64:
 790              	.LBI64:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 791              		.loc 2 533 63 view .LVU309
 792              	.LBB65:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 793              		.loc 2 535 1 view .LVU310
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 794              		.loc 2 539 5 view .LVU311
 795              		.syntax unified
 796              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 797 01ec EFF3108E 		MRS  lr, PRIMASK 
 798              	@ 0 "" 2
 799              	.LVL86:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 800              		.loc 2 541 5 view .LVU312
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 801              		.loc 2 541 5 is_stmt 0 view .LVU313
 802              		.thumb
 803              		.syntax unified
 804              	.LBE65:
 805              	.LBE64:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 806              		.loc 2 575 5 is_stmt 1 view .LVU314
 807              		.syntax unified
 808              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 809 01f0 72B6     		CPSID i
 810              	@ 0 "" 2
 811              		.loc 2 577 5 view .LVU315
 812              	.LVL87:
 813              		.loc 2 577 5 is_stmt 0 view .LVU316
 814              		.thumb
 815              		.syntax unified
 816              	.LBE63:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 41


 817              	.LBE62:
 580:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 818              		.loc 1 580 17 is_stmt 1 view .LVU317
 580:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 819              		.loc 1 580 43 is_stmt 0 view .LVU318
 820 01f2 0A4A     		ldr	r2, .L39
 821 01f4 1368     		ldr	r3, [r2]
 822 01f6 013B     		subs	r3, r3, #1
 823 01f8 1360     		str	r3, [r2]
 824              	.LVL88:
 825              	.L10:
 597:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 826              		.loc 1 597 9 is_stmt 1 view .LVU319
 827              	.LBB66:
 828              	.LBI66:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 829              		.loc 2 556 55 view .LVU320
 830              	.LBB67:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 831              		.loc 2 562 5 view .LVU321
 832              		.syntax unified
 833              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 834 01fa 8EF31088 		MSR  PRIMASK,lr
 835              	@ 0 "" 2
 836              	.LVL89:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 837              		.loc 2 562 5 is_stmt 0 view .LVU322
 838              		.thumb
 839              		.syntax unified
 840              	.LBE67:
 841              	.LBE66:
 611:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 842              		.loc 1 611 9 is_stmt 1 view .LVU323
 611:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 843              		.loc 1 611 12 is_stmt 0 view .LVU324
 844 01fe 012D     		cmp	r5, #1
 845 0200 7FF414AF 		bne	.L5
 615:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 846              		.loc 1 615 13 is_stmt 1 view .LVU325
 847 0204 FFF7FEFF 		bl	_tx_thread_system_preempt_check
 848              	.LVL90:
 615:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 849              		.loc 1 615 13 is_stmt 0 view .LVU326
 850 0208 10E7     		b	.L5
 851              	.LVL91:
 852              	.L7:
 587:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 853              		.loc 1 587 13 is_stmt 1 view .LVU327
 587:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 854              		.loc 1 587 16 is_stmt 0 view .LVU328
 855 020a 24B1     		cbz	r4, .L30
 592:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 856              		.loc 1 592 17 is_stmt 1 view .LVU329
 592:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 857              		.loc 1 592 64 is_stmt 0 view .LVU330
 858 020c 0123     		movs	r3, #1
 859 020e CCF80C30 		str	r3, [ip, #12]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 42


 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 860              		.loc 1 204 23 view .LVU331
 861 0212 019D     		ldr	r5, [sp, #4]
 862 0214 F1E7     		b	.L10
 863              	.L30:
 204:./Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 864              		.loc 1 204 23 view .LVU332
 865 0216 2546     		mov	r5, r4
 866 0218 EFE7     		b	.L10
 867              	.L40:
 868 021a 00BF     		.align	2
 869              	.L39:
 870 021c 00000000 		.word	_tx_thread_preempt_disable
 871              		.cfi_endproc
 872              	.LFE8:
 874              		.text
 875              	.Letext0:
 876              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
 877              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_thread.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 tx_event_flags_set.c
C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s:20     .text._tx_event_flags_set:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s:26     .text._tx_event_flags_set:00000000 _tx_event_flags_set
C:\Users\Dennis\AppData\Local\Temp\ccxsPYgK.s:870    .text._tx_event_flags_set:0000021c $d

UNDEFINED SYMBOLS
_tx_thread_system_resume
_tx_thread_system_preempt_check
_tx_thread_preempt_disable
