ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_mutex_priority_change.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_mutex_priority_change,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_mutex_priority_change
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_mutex_priority_change:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c"
   1:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**   Mutex                                                               */
  19:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  26:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /* Include necessary system files.  */
  27:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  28:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #include "tx_api.h"
  29:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #include "tx_thread.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #include "tx_mutex.h"
  31:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  32:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  33:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
  34:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  35:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  FUNCTION                                               RELEASE        */
  36:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  37:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_mutex_priority_change                           PORTABLE C      */
  38:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                           6.1.6        */
  39:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  AUTHOR                                                                */
  40:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  41:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    William E. Lamie, Microsoft Corporation                             */
  42:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  43:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  DESCRIPTION                                                           */
  44:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  45:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    This function changes the priority of the specified thread for the  */
  46:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    priority inheritance option of the mutex service.                   */
  47:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  48:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  INPUT                                                                 */
  49:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  50:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    thread_ptr                            Pointer to thread to suspend  */
  51:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    new_priority                          New thread priority           */
  52:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  53:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  OUTPUT                                                                */
  54:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  55:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    None                                                                */
  56:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  57:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  CALLS                                                                 */
  58:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  59:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_thread_system_resume          Resume thread                     */
  60:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_thread_system_ni_resume       Non-interruptable resume thread   */
  61:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_thread_system_suspend         Suspend thread                    */
  62:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_thread_system_ni_suspend      Non-interruptable suspend thread  */
  63:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  64:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  CALLED BY                                                             */
  65:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  66:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_mutex_get                     Inherit priority                  */
  67:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    _tx_mutex_put                     Restore previous priority         */
  68:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  69:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  RELEASE HISTORY                                                       */
  70:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  71:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*    DATE              NAME                      DESCRIPTION             */
  72:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  73:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  05-19-2020      William E. Lamie        Initial Version 6.0           */
  74:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  09-30-2020      William E. Lamie        Modified comment(s), and      */
  75:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            change thread state from    */
  76:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            TX_SUSPENDED to             */
  77:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            TX_PRIORITY_CHANGE before   */
  78:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            calling                     */
  79:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            _tx_thread_system_suspend,  */
  80:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            resulting in version 6.1    */
  81:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*  04-02-2021      Scott Larson            Modified comments, fixed      */
  82:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            mapping current thread's    */
  83:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            priority rather than next,  */
  84:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                            resulting in version 6.1.6  */
  85:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /*                                                                        */
  86:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** /**************************************************************************/
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 3


  87:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** VOID  _tx_mutex_priority_change(TX_THREAD *thread_ptr, UINT new_priority)
  88:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** {
  30              		.loc 1 88 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 88 1 is_stmt 0 view .LVU1
  35 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 3, -24
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 0446     		mov	r4, r0
  45 0004 0D46     		mov	r5, r1
  89:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  90:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_NOT_INTERRUPTABLE
  91:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  92:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** TX_INTERRUPT_SAVE_AREA
  46              		.loc 1 92 1 is_stmt 1 view .LVU2
  93:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
  94:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
  95:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** TX_THREAD       *execute_ptr;
  47              		.loc 1 95 1 view .LVU3
  96:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** TX_THREAD       *next_execute_ptr;
  48              		.loc 1 96 1 view .LVU4
  97:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** UINT            original_priority;
  49              		.loc 1 97 1 view .LVU5
  98:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_DISABLE_PREEMPTION_THRESHOLD
  99:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** ULONG           priority_bit;
 100:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #if TX_MAX_PRIORITIES > 32
 101:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** UINT            map_index;
 102:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 103:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 104:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 105:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 106:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 107:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_NOT_INTERRUPTABLE
 108:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 109:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     /* Lockout interrupts while the thread is being suspended.  */
 110:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     TX_DISABLE
  50              		.loc 1 110 5 view .LVU6
  51              	.LBB24:
  52              	.LBI24:
  53              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 4


  10:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.10       */
  30:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  60:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  61:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  62:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  63:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  64:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  65:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  66:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 5


  67:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  69:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  70:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  71:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  72:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  73:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  74:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  75:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  77:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  78:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  80:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  81:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  83:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  84:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  85:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  86:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  87:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  88:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  89:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  90:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  91:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  92:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  93:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
  94:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  95:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
  97:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
  98:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
  99:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 100:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 102:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 103:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 104:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 105:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 106:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 108:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 109:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 110:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 111:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 112:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 113:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 114:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 115:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 116:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 117:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 118:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 119:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 120:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 121:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 122:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 123:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 6


 124:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 125:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 126:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 127:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 128:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 129:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 130:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 131:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 132:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 133:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 134:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 135:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 136:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 137:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 138:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 139:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 140:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 142:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 143:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 144:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 145:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 146:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 147:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 148:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 149:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 150:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 151:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 153:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 154:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 155:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 156:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 157:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0x0a800024)
 158:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 159:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 160:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 161:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 162:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 163:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 164:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0xE0001004)
 165:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 166:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 167:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 168:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 169:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 170:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 171:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 172:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 173:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 175:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 176:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 177:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 178:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 179:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 180:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 7


 181:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 182:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 184:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 185:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 186:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 187:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 188:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 189:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 191:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 192:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 194:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 196:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 197:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 198:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 199:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 200:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 201:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 202:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 203:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 204:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 206:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 208:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 209:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 210:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 211:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 212:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 213:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 214:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 215:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 216:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 218:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 220:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 221:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 222:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 223:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 224:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 225:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 226:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 227:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 228:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 229:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 230:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 231:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 232:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 233:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 234:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 235:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 237:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 8


 238:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 239:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 240:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 241:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 242:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 243:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 244:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 245:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 246:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 247:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 248:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 249:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 250:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 253:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 254:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 256:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 257:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 258:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 259:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 260:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 261:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 262:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 265:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 266:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 267:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 268:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 269:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 270:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 271:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 272:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 273:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 274:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 276:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 277:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 278:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 279:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 280:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 281:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 282:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 283:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 284:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 285:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 286:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 288:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 289:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 290:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 291:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 292:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 293:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 294:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 9


 295:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 296:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 297:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 298:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 300:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 301:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 302:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 303:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 304:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 305:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 307:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 308:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 310:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 311:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 312:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 313:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 314:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 315:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 316:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 317:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 318:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 319:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 320:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 321:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 322:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 325:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 326:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 327:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 328:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 329:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 330:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 331:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 333:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 334:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 335:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 337:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 338:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 339:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 340:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 341:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 342:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 343:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 345:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 346:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 347:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 348:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 349:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 350:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 351:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 10


 352:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 353:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 354:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 355:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 356:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 357:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 358:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 360:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 362:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 363:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 364:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 365:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 366:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 367:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 368:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 369:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 370:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 371:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 372:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 373:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 374:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 375:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 376:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 377:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 378:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 379:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 380:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 381:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((ULONG *) 0xE000EF34);  
 382:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 383:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 384:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 385:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 386:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 387:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 388:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 389:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 390:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 391:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 392:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 393:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 394:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 395:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 396:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 397:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 398:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 399:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 400:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 401:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 402:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 403:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 404:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 405:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 406:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 407:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 408:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 11


 409:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 410:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 411:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 412:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 413:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 414:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 415:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 416:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 417:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 418:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 419:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 420:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 421:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 422:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 423:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 424:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 425:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 426:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 427:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 428:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 429:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 430:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 432:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 433:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 434:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 435:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 436:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 437:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 438:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 439:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 440:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 441:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 442:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 443:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 444:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 445:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 446:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 447:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 448:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 449:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 450:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 452:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 453:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 454:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 455:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 456:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 457:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 458:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 459:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 460:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 461:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 463:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 464:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 465:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 12


 466:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 467:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 468:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 469:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 470:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 471:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 472:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 473:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 475:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 479:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 480:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 482:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 483:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 484:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 485:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 486:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 487:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 488:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 489:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 490:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 491:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 492:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 493:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 494:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 496:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 497:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 498:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 499:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 500:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 502:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 503:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 504:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 505:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 506:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 507:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 509:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 510:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 511:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 512:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 514:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 515:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 516:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 517:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 518:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 519:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 520:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 521:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 522:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 13


 523:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 524:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 526:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 528:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 529:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 530:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 531:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 532:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 534:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 536:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 537:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 538:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 540:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 542:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 543:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 544:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 545:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 546:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 548:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 549:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 551:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 553:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 554:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 555:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 557:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 558:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 559:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 560:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 561:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 563:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 565:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  54              		.loc 2 566 63 view .LVU7
  55              	.LBB25:
 567:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  56              		.loc 2 568 1 view .LVU8
 569:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  57              		.loc 2 570 5 view .LVU9
  58              	.LBB26:
  59              	.LBI26:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  60              		.loc 2 533 63 view .LVU10
  61              	.LBB27:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 14


 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  62              		.loc 2 535 1 view .LVU11
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  63              		.loc 2 539 5 view .LVU12
  64              		.syntax unified
  65              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  66 0006 EFF31083 		MRS  r3, PRIMASK 
  67              	@ 0 "" 2
  68              	.LVL1:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  69              		.loc 2 541 5 view .LVU13
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  70              		.loc 2 541 5 is_stmt 0 view .LVU14
  71              		.thumb
  72              		.syntax unified
  73              	.LBE27:
  74              	.LBE26:
 571:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 572:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 573:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 574:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  75              		.loc 2 575 5 is_stmt 1 view .LVU15
  76              		.syntax unified
  77              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  78 000a 72B6     		CPSID i
  79              	@ 0 "" 2
 576:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 577:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
  80              		.loc 2 577 5 view .LVU16
  81              	.LVL2:
  82              		.loc 2 577 5 is_stmt 0 view .LVU17
  83              		.thumb
  84              		.syntax unified
  85              	.LBE25:
  86              	.LBE24:
 111:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 112:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 113:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     /* Determine if this thread is currently ready.  */
 114:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     if (thread_ptr -> tx_thread_state != TX_READY)
  87              		.loc 1 114 5 is_stmt 1 view .LVU18
  88              		.loc 1 114 20 is_stmt 0 view .LVU19
  89 000c 026B     		ldr	r2, [r0, #48]
  90              		.loc 1 114 8 view .LVU20
  91 000e 52B1     		cbz	r2, .L2
 115:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     {
 116:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 117:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Change thread priority to the new mutex priority-inheritance priority.  */
 118:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_priority =  new_priority;
  92              		.loc 1 118 9 is_stmt 1 view .LVU21
  93              		.loc 1 118 42 is_stmt 0 view .LVU22
  94 0010 E162     		str	r1, [r4, #44]
 119:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 120:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Determine how to setup the thread's preemption-threshold.  */
 121:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         if (thread_ptr -> tx_thread_user_preempt_threshold < new_priority)
  95              		.loc 1 121 9 is_stmt 1 view .LVU23
  96              		.loc 1 121 24 is_stmt 0 view .LVU24
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 15


  97 0012 D0F89820 		ldr	r2, [r0, #152]
  98              		.loc 1 121 12 view .LVU25
  99 0016 8A42     		cmp	r2, r1
 100 0018 03D2     		bcs	.L3
 122:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 123:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 124:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Change thread preemption-threshold to the user's preemption-threshold.  */
 125:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             thread_ptr -> tx_thread_preempt_threshold =  thread_ptr -> tx_thread_user_preempt_thres
 101              		.loc 1 125 13 is_stmt 1 view .LVU26
 102              		.loc 1 125 55 is_stmt 0 view .LVU27
 103 001a C263     		str	r2, [r0, #60]
 104              	.L4:
 126:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 127:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         else
 128:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 129:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 130:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Change the thread preemption-threshold to the new threshold.  */
 131:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             thread_ptr -> tx_thread_preempt_threshold =  new_priority;
 132:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 133:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 134:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_NOT_INTERRUPTABLE
 135:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Restore interrupts.  */
 136:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_RESTORE
 105              		.loc 1 136 9 is_stmt 1 view .LVU28
 106              	.LVL3:
 107              	.LBB28:
 108              	.LBI28:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 109              		.loc 2 556 55 view .LVU29
 110              	.LBB29:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 111              		.loc 2 562 5 view .LVU30
 112              		.syntax unified
 113              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 114 001c 83F31088 		MSR  PRIMASK,r3
 115              	@ 0 "" 2
 116              	.LVL4:
 117              		.thumb
 118              		.syntax unified
 119              	.L1:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 120              		.loc 2 562 5 is_stmt 0 view .LVU31
 121              	.LBE29:
 122              	.LBE28:
 137:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 138:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     }
 139:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     else
 140:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     {
 141:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 142:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Pickup the next thread to execute.  */
 143:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         execute_ptr =  _tx_thread_execute_ptr;
 144:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 145:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Save the original priority.  */
 146:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         original_priority =  thread_ptr -> tx_thread_priority;
 147:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 148:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifdef TX_NOT_INTERRUPTABLE
 149:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 16


 150:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Increment the preempt disable flag.  */
 151:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_preempt_disable++;
 152:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 153:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Set the state to priority change.  */
 154:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_state =    TX_PRIORITY_CHANGE;
 155:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 156:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Call actual non-interruptable thread suspension routine.  */
 157:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_system_ni_suspend(thread_ptr, ((ULONG) 0));
 158:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 159:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* At this point, the preempt disable flag is still set, so we still have
 160:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****            protection against all preemption.  */
 161:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 162:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Change thread priority to the new mutex priority-inheritance priority.  */
 163:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_priority =  new_priority;
 164:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 165:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Determine how to setup the thread's preemption-threshold.  */
 166:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         if (thread_ptr -> tx_thread_user_preempt_threshold < new_priority)
 167:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 168:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 169:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Change thread preemption-threshold to the user's preemption-threshold.  */
 170:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             thread_ptr -> tx_thread_preempt_threshold =  thread_ptr -> tx_thread_user_preempt_thres
 171:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 172:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         else
 173:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 174:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 175:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Change the thread preemption-threshold to the new threshold.  */
 176:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             thread_ptr -> tx_thread_preempt_threshold =  new_priority;
 177:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 178:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 179:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Resume the thread with the new priority.  */
 180:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_system_ni_resume(thread_ptr);
 181:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 182:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Decrement the preempt disable flag.  */
 183:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_preempt_disable--;
 184:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #else
 185:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 186:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Increment the preempt disable flag.  */
 187:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_preempt_disable =  _tx_thread_preempt_disable + ((UINT) 2);
 188:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 189:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Set the state to priority change.  */
 190:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_state =    TX_PRIORITY_CHANGE;
 191:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 192:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Set the suspending flag. */
 193:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_suspending =  TX_TRUE;
 194:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 195:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Setup the timeout period.  */
 196:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  ((ULONG) 0);
 197:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 198:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Restore interrupts.  */
 199:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_RESTORE
 200:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 201:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* The thread is ready and must first be removed from the list.  Call the
 202:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****            system suspend function to accomplish this.  */
 203:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_system_suspend(thread_ptr);
 204:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 205:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Disable interrupts.  */
 206:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_DISABLE
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 17


 207:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 208:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* At this point, the preempt disable flag is still set, so we still have
 209:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****            protection against all preemption.  */
 210:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 211:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Change thread priority to the new mutex priority-inheritance priority.  */
 212:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         thread_ptr -> tx_thread_priority =  new_priority;
 213:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 214:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Determine how to setup the thread's preemption-threshold.  */
 215:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         if (thread_ptr -> tx_thread_user_preempt_threshold < new_priority)
 216:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 217:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 218:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Change thread preemption-threshold to the user's preemption-threshold.  */
 219:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             thread_ptr -> tx_thread_preempt_threshold =  thread_ptr -> tx_thread_user_preempt_thres
 220:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 221:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         else
 222:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 223:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 224:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Change the thread preemption-threshold to the new threshold.  */
 225:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             thread_ptr -> tx_thread_preempt_threshold =  new_priority;
 226:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 227:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 228:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Restore interrupts.  */
 229:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_RESTORE
 230:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 231:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Resume the thread with the new priority.  */
 232:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         _tx_thread_system_resume(thread_ptr);
 233:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 234:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 235:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Optional processing extension.  */
 236:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_MUTEX_PRIORITY_CHANGE_EXTENSION
 237:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 238:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_NOT_INTERRUPTABLE
 239:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 240:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Disable interrupts.  */
 241:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_DISABLE
 242:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 243:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 244:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Pickup the next thread to execute.  */
 245:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         next_execute_ptr =  _tx_thread_execute_ptr;
 246:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 247:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Determine if this thread is not the next thread to execute.  */
 248:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         if (thread_ptr != next_execute_ptr)
 249:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 250:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 251:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             /* Make sure the thread is still ready.  */
 252:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             if (thread_ptr -> tx_thread_state == TX_READY)
 253:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             {
 254:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 255:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 /* Now check and see if this thread has an equal or higher priority.  */
 256:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 if (thread_ptr -> tx_thread_priority <= next_execute_ptr -> tx_thread_priority)
 257:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 {
 258:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 259:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     /* Now determine if this thread was the previously executing thread.  */
 260:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     if (thread_ptr == execute_ptr)
 261:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 262:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 263:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         /* Yes, this thread was previously executing before we temporarily suspende
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 18


 264:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                            it in order to change the priority. A lower or same priority thread cann
 265:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                            to execute in this case since this thread really didn't suspend.  Simply
 266:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                            pointer to this thread.  */
 267:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         _tx_thread_execute_ptr =  thread_ptr;
 268:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 269:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         /* Determine if we moved to a lower priority. If so, move the thread to the
 270:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         if (original_priority < new_priority)
 271:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 272:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 273:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* Ensure that this thread is placed at the front of the priority list.
 274:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             _tx_thread_priority_list[thread_ptr -> tx_thread_priority] =  thread_pt
 275:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         }
 276:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     }
 277:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 }
 278:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 else
 279:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 {
 280:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 281:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     /* Now determine if this thread's preemption-threshold needs to be enforced.  *
 282:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     if (thread_ptr -> tx_thread_preempt_threshold < thread_ptr -> tx_thread_priorit
 283:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 284:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 285:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         /* Yes, preemption-threshold is in force for this thread. */
 286:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 287:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         /* Compare the next thread to execute thread's priority against the thread'
 288:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         if (thread_ptr -> tx_thread_preempt_threshold <= next_execute_ptr -> tx_thr
 289:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 290:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 291:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* We must swap execute pointers to enforce the preemption-threshold of
 292:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                                priority inheritance.  */
 293:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             _tx_thread_execute_ptr =  thread_ptr;
 294:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 295:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* Determine if we moved to a lower priority. If so, move the thread to
 296:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             if (original_priority < new_priority)
 297:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             {
 298:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 299:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                                 /* Ensure that this thread is placed at the front of the priority l
 300:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                                 _tx_thread_priority_list[thread_ptr -> tx_thread_priority] =  threa
 301:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             }
 302:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         }
 303:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 304:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_DISABLE_PREEMPTION_THRESHOLD
 305:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 306:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         else
 307:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 308:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 309:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* In this case, we need to mark the preempted map to indicate a thread
 310:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                                preemption-threshold.  */
 311:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 312:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #if TX_MAX_PRIORITIES > 32
 313:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 314:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* Calculate the index into the bit map array.  */
 315:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             map_index =  (thread_ptr -> tx_thread_priority)/ ((UINT) 32);
 316:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 317:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* Set the active bit to remember that the preempt map has something se
 318:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             TX_DIV32_BIT_SET(thread_ptr -> tx_thread_priority, priority_bit)
 319:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             _tx_thread_preempted_map_active =  _tx_thread_preempted_map_active | pr
 320:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 19


 321:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 322:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             /* Remember that this thread was preempted by a thread above the thread
 323:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             TX_MOD32_BIT_SET(thread_ptr -> tx_thread_priority, priority_bit)
 324:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             _tx_thread_preempted_maps[MAP_INDEX] =  _tx_thread_preempted_maps[MAP_I
 325:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         }
 326:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 327:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     }
 328:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 }
 329:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             }
 330:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 331:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 332:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #ifndef TX_NOT_INTERRUPTABLE
 333:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 334:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         /* Restore interrupts.  */
 335:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         TX_RESTORE
 336:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 337:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****     }
 338:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** }
 123              		.loc 1 338 1 view .LVU32
 124 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 125              	.LVL5:
 126              	.L3:
 131:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 127              		.loc 1 131 13 is_stmt 1 view .LVU33
 131:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 128              		.loc 1 131 55 is_stmt 0 view .LVU34
 129 0022 E163     		str	r1, [r4, #60]
 130 0024 FAE7     		b	.L4
 131              	.L2:
 143:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 132              		.loc 1 143 9 is_stmt 1 view .LVU35
 143:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 133              		.loc 1 143 21 is_stmt 0 view .LVU36
 134 0026 244A     		ldr	r2, .L12
 135 0028 1668     		ldr	r6, [r2]
 136              	.LVL6:
 146:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 137              		.loc 1 146 9 is_stmt 1 view .LVU37
 146:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 138              		.loc 1 146 27 is_stmt 0 view .LVU38
 139 002a C76A     		ldr	r7, [r0, #44]
 140              	.LVL7:
 187:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 141              		.loc 1 187 9 is_stmt 1 view .LVU39
 187:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 142              		.loc 1 187 66 is_stmt 0 view .LVU40
 143 002c 2349     		ldr	r1, .L12+4
 144              	.LVL8:
 187:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 145              		.loc 1 187 66 view .LVU41
 146 002e 0A68     		ldr	r2, [r1]
 147 0030 0232     		adds	r2, r2, #2
 187:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 148              		.loc 1 187 36 view .LVU42
 149 0032 0A60     		str	r2, [r1]
 190:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 150              		.loc 1 190 9 is_stmt 1 view .LVU43
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 20


 190:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 151              		.loc 1 190 39 is_stmt 0 view .LVU44
 152 0034 0E22     		movs	r2, #14
 153 0036 0263     		str	r2, [r0, #48]
 193:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 154              		.loc 1 193 9 is_stmt 1 view .LVU45
 193:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 155              		.loc 1 193 44 is_stmt 0 view .LVU46
 156 0038 0122     		movs	r2, #1
 157 003a 8263     		str	r2, [r0, #56]
 196:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 158              		.loc 1 196 9 is_stmt 1 view .LVU47
 196:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 159              		.loc 1 196 73 is_stmt 0 view .LVU48
 160 003c 0022     		movs	r2, #0
 161 003e C264     		str	r2, [r0, #76]
 199:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 162              		.loc 1 199 9 is_stmt 1 view .LVU49
 163              	.LVL9:
 164              	.LBB30:
 165              	.LBI30:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 166              		.loc 2 556 55 view .LVU50
 167              	.LBB31:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 168              		.loc 2 562 5 view .LVU51
 169              		.syntax unified
 170              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 171 0040 83F31088 		MSR  PRIMASK,r3
 172              	@ 0 "" 2
 173              	.LVL10:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174              		.loc 2 562 5 is_stmt 0 view .LVU52
 175              		.thumb
 176              		.syntax unified
 177              	.LBE31:
 178              	.LBE30:
 203:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 179              		.loc 1 203 9 is_stmt 1 view .LVU53
 180 0044 FFF7FEFF 		bl	_tx_thread_system_suspend
 181              	.LVL11:
 206:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 182              		.loc 1 206 9 view .LVU54
 183              	.LBB32:
 184              	.LBI32:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 185              		.loc 2 566 63 view .LVU55
 186              	.LBB33:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 187              		.loc 2 568 1 view .LVU56
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 188              		.loc 2 570 5 view .LVU57
 189              	.LBB34:
 190              	.LBI34:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 191              		.loc 2 533 63 view .LVU58
 192              	.LBB35:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 21


 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 193              		.loc 2 535 1 view .LVU59
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 194              		.loc 2 539 5 view .LVU60
 195              		.syntax unified
 196              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 197 0048 EFF31082 		MRS  r2, PRIMASK 
 198              	@ 0 "" 2
 199              	.LVL12:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 200              		.loc 2 541 5 view .LVU61
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 201              		.loc 2 541 5 is_stmt 0 view .LVU62
 202              		.thumb
 203              		.syntax unified
 204              	.LBE35:
 205              	.LBE34:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 206              		.loc 2 575 5 is_stmt 1 view .LVU63
 207              		.syntax unified
 208              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 209 004c 72B6     		CPSID i
 210              	@ 0 "" 2
 211              		.loc 2 577 5 view .LVU64
 212              	.LVL13:
 213              		.loc 2 577 5 is_stmt 0 view .LVU65
 214              		.thumb
 215              		.syntax unified
 216              	.LBE33:
 217              	.LBE32:
 212:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 218              		.loc 1 212 9 is_stmt 1 view .LVU66
 212:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 219              		.loc 1 212 42 is_stmt 0 view .LVU67
 220 004e E562     		str	r5, [r4, #44]
 215:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 221              		.loc 1 215 9 is_stmt 1 view .LVU68
 215:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 222              		.loc 1 215 24 is_stmt 0 view .LVU69
 223 0050 D4F89830 		ldr	r3, [r4, #152]
 215:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 224              		.loc 1 215 12 view .LVU70
 225 0054 AB42     		cmp	r3, r5
 226 0056 17D2     		bcs	.L6
 219:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 227              		.loc 1 219 13 is_stmt 1 view .LVU71
 219:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 228              		.loc 1 219 55 is_stmt 0 view .LVU72
 229 0058 E363     		str	r3, [r4, #60]
 230              	.L7:
 229:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 231              		.loc 1 229 9 is_stmt 1 view .LVU73
 232              	.LVL14:
 233              	.LBB36:
 234              	.LBI36:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 235              		.loc 2 556 55 view .LVU74
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 22


 236              	.LBB37:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 237              		.loc 2 562 5 view .LVU75
 238              		.syntax unified
 239              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 240 005a 82F31088 		MSR  PRIMASK,r2
 241              	@ 0 "" 2
 242              	.LVL15:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 243              		.loc 2 562 5 is_stmt 0 view .LVU76
 244              		.thumb
 245              		.syntax unified
 246              	.LBE37:
 247              	.LBE36:
 232:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 248              		.loc 1 232 9 is_stmt 1 view .LVU77
 249 005e 2046     		mov	r0, r4
 250 0060 FFF7FEFF 		bl	_tx_thread_system_resume
 251              	.LVL16:
 241:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 252              		.loc 1 241 9 view .LVU78
 253              	.LBB38:
 254              	.LBI38:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 255              		.loc 2 566 63 view .LVU79
 256              	.LBB39:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 257              		.loc 2 568 1 view .LVU80
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 258              		.loc 2 570 5 view .LVU81
 259              	.LBB40:
 260              	.LBI40:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 261              		.loc 2 533 63 view .LVU82
 262              	.LBB41:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 263              		.loc 2 535 1 view .LVU83
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 264              		.loc 2 539 5 view .LVU84
 265              		.syntax unified
 266              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 267 0064 EFF31082 		MRS  r2, PRIMASK 
 268              	@ 0 "" 2
 269              	.LVL17:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 270              		.loc 2 541 5 view .LVU85
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 271              		.loc 2 541 5 is_stmt 0 view .LVU86
 272              		.thumb
 273              		.syntax unified
 274              	.LBE41:
 275              	.LBE40:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 276              		.loc 2 575 5 is_stmt 1 view .LVU87
 277              		.syntax unified
 278              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 279 0068 72B6     		CPSID i
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 23


 280              	@ 0 "" 2
 281              		.loc 2 577 5 view .LVU88
 282              	.LVL18:
 283              		.loc 2 577 5 is_stmt 0 view .LVU89
 284              		.thumb
 285              		.syntax unified
 286              	.LBE39:
 287              	.LBE38:
 245:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 288              		.loc 1 245 9 is_stmt 1 view .LVU90
 245:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 289              		.loc 1 245 26 is_stmt 0 view .LVU91
 290 006a 134B     		ldr	r3, .L12
 291 006c 1B68     		ldr	r3, [r3]
 292              	.LVL19:
 248:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 293              		.loc 1 248 9 is_stmt 1 view .LVU92
 248:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         {
 294              		.loc 1 248 12 is_stmt 0 view .LVU93
 295 006e 9C42     		cmp	r4, r3
 296 0070 07D0     		beq	.L8
 252:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             {
 297              		.loc 1 252 13 is_stmt 1 view .LVU94
 252:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             {
 298              		.loc 1 252 28 is_stmt 0 view .LVU95
 299 0072 216B     		ldr	r1, [r4, #48]
 252:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****             {
 300              		.loc 1 252 16 view .LVU96
 301 0074 29B9     		cbnz	r1, .L8
 256:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 {
 302              		.loc 1 256 17 is_stmt 1 view .LVU97
 256:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 {
 303              		.loc 1 256 32 is_stmt 0 view .LVU98
 304 0076 E16A     		ldr	r1, [r4, #44]
 256:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 {
 305              		.loc 1 256 74 view .LVU99
 306 0078 DB6A     		ldr	r3, [r3, #44]
 307              	.LVL20:
 256:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                 {
 308              		.loc 1 256 20 view .LVU100
 309 007a 9942     		cmp	r1, r3
 310 007c 0ED8     		bhi	.L9
 260:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 311              		.loc 1 260 21 is_stmt 1 view .LVU101
 260:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 312              		.loc 1 260 24 is_stmt 0 view .LVU102
 313 007e B442     		cmp	r4, r6
 314 0080 04D0     		beq	.L11
 315              	.LVL21:
 316              	.L8:
 335:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** #endif
 317              		.loc 1 335 9 is_stmt 1 view .LVU103
 318              	.LBB42:
 319              	.LBI42:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 320              		.loc 2 556 55 view .LVU104
 321              	.LBB43:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 24


 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 322              		.loc 2 562 5 view .LVU105
 323              		.syntax unified
 324              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 325 0082 82F31088 		MSR  PRIMASK,r2
 326              	@ 0 "" 2
 327              	.LVL22:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 328              		.loc 2 562 5 is_stmt 0 view .LVU106
 329              		.thumb
 330              		.syntax unified
 331              	.LBE43:
 332              	.LBE42:
 333              		.loc 1 338 1 view .LVU107
 334 0086 CBE7     		b	.L1
 335              	.LVL23:
 336              	.L6:
 225:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 337              		.loc 1 225 13 is_stmt 1 view .LVU108
 225:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****         }
 338              		.loc 1 225 55 is_stmt 0 view .LVU109
 339 0088 E563     		str	r5, [r4, #60]
 340 008a E6E7     		b	.L7
 341              	.LVL24:
 342              	.L11:
 267:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 343              		.loc 1 267 25 is_stmt 1 view .LVU110
 267:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 344              		.loc 1 267 48 is_stmt 0 view .LVU111
 345 008c 0A4B     		ldr	r3, .L12
 346              	.LVL25:
 267:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 347              		.loc 1 267 48 view .LVU112
 348 008e 1C60     		str	r4, [r3]
 349              	.LVL26:
 270:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 350              		.loc 1 270 25 is_stmt 1 view .LVU113
 270:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 351              		.loc 1 270 28 is_stmt 0 view .LVU114
 352 0090 AF42     		cmp	r7, r5
 353 0092 F6D2     		bcs	.L8
 274:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         }
 354              		.loc 1 274 29 is_stmt 1 view .LVU115
 274:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         }
 355              		.loc 1 274 88 is_stmt 0 view .LVU116
 356 0094 0A4B     		ldr	r3, .L12+8
 357 0096 43F82140 		str	r4, [r3, r1, lsl #2]
 358 009a F2E7     		b	.L8
 359              	.LVL27:
 360              	.L9:
 282:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 361              		.loc 1 282 21 is_stmt 1 view .LVU117
 282:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 362              		.loc 1 282 36 is_stmt 0 view .LVU118
 363 009c E06B     		ldr	r0, [r4, #60]
 282:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                     {
 364              		.loc 1 282 24 view .LVU119
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 25


 365 009e 8142     		cmp	r1, r0
 366 00a0 EFD9     		bls	.L8
 288:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 367              		.loc 1 288 25 is_stmt 1 view .LVU120
 288:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                         {
 368              		.loc 1 288 28 is_stmt 0 view .LVU121
 369 00a2 8342     		cmp	r3, r0
 370 00a4 EDD3     		bcc	.L8
 293:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 371              		.loc 1 293 29 is_stmt 1 view .LVU122
 293:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 372              		.loc 1 293 52 is_stmt 0 view .LVU123
 373 00a6 044B     		ldr	r3, .L12
 374              	.LVL28:
 293:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c **** 
 375              		.loc 1 293 52 view .LVU124
 376 00a8 1C60     		str	r4, [r3]
 377              	.LVL29:
 296:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             {
 378              		.loc 1 296 29 is_stmt 1 view .LVU125
 296:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             {
 379              		.loc 1 296 32 is_stmt 0 view .LVU126
 380 00aa AF42     		cmp	r7, r5
 381 00ac E9D2     		bcs	.L8
 300:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             }
 382              		.loc 1 300 33 is_stmt 1 view .LVU127
 300:./Middlewares/ST/threadx/common/src/tx_mutex_priority_change.c ****                             }
 383              		.loc 1 300 92 is_stmt 0 view .LVU128
 384 00ae 044B     		ldr	r3, .L12+8
 385 00b0 43F82140 		str	r4, [r3, r1, lsl #2]
 386 00b4 E5E7     		b	.L8
 387              	.L13:
 388 00b6 00BF     		.align	2
 389              	.L12:
 390 00b8 00000000 		.word	_tx_thread_execute_ptr
 391 00bc 00000000 		.word	_tx_thread_preempt_disable
 392 00c0 00000000 		.word	_tx_thread_priority_list
 393              		.cfi_endproc
 394              	.LFE8:
 396              		.text
 397              	.Letext0:
 398              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
 399              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_thread.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 tx_mutex_priority_change.c
C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s:20     .text._tx_mutex_priority_change:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s:26     .text._tx_mutex_priority_change:00000000 _tx_mutex_priority_change
C:\Users\Dennis\AppData\Local\Temp\ccFHhThh.s:390    .text._tx_mutex_priority_change:000000b8 $d

UNDEFINED SYMBOLS
_tx_thread_system_suspend
_tx_thread_system_resume
_tx_thread_execute_ptr
_tx_thread_preempt_disable
_tx_thread_priority_list
