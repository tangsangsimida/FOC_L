ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_queue_send.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_queue_send,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_queue_send
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_queue_send:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "./Middlewares/ST/threadx/common/src/tx_queue_send.c"
   1:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**   Queue                                                               */
  19:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  26:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /* Include necessary system files.  */
  27:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  28:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_api.h"
  29:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_trace.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_thread.h"
  31:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_queue.h"
  32:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  33:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  34:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  35:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  36:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  FUNCTION                                               RELEASE        */
  37:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  38:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_queue_send                                      PORTABLE C      */
  39:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                           6.1          */
  40:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  AUTHOR                                                                */
  41:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  42:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  44:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  DESCRIPTION                                                           */
  45:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  46:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    This function places a message into the specified queue.  If there  */
  47:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    is no room in the queue, this function waits according to the       */
  48:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    option specified.                                                   */
  49:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  50:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  INPUT                                                                 */
  51:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  52:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    queue_ptr                         Pointer to queue control block    */
  53:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    source_ptr                        Pointer to message source         */
  54:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    wait_option                       Suspension option                 */
  55:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  56:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  OUTPUT                                                                */
  57:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  58:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    status                            Completion status                 */
  59:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  60:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  CALLS                                                                 */
  61:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  62:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_resume          Resume thread routine             */
  63:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_ni_resume       Non-interruptable resume thread   */
  64:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_suspend         Suspend thread routine            */
  65:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_ni_suspend      Non-interruptable suspend thread  */
  66:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  67:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  CALLED BY                                                             */
  68:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  69:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    Application Code                                                    */
  70:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  71:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  RELEASE HISTORY                                                       */
  72:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  73:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    DATE              NAME                      DESCRIPTION             */
  74:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  75:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  76:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  77:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                            resulting in version 6.1    */
  78:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  79:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  80:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT  _tx_queue_send(TX_QUEUE *queue_ptr, VOID *source_ptr, ULONG wait_option)
  81:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** {
  30              		.loc 1 81 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 81 1 is_stmt 0 view .LVU1
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 3


  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  82:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  83:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_INTERRUPT_SAVE_AREA
  43              		.loc 1 83 1 is_stmt 1 view .LVU2
  84:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  85:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_THREAD       *thread_ptr;
  44              		.loc 1 85 1 view .LVU3
  86:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** ULONG           *source;
  45              		.loc 1 86 1 view .LVU4
  87:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** ULONG           *destination;
  46              		.loc 1 87 1 view .LVU5
  88:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT            size;
  47              		.loc 1 88 1 view .LVU6
  89:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT            suspended_count;
  48              		.loc 1 89 1 view .LVU7
  90:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_THREAD       *next_thread;
  49              		.loc 1 90 1 view .LVU8
  91:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_THREAD       *previous_thread;
  50              		.loc 1 91 1 view .LVU9
  92:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT            status;
  51              		.loc 1 92 1 view .LVU10
  93:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
  94:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** VOID            (*queue_send_notify)(struct TX_QUEUE_STRUCT *notify_queue_ptr);
  95:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
  96:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  97:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  98:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Default the status to TX_SUCCESS.  */
  99:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     status =  TX_SUCCESS;
  52              		.loc 1 99 5 view .LVU11
  53              	.LVL1:
 100:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 101:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Disable interrupts to place message in the queue.  */
 102:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     TX_DISABLE
  54              		.loc 1 102 5 view .LVU12
  55              	.LBB18:
  56              	.LBI18:
  57              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 4


  14:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.10       */
  30:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  60:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  61:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  62:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  63:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  64:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  65:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  66:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  67:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  69:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  70:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 5


  71:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  72:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  73:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  74:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  75:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  77:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  78:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  80:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  81:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  83:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  84:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  85:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  86:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  87:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  88:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  89:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  90:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  91:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  92:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  93:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
  94:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  95:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
  97:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
  98:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
  99:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 100:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 102:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 103:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 104:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 105:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 106:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 108:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 109:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 110:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 111:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 112:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 113:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 114:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 115:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 116:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 117:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 118:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 119:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 120:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 121:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 122:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 123:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 124:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 125:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 126:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 127:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 6


 128:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 129:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 130:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 131:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 132:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 133:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 134:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 135:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 136:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 137:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 138:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 139:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 140:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 142:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 143:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 144:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 145:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 146:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 147:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 148:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 149:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 150:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 151:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 153:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 154:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 155:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 156:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 157:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0x0a800024)
 158:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 159:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 160:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 161:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 162:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 163:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 164:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0xE0001004)
 165:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 166:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 167:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 168:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 169:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 170:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 171:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 172:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 173:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 175:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 176:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 177:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 178:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 179:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 180:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 181:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 182:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 184:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 7


 185:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 186:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 187:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 188:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 189:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 191:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 192:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 194:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 196:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 197:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 198:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 199:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 200:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 201:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 202:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 203:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 204:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 206:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 208:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 209:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 210:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 211:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 212:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 213:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 214:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 215:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 216:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 218:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 220:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 221:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 222:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 223:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 224:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 225:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 226:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 227:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 228:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 229:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 230:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 231:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 232:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 233:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 234:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 235:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 237:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 238:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 239:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 240:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 241:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 8


 242:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 243:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 244:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 245:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 246:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 247:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 248:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 249:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 250:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 253:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 254:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 256:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 257:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 258:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 259:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 260:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 261:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 262:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 265:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 266:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 267:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 268:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 269:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 270:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 271:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 272:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 273:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 274:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 276:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 277:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 278:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 279:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 280:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 281:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 282:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 283:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 284:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 285:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 286:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 288:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 289:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 290:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 291:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 292:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 293:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 294:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 295:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 296:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 297:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 298:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 9


 299:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 300:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 301:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 302:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 303:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 304:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 305:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 307:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 308:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 310:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 311:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 312:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 313:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 314:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 315:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 316:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 317:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 318:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 319:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 320:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 321:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 322:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 325:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 326:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 327:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 328:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 329:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 330:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 331:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 333:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 334:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 335:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 337:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 338:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 339:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 340:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 341:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 342:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 343:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 345:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 346:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 347:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 348:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 349:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 350:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 351:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 352:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 353:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 354:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 355:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 10


 356:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 357:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 358:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 360:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 362:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 363:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 364:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 365:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 366:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 367:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 368:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 369:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 370:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 371:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 372:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 373:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 374:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 375:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 376:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 377:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 378:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 379:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 380:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 381:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((ULONG *) 0xE000EF34);  
 382:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 383:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 384:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 385:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 386:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 387:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 388:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 389:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 390:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 391:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 392:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 393:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 394:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 395:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 396:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 397:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 398:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 399:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 400:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 401:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 402:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 403:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 404:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 405:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 406:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 407:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 408:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 409:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 410:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 411:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 412:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 11


 413:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 414:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 415:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 416:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 417:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 418:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 419:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 420:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 421:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 422:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 423:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 424:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 425:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 426:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 427:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 428:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 429:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 430:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 432:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 433:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 434:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 435:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 436:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 437:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 438:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 439:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 440:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 441:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 442:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 443:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 444:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 445:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 446:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 447:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 448:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 449:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 450:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 452:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 453:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 454:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 455:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 456:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 457:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 458:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 459:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 460:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 461:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 463:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 464:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 465:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 466:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 467:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 468:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 469:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 12


 470:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 471:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 472:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 473:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 475:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 479:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 480:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 482:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 483:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 484:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 485:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 486:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 487:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 488:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 489:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 490:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 491:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 492:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 493:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 494:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 496:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 497:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 498:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 499:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 500:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 502:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 503:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 504:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 505:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 506:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 507:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 509:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 510:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 511:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 512:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 514:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 515:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 516:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 517:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 518:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 519:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 520:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 521:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 522:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 523:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 524:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 526:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 13


 527:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 528:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 529:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 530:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 531:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 532:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 534:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 536:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 537:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 538:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 540:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 542:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 543:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 544:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 545:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 546:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 548:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 549:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 551:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 553:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 554:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 555:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 557:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 558:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 559:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 560:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 561:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 563:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 565:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  58              		.loc 2 566 63 view .LVU13
  59              	.LBB19:
 567:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  60              		.loc 2 568 1 view .LVU14
 569:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  61              		.loc 2 570 5 view .LVU15
  62              	.LBB20:
  63              	.LBI20:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  64              		.loc 2 533 63 view .LVU16
  65              	.LBB21:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  66              		.loc 2 535 1 view .LVU17
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  67              		.loc 2 539 5 view .LVU18
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 14


  68              		.syntax unified
  69              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  70 0004 EFF3108C 		MRS  ip, PRIMASK 
  71              	@ 0 "" 2
  72              	.LVL2:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  73              		.loc 2 541 5 view .LVU19
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  74              		.loc 2 541 5 is_stmt 0 view .LVU20
  75              		.thumb
  76              		.syntax unified
  77              	.LBE21:
  78              	.LBE20:
 571:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 572:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 573:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 574:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  79              		.loc 2 575 5 is_stmt 1 view .LVU21
  80              		.syntax unified
  81              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  82 0008 72B6     		CPSID i
  83              	@ 0 "" 2
 576:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 577:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
  84              		.loc 2 577 5 view .LVU22
  85              	.LVL3:
  86              		.loc 2 577 5 is_stmt 0 view .LVU23
  87              		.thumb
  88              		.syntax unified
  89              	.LBE19:
  90              	.LBE18:
 103:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 104:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_QUEUE_ENABLE_PERFORMANCE_INFO
 105:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 106:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Increment the total messages sent counter.  */
 107:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     _tx_queue_performance_messages_sent_count++;
 108:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 109:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Increment the number of messages sent to this queue.  */
 110:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     queue_ptr -> tx_queue_performance_messages_sent_count++;
 111:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 112:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 113:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 114:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_QUEUE_SEND, queue_ptr, TX_POINTER_TO_ULONG_CONVERT(source_ptr)
 115:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 116:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Log this kernel call.  */
 117:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     TX_EL_QUEUE_SEND_INSERT
 118:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 119:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Pickup the thread suspension count.  */
 120:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     suspended_count =  queue_ptr -> tx_queue_suspended_count;
  91              		.loc 1 120 5 is_stmt 1 view .LVU24
  92              		.loc 1 120 21 is_stmt 0 view .LVU25
  93 000a C06A     		ldr	r0, [r0, #44]
  94              	.LVL4:
 121:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 122:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Determine if there is room in the queue.  */
 123:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     if (queue_ptr -> tx_queue_available_storage != TX_NO_MESSAGES)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 15


  95              		.loc 1 123 5 is_stmt 1 view .LVU26
  96              		.loc 1 123 19 is_stmt 0 view .LVU27
  97 000c 6369     		ldr	r3, [r4, #20]
  98              		.loc 1 123 8 view .LVU28
  99 000e 002B     		cmp	r3, #0
 100 0010 48D0     		beq	.L2
 124:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 125:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 126:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* There is room for the message in the queue.  */
 127:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 128:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Determine if there are suspended on this queue.  */
 129:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         if (suspended_count == TX_NO_SUSPENSIONS)
 101              		.loc 1 129 9 is_stmt 1 view .LVU29
 102              		.loc 1 129 12 is_stmt 0 view .LVU30
 103 0012 E0B9     		cbnz	r0, .L3
 130:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 131:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 132:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* No suspended threads, simply place the message in the queue.  */
 133:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 134:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Reduce the amount of available storage.  */
 135:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_available_storage--;
 104              		.loc 1 135 13 is_stmt 1 view .LVU31
 105              		.loc 1 135 52 is_stmt 0 view .LVU32
 106 0014 013B     		subs	r3, r3, #1
 107 0016 6361     		str	r3, [r4, #20]
 136:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 137:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increase the enqueued count.  */
 138:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_enqueued++;
 108              		.loc 1 138 13 is_stmt 1 view .LVU33
 109              		.loc 1 138 23 is_stmt 0 view .LVU34
 110 0018 2369     		ldr	r3, [r4, #16]
 111              		.loc 1 138 43 view .LVU35
 112 001a 0133     		adds	r3, r3, #1
 113 001c 2361     		str	r3, [r4, #16]
 139:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 140:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup source and destination pointers.  */
 141:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             source =       TX_VOID_TO_ULONG_POINTER_CONVERT(source_ptr);
 114              		.loc 1 141 13 is_stmt 1 view .LVU36
 115              	.LVL5:
 142:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             destination =  queue_ptr -> tx_queue_write;
 116              		.loc 1 142 13 view .LVU37
 143:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             size =         queue_ptr -> tx_queue_message_size;
 117              		.loc 1 143 13 view .LVU38
 118              		.loc 1 143 18 is_stmt 0 view .LVU39
 119 001e A268     		ldr	r2, [r4, #8]
 120              	.LVL6:
 144:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 145:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Copy message. Note that the source and destination pointers are
 146:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                incremented by the macro.  */
 147:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_QUEUE_MESSAGE_COPY(source, destination, size)
 121              		.loc 1 147 13 is_stmt 1 view .LVU40
 122              		.loc 1 147 13 is_stmt 0 view .LVU41
 123 0020 636A     		ldr	r3, [r4, #36]
 124              	.LVL7:
 125              		.loc 1 147 13 view .LVU42
 126 0022 51F8045B 		ldr	r5, [r1], #4
 127              	.LVL8:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 16


 128              		.loc 1 147 13 view .LVU43
 129 0026 43F8045B 		str	r5, [r3], #4
 130              	.LVL9:
 131              		.loc 1 147 13 is_stmt 1 view .LVU44
 132 002a 012A     		cmp	r2, #1
 133 002c 04D8     		bhi	.L4
 134 002e 05E0     		b	.L5
 135              	.LVL10:
 136              	.L6:
 137              		.loc 1 147 13 discriminator 3 view .LVU45
 138              		.loc 1 147 13 is_stmt 0 discriminator 3 view .LVU46
 139 0030 51F8045B 		ldr	r5, [r1], #4
 140              	.LVL11:
 141              		.loc 1 147 13 discriminator 3 view .LVU47
 142 0034 43F8045B 		str	r5, [r3], #4
 143              	.LVL12:
 144              	.L4:
 145              		.loc 1 147 13 is_stmt 1 discriminator 2 view .LVU48
 146              		.loc 1 147 13 is_stmt 0 discriminator 2 view .LVU49
 147 0038 013A     		subs	r2, r2, #1
 148              	.LVL13:
 149              		.loc 1 147 13 discriminator 2 view .LVU50
 150 003a F9D1     		bne	.L6
 151              	.L5:
 148:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 149:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if we are at the end.  */
 150:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (destination == queue_ptr -> tx_queue_end)
 152              		.loc 1 150 13 is_stmt 1 view .LVU51
 153              		.loc 1 150 42 is_stmt 0 view .LVU52
 154 003c E269     		ldr	r2, [r4, #28]
 155              	.LVL14:
 156              		.loc 1 150 16 view .LVU53
 157 003e 9A42     		cmp	r2, r3
 158 0040 03D0     		beq	.L19
 159              	.L7:
 151:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 152:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 153:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Yes, wrap around to the beginning.  */
 154:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 destination =  queue_ptr -> tx_queue_start;
 155:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 156:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 157:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Adjust the write pointer.  */
 158:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_write =  destination;
 160              		.loc 1 158 13 is_stmt 1 view .LVU54
 161              		.loc 1 158 41 is_stmt 0 view .LVU55
 162 0042 6362     		str	r3, [r4, #36]
 159:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 160:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 161:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 162:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the notify callback routine for this queue.  */
 163:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_send_notify =  queue_ptr -> tx_queue_send_notify;
 164:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 165:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 166:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* No thread suspended, just return to caller.  */
 167:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 168:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 169:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 17


 163              		.loc 1 169 13 is_stmt 1 view .LVU56
 164              	.LVL15:
 165              	.LBB22:
 166              	.LBI22:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 167              		.loc 2 556 55 view .LVU57
 168              	.LBB23:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 169              		.loc 2 562 5 view .LVU58
 170              		.syntax unified
 171              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 172 0044 8CF31088 		MSR  PRIMASK,ip
 173              	@ 0 "" 2
 174              	.LVL16:
 175              		.thumb
 176              		.syntax unified
 177              	.L1:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 178              		.loc 2 562 5 is_stmt 0 view .LVU59
 179              	.LBE23:
 180              	.LBE22:
 170:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 171:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 172:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 173:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if a notify callback is required.  */
 174:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (queue_send_notify != TX_NULL)
 175:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 176:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 177:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Call application queue send notification.  */
 178:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 (queue_send_notify)(queue_ptr);
 179:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 180:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 181:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 182:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         else
 183:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 184:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 185:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* There is a thread suspended on an empty queue. Simply
 186:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                copy the message to the suspended thread's destination
 187:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                pointer.  */
 188:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 189:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the head of the suspension list.  */
 190:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr =  queue_ptr -> tx_queue_suspension_list;
 191:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 192:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* See if this is the only suspended thread on the list.  */
 193:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             suspended_count--;
 194:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (suspended_count == TX_NO_SUSPENSIONS)
 195:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 196:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 197:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Yes, the only suspended thread.  */
 198:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 199:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the head pointer.  */
 200:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  TX_NULL;
 201:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 202:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             else
 203:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 204:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 205:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* At least one more thread is on the same expiration list.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 18


 206:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 207:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the list head pointer.  */
 208:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  thread_ptr -> tx_thread_suspended_next;
 209:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 210:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the links of the adjacent threads.  */
 211:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread =                            thread_ptr -> tx_thread_suspended_next;
 212:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  next_thread;
 213:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 214:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the links of the adjacent threads.  */
 215:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               thread_ptr -> tx_thread_suspended_p
 216:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   previous_thread;
 217:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   next_thread;
 218:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 219:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 220:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Decrement the suspension count.  */
 221:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_suspended_count =  suspended_count;
 222:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 223:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Prepare for resumption of the thread.  */
 224:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 225:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Clear cleanup routine to avoid timeout.  */
 226:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
 227:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 228:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup source and destination pointers.  */
 229:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             source =       TX_VOID_TO_ULONG_POINTER_CONVERT(source_ptr);
 230:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             destination =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_additional_susp
 231:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             size =         queue_ptr -> tx_queue_message_size;
 232:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 233:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Copy message. Note that the source and destination pointers are
 234:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                incremented by the macro.  */
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_QUEUE_MESSAGE_COPY(source, destination, size)
 236:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 237:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Put return status into the thread control block.  */
 238:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 239:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 240:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 241:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 242:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the notify callback routine for this queue.  */
 243:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_send_notify =  queue_ptr -> tx_queue_send_notify;
 244:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 245:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 246:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_NOT_INTERRUPTABLE
 247:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 248:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Resume the thread!  */
 249:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_ni_resume(thread_ptr);
 250:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 251:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 252:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 253:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #else
 254:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 255:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Temporarily disable preemption.  */
 256:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_preempt_disable++;
 257:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 258:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 259:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 260:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 261:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Resume thread.  */
 262:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_resume(thread_ptr);
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 19


 263:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 264:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 265:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 266:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 267:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if a notify callback is required.  */
 268:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (queue_send_notify != TX_NULL)
 269:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 270:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 271:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Call application queue send notification.  */
 272:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 (queue_send_notify)(queue_ptr);
 273:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 274:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 275:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 276:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 277:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 278:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* At this point, the queue is full. Determine if suspension is requested.  */
 279:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     else if (wait_option != TX_NO_WAIT)
 280:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 281:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 282:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Determine if the preempt disable flag is non-zero.  */
 283:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         if (_tx_thread_preempt_disable != ((UINT) 0))
 284:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 285:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 286:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 287:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 288:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 289:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Suspension is not allowed if the preempt disable flag is non-zero at this point - re
 290:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             status =  TX_QUEUE_FULL;
 291:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 292:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         else
 293:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 294:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 295:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Yes, prepare for suspension of this thread.  */
 296:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 297:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_QUEUE_ENABLE_PERFORMANCE_INFO
 298:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 299:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the total number of queue full suspensions.  */
 300:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_queue_performance_full_suspension_count++;
 301:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 302:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the number of full suspensions on this queue.  */
 303:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_performance_full_suspension_count++;
 304:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 305:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 306:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup thread pointer.  */
 307:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_THREAD_GET_CURRENT(thread_ptr)
 308:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 309:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup cleanup routine pointer.  */
 310:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_cleanup =  &(_tx_queue_cleanup);
 311:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 312:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup cleanup information, i.e. this queue control
 313:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                block and the source pointer.  */
 314:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_control_block =    (VOID *) queue_ptr;
 315:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) source_ptr;
 316:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_option =           TX_FALSE;
 317:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 318:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_NOT_INTERRUPTABLE
 319:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 20


 320:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the suspension sequence number, which is used to identify
 321:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                this suspension event.  */
 322:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspension_sequence++;
 323:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 324:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 325:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup suspension list.  */
 326:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (suspended_count == TX_NO_SUSPENSIONS)
 327:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 328:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 329:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* No other threads are suspended.  Setup the head pointer and
 330:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                    just setup this threads pointers to itself.  */
 331:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =         thread_ptr;
 332:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 333:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 334:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 335:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             else
 336:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 337:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 338:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* This list is not NULL, add current thread to the end. */
 339:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread =                                   queue_ptr -> tx_queue_suspension_li
 340:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        next_thread;
 341:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               next_thread -> tx_thread_suspended_
 342:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 343:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   thread_ptr;
 344:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   thread_ptr;
 345:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 346:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 347:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the suspended thread count.  */
 348:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_suspended_count =  suspended_count + ((UINT) 1);
 349:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 350:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Set the state to suspended.  */
 351:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_state =    TX_QUEUE_SUSP;
 352:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 353:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 354:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 355:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the notify callback routine for this queue.  */
 356:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_send_notify =  queue_ptr -> tx_queue_send_notify;
 357:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 358:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 359:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_NOT_INTERRUPTABLE
 360:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 361:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Call actual non-interruptable thread suspension routine.  */
 362:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_ni_suspend(thread_ptr, wait_option);
 363:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 364:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 365:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 366:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #else
 367:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 368:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Set the suspending flag.  */
 369:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspending =  TX_TRUE;
 370:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 371:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup the timeout period.  */
 372:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  wait_option;
 373:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 374:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Temporarily disable preemption.  */
 375:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_preempt_disable++;
 376:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 21


 377:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 378:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 379:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 380:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Call actual thread suspension routine.  */
 381:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_suspend(thread_ptr);
 382:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 383:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 384:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 385:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 386:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if a notify callback is required.  */
 387:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (thread_ptr -> tx_thread_suspend_status == TX_SUCCESS)
 388:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 389:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 390:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Determine if there is a notify callback.  */
 391:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 if (queue_send_notify != TX_NULL)
 392:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 {
 393:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 394:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                     /* Call application queue send notification.  */
 395:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                     (queue_send_notify)(queue_ptr);
 396:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 }
 397:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 398:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 399:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 400:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Return the completion status.  */
 401:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             status =  thread_ptr -> tx_thread_suspend_status;
 402:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 403:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 404:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     else
 405:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 406:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 407:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Otherwise, just return a queue full error message to the caller.  */
 408:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 409:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_QUEUE_ENABLE_PERFORMANCE_INFO
 410:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 411:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Increment the number of full non-suspensions on this queue.  */
 412:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         queue_ptr -> tx_queue_performance_full_error_count++;
 413:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 414:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Increment the total number of full non-suspensions.  */
 415:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         _tx_queue_performance_full_error_count++;
 416:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 417:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 418:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Restore interrupts.  */
 419:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         TX_RESTORE
 420:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 421:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Return error completion.  */
 422:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         status =  TX_QUEUE_FULL;
 423:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 424:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 425:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Return completion status.  */
 426:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     return(status);
 427:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** }
 181              		.loc 1 427 1 view .LVU60
 182 0048 38BD     		pop	{r3, r4, r5, pc}
 183              	.LVL17:
 184              	.L19:
 154:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 185              		.loc 1 154 17 is_stmt 1 view .LVU61
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 22


 154:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 186              		.loc 1 154 29 is_stmt 0 view .LVU62
 187 004a A369     		ldr	r3, [r4, #24]
 188              	.LVL18:
 154:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 189              		.loc 1 154 29 view .LVU63
 190 004c F9E7     		b	.L7
 191              	.LVL19:
 192              	.L3:
 190:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 193              		.loc 1 190 13 is_stmt 1 view .LVU64
 190:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 194              		.loc 1 190 24 is_stmt 0 view .LVU65
 195 004e A56A     		ldr	r5, [r4, #40]
 196              	.LVL20:
 193:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (suspended_count == TX_NO_SUSPENSIONS)
 197              		.loc 1 193 13 is_stmt 1 view .LVU66
 194:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 198              		.loc 1 194 13 view .LVU67
 194:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 199              		.loc 1 194 16 is_stmt 0 view .LVU68
 200 0050 0138     		subs	r0, r0, #1
 201              	.LVL21:
 194:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 202              		.loc 1 194 16 view .LVU69
 203 0052 0DD1     		bne	.L9
 200:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 204              		.loc 1 200 17 is_stmt 1 view .LVU70
 200:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 205              		.loc 1 200 55 is_stmt 0 view .LVU71
 206 0054 0023     		movs	r3, #0
 207 0056 A362     		str	r3, [r4, #40]
 208              	.LVL22:
 209              	.L10:
 221:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 210              		.loc 1 221 13 is_stmt 1 view .LVU72
 221:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 211              		.loc 1 221 51 is_stmt 0 view .LVU73
 212 0058 E062     		str	r0, [r4, #44]
 226:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 213              		.loc 1 226 13 is_stmt 1 view .LVU74
 226:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 214              		.loc 1 226 53 is_stmt 0 view .LVU75
 215 005a 0023     		movs	r3, #0
 216 005c AB66     		str	r3, [r5, #104]
 229:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             destination =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_additional_susp
 217              		.loc 1 229 13 is_stmt 1 view .LVU76
 218              	.LVL23:
 230:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             size =         queue_ptr -> tx_queue_message_size;
 219              		.loc 1 230 13 view .LVU77
 231:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 220              		.loc 1 231 13 view .LVU78
 231:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 221              		.loc 1 231 18 is_stmt 0 view .LVU79
 222 005e A268     		ldr	r2, [r4, #8]
 223              	.LVL24:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 23


 224              		.loc 1 235 13 is_stmt 1 view .LVU80
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 225              		.loc 1 235 13 is_stmt 0 view .LVU81
 226 0060 EB6F     		ldr	r3, [r5, #124]
 227              	.LVL25:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 228              		.loc 1 235 13 view .LVU82
 229 0062 51F8040B 		ldr	r0, [r1], #4
 230              	.LVL26:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 231              		.loc 1 235 13 view .LVU83
 232 0066 43F8040B 		str	r0, [r3], #4
 233              	.LVL27:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 234              		.loc 1 235 13 is_stmt 1 view .LVU84
 235 006a 012A     		cmp	r2, #1
 236 006c 0AD8     		bhi	.L11
 237 006e 0BE0     		b	.L12
 238              	.LVL28:
 239              	.L9:
 208:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 240              		.loc 1 208 17 view .LVU85
 208:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 241              		.loc 1 208 69 is_stmt 0 view .LVU86
 242 0070 2B6F     		ldr	r3, [r5, #112]
 208:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 243              		.loc 1 208 55 view .LVU87
 244 0072 A362     		str	r3, [r4, #40]
 211:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  next_thread;
 245              		.loc 1 211 17 is_stmt 1 view .LVU88
 246              	.LVL29:
 212:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 247              		.loc 1 212 17 view .LVU89
 215:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   previous_thread;
 248              		.loc 1 215 17 view .LVU90
 215:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   previous_thread;
 249              		.loc 1 215 33 is_stmt 0 view .LVU91
 250 0074 6A6F     		ldr	r2, [r5, #116]
 251              	.LVL30:
 216:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   next_thread;
 252              		.loc 1 216 17 is_stmt 1 view .LVU92
 216:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   next_thread;
 253              		.loc 1 216 61 is_stmt 0 view .LVU93
 254 0076 5A67     		str	r2, [r3, #116]
 217:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 255              		.loc 1 217 17 is_stmt 1 view .LVU94
 217:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 256              		.loc 1 217 61 is_stmt 0 view .LVU95
 257 0078 1367     		str	r3, [r2, #112]
 258 007a EDE7     		b	.L10
 259              	.LVL31:
 260              	.L13:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 261              		.loc 1 235 13 is_stmt 1 discriminator 3 view .LVU96
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 262              		.loc 1 235 13 is_stmt 0 discriminator 3 view .LVU97
 263 007c 51F8044B 		ldr	r4, [r1], #4
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 24


 264              	.LVL32:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 265              		.loc 1 235 13 discriminator 3 view .LVU98
 266 0080 43F8044B 		str	r4, [r3], #4
 267              	.LVL33:
 268              	.L11:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 269              		.loc 1 235 13 is_stmt 1 discriminator 2 view .LVU99
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 270              		.loc 1 235 13 is_stmt 0 discriminator 2 view .LVU100
 271 0084 013A     		subs	r2, r2, #1
 272              	.LVL34:
 235:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 273              		.loc 1 235 13 discriminator 2 view .LVU101
 274 0086 F9D1     		bne	.L13
 275              	.L12:
 238:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 276              		.loc 1 238 13 is_stmt 1 view .LVU102
 238:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 277              		.loc 1 238 52 is_stmt 0 view .LVU103
 278 0088 0024     		movs	r4, #0
 279 008a C5F88440 		str	r4, [r5, #132]
 256:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 280              		.loc 1 256 13 is_stmt 1 view .LVU104
 256:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 281              		.loc 1 256 39 is_stmt 0 view .LVU105
 282 008e 224A     		ldr	r2, .L21
 283              	.LVL35:
 256:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 284              		.loc 1 256 39 view .LVU106
 285 0090 1368     		ldr	r3, [r2]
 286              	.LVL36:
 256:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 287              		.loc 1 256 39 view .LVU107
 288 0092 0133     		adds	r3, r3, #1
 289 0094 1360     		str	r3, [r2]
 259:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 290              		.loc 1 259 13 is_stmt 1 view .LVU108
 291              	.LVL37:
 292              	.LBB24:
 293              	.LBI24:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 294              		.loc 2 556 55 view .LVU109
 295              	.LBB25:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 296              		.loc 2 562 5 view .LVU110
 297              		.syntax unified
 298              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 299 0096 8CF31088 		MSR  PRIMASK,ip
 300              	@ 0 "" 2
 301              	.LVL38:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 302              		.loc 2 562 5 is_stmt 0 view .LVU111
 303              		.thumb
 304              		.syntax unified
 305              	.LBE25:
 306              	.LBE24:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 25


 262:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 307              		.loc 1 262 13 is_stmt 1 view .LVU112
 308 009a 2846     		mov	r0, r5
 309 009c FFF7FEFF 		bl	_tx_thread_system_resume
 310              	.LVL39:
  99:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 311              		.loc 1 99 12 is_stmt 0 view .LVU113
 312 00a0 2046     		mov	r0, r4
 313 00a2 D1E7     		b	.L1
 314              	.LVL40:
 315              	.L2:
 279:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 316              		.loc 1 279 10 is_stmt 1 view .LVU114
 279:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 317              		.loc 1 279 13 is_stmt 0 view .LVU115
 318 00a4 002A     		cmp	r2, #0
 319 00a6 32D0     		beq	.L14
 283:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 320              		.loc 1 283 9 is_stmt 1 view .LVU116
 283:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 321              		.loc 1 283 40 is_stmt 0 view .LVU117
 322 00a8 1B4B     		ldr	r3, .L21
 323 00aa 1B68     		ldr	r3, [r3]
 283:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 324              		.loc 1 283 12 view .LVU118
 325 00ac 23BB     		cbnz	r3, .L20
 307:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 326              		.loc 1 307 13 is_stmt 1 view .LVU119
 327 00ae 1B4B     		ldr	r3, .L21+4
 328 00b0 1D68     		ldr	r5, [r3]
 329              	.LVL41:
 310:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 330              		.loc 1 310 13 view .LVU120
 310:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 331              		.loc 1 310 53 is_stmt 0 view .LVU121
 332 00b2 1B4B     		ldr	r3, .L21+8
 333 00b4 AB66     		str	r3, [r5, #104]
 314:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) source_ptr;
 334              		.loc 1 314 13 is_stmt 1 view .LVU122
 314:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) source_ptr;
 335              		.loc 1 314 59 is_stmt 0 view .LVU123
 336 00b6 EC66     		str	r4, [r5, #108]
 315:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_option =           TX_FALSE;
 337              		.loc 1 315 13 is_stmt 1 view .LVU124
 315:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_option =           TX_FALSE;
 338              		.loc 1 315 61 is_stmt 0 view .LVU125
 339 00b8 E967     		str	r1, [r5, #124]
 316:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 340              		.loc 1 316 13 is_stmt 1 view .LVU126
 316:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 341              		.loc 1 316 52 is_stmt 0 view .LVU127
 342 00ba 0023     		movs	r3, #0
 343 00bc C5F88030 		str	r3, [r5, #128]
 322:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 344              		.loc 1 322 13 is_stmt 1 view .LVU128
 322:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 345              		.loc 1 322 24 is_stmt 0 view .LVU129
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 26


 346 00c0 D5F8AC30 		ldr	r3, [r5, #172]
 322:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 347              		.loc 1 322 56 view .LVU130
 348 00c4 0133     		adds	r3, r3, #1
 349 00c6 C5F8AC30 		str	r3, [r5, #172]
 326:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 350              		.loc 1 326 13 is_stmt 1 view .LVU131
 326:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 351              		.loc 1 326 16 is_stmt 0 view .LVU132
 352 00ca C8B9     		cbnz	r0, .L16
 331:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 353              		.loc 1 331 17 is_stmt 1 view .LVU133
 331:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 354              		.loc 1 331 55 is_stmt 0 view .LVU134
 355 00cc A562     		str	r5, [r4, #40]
 332:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 356              		.loc 1 332 17 is_stmt 1 view .LVU135
 332:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 357              		.loc 1 332 56 is_stmt 0 view .LVU136
 358 00ce 2D67     		str	r5, [r5, #112]
 333:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 359              		.loc 1 333 17 is_stmt 1 view .LVU137
 333:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 360              		.loc 1 333 60 is_stmt 0 view .LVU138
 361 00d0 6D67     		str	r5, [r5, #116]
 362              	.LVL42:
 363              	.L17:
 348:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 364              		.loc 1 348 13 is_stmt 1 view .LVU139
 348:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 365              		.loc 1 348 70 is_stmt 0 view .LVU140
 366 00d2 0130     		adds	r0, r0, #1
 367              	.LVL43:
 348:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 368              		.loc 1 348 51 view .LVU141
 369 00d4 E062     		str	r0, [r4, #44]
 351:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 370              		.loc 1 351 13 is_stmt 1 view .LVU142
 351:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 371              		.loc 1 351 43 is_stmt 0 view .LVU143
 372 00d6 0523     		movs	r3, #5
 373 00d8 2B63     		str	r3, [r5, #48]
 369:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 374              		.loc 1 369 13 is_stmt 1 view .LVU144
 369:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 375              		.loc 1 369 48 is_stmt 0 view .LVU145
 376 00da 0123     		movs	r3, #1
 377 00dc AB63     		str	r3, [r5, #56]
 372:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 378              		.loc 1 372 13 is_stmt 1 view .LVU146
 372:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 379              		.loc 1 372 77 is_stmt 0 view .LVU147
 380 00de EA64     		str	r2, [r5, #76]
 375:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 381              		.loc 1 375 13 is_stmt 1 view .LVU148
 375:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 382              		.loc 1 375 39 is_stmt 0 view .LVU149
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 27


 383 00e0 0D4A     		ldr	r2, .L21
 384              	.LVL44:
 375:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 385              		.loc 1 375 39 view .LVU150
 386 00e2 1368     		ldr	r3, [r2]
 387 00e4 0133     		adds	r3, r3, #1
 388 00e6 1360     		str	r3, [r2]
 378:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 389              		.loc 1 378 13 is_stmt 1 view .LVU151
 390              	.LVL45:
 391              	.LBB26:
 392              	.LBI26:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 393              		.loc 2 556 55 view .LVU152
 394              	.LBB27:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 395              		.loc 2 562 5 view .LVU153
 396              		.syntax unified
 397              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 398 00e8 8CF31088 		MSR  PRIMASK,ip
 399              	@ 0 "" 2
 400              	.LVL46:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 401              		.loc 2 562 5 is_stmt 0 view .LVU154
 402              		.thumb
 403              		.syntax unified
 404              	.LBE27:
 405              	.LBE26:
 381:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 406              		.loc 1 381 13 is_stmt 1 view .LVU155
 407 00ec 2846     		mov	r0, r5
 408              	.LVL47:
 381:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 409              		.loc 1 381 13 is_stmt 0 view .LVU156
 410 00ee FFF7FEFF 		bl	_tx_thread_system_suspend
 411              	.LVL48:
 401:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 412              		.loc 1 401 13 is_stmt 1 view .LVU157
 401:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 413              		.loc 1 401 20 is_stmt 0 view .LVU158
 414 00f2 D5F88400 		ldr	r0, [r5, #132]
 415              	.LVL49:
 401:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 416              		.loc 1 401 20 view .LVU159
 417 00f6 A7E7     		b	.L1
 418              	.LVL50:
 419              	.L20:
 287:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 420              		.loc 1 287 13 is_stmt 1 view .LVU160
 421              	.LBB28:
 422              	.LBI28:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 423              		.loc 2 556 55 view .LVU161
 424              	.LBB29:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 425              		.loc 2 562 5 view .LVU162
 426              		.syntax unified
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 28


 427              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 428 00f8 8CF31088 		MSR  PRIMASK,ip
 429              	@ 0 "" 2
 430              	.LVL51:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431              		.loc 2 562 5 is_stmt 0 view .LVU163
 432              		.thumb
 433              		.syntax unified
 434              	.LBE29:
 435              	.LBE28:
 290:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 436              		.loc 1 290 13 is_stmt 1 view .LVU164
 290:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 437              		.loc 1 290 20 is_stmt 0 view .LVU165
 438 00fc 0B20     		movs	r0, #11
 439              	.LVL52:
 290:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 440              		.loc 1 290 20 view .LVU166
 441 00fe A3E7     		b	.L1
 442              	.LVL53:
 443              	.L16:
 339:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        next_thread;
 444              		.loc 1 339 17 is_stmt 1 view .LVU167
 339:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        next_thread;
 445              		.loc 1 339 29 is_stmt 0 view .LVU168
 446 0100 A36A     		ldr	r3, [r4, #40]
 447              	.LVL54:
 340:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               next_thread -> tx_thread_suspended_
 448              		.loc 1 340 17 is_stmt 1 view .LVU169
 340:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               next_thread -> tx_thread_suspended_
 449              		.loc 1 340 56 is_stmt 0 view .LVU170
 450 0102 2B67     		str	r3, [r5, #112]
 341:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 451              		.loc 1 341 17 is_stmt 1 view .LVU171
 341:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 452              		.loc 1 341 33 is_stmt 0 view .LVU172
 453 0104 596F     		ldr	r1, [r3, #116]
 454              	.LVL55:
 342:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   thread_ptr;
 455              		.loc 1 342 17 is_stmt 1 view .LVU173
 342:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   thread_ptr;
 456              		.loc 1 342 60 is_stmt 0 view .LVU174
 457 0106 6967     		str	r1, [r5, #116]
 343:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   thread_ptr;
 458              		.loc 1 343 17 is_stmt 1 view .LVU175
 343:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   thread_ptr;
 459              		.loc 1 343 61 is_stmt 0 view .LVU176
 460 0108 0D67     		str	r5, [r1, #112]
 461              	.LVL56:
 344:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 462              		.loc 1 344 17 is_stmt 1 view .LVU177
 344:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 463              		.loc 1 344 61 is_stmt 0 view .LVU178
 464 010a 5D67     		str	r5, [r3, #116]
 465 010c E1E7     		b	.L17
 466              	.LVL57:
 467              	.L14:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 29


 419:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 468              		.loc 1 419 9 is_stmt 1 view .LVU179
 469              	.LBB30:
 470              	.LBI30:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 471              		.loc 2 556 55 view .LVU180
 472              	.LBB31:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 473              		.loc 2 562 5 view .LVU181
 474              		.syntax unified
 475              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 476 010e 8CF31088 		MSR  PRIMASK,ip
 477              	@ 0 "" 2
 478              	.LVL58:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 479              		.loc 2 562 5 is_stmt 0 view .LVU182
 480              		.thumb
 481              		.syntax unified
 482              	.LBE31:
 483              	.LBE30:
 422:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 484              		.loc 1 422 9 is_stmt 1 view .LVU183
 422:./Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 485              		.loc 1 422 16 is_stmt 0 view .LVU184
 486 0112 0B20     		movs	r0, #11
 487              	.LVL59:
 426:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** }
 488              		.loc 1 426 5 is_stmt 1 view .LVU185
 426:./Middlewares/ST/threadx/common/src/tx_queue_send.c **** }
 489              		.loc 1 426 11 is_stmt 0 view .LVU186
 490 0114 98E7     		b	.L1
 491              	.L22:
 492 0116 00BF     		.align	2
 493              	.L21:
 494 0118 00000000 		.word	_tx_thread_preempt_disable
 495 011c 00000000 		.word	_tx_thread_current_ptr
 496 0120 00000000 		.word	_tx_queue_cleanup
 497              		.cfi_endproc
 498              	.LFE8:
 500              		.text
 501              	.Letext0:
 502              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
 503              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_thread.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 tx_queue_send.c
C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s:20     .text._tx_queue_send:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s:26     .text._tx_queue_send:00000000 _tx_queue_send
C:\Users\Dennis\AppData\Local\Temp\ccRC2WV1.s:494    .text._tx_queue_send:00000118 $d

UNDEFINED SYMBOLS
_tx_thread_system_resume
_tx_thread_system_suspend
_tx_thread_preempt_disable
_tx_thread_current_ptr
_tx_queue_cleanup
