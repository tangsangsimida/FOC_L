ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_thread_create.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_thread_create,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_thread_create
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_thread_create:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "./Middlewares/ST/threadx/common/src/tx_thread_create.c"
   1:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**   Thread                                                              */
  19:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  26:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /* Include necessary system files.  */
  27:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  28:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #include "tx_api.h"
  29:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #include "tx_trace.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #include "tx_thread.h"
  31:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #include "tx_initialize.h"
  32:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  33:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  34:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  35:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  36:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  FUNCTION                                               RELEASE        */
  37:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  38:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    _tx_thread_create                                   PORTABLE C      */
  39:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                           6.1.8        */
  40:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  AUTHOR                                                                */
  41:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  42:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  44:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  DESCRIPTION                                                           */
  45:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  46:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    This function creates a thread and places it on the list of created */
  47:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    threads.                                                            */
  48:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  49:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  INPUT                                                                 */
  50:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  51:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    thread_ptr                            Thread control block pointer  */
  52:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    name                                  Pointer to thread name string */
  53:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    entry_function                        Entry function of the thread  */
  54:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    entry_input                           32-bit input value to thread  */
  55:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    stack_start                           Pointer to start of stack     */
  56:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    stack_size                            Stack size in bytes           */
  57:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    priority                              Priority of thread            */
  58:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                            (default 0-31)              */
  59:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    preempt_threshold                     Preemption threshold          */
  60:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    time_slice                            Thread time-slice value       */
  61:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    auto_start                            Automatic start selection     */
  62:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  63:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  OUTPUT                                                                */
  64:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  65:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    return status                         Thread create return status   */
  66:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  67:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  CALLS                                                                 */
  68:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  69:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    _tx_thread_stack_build                Build initial thread stack    */
  70:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    _tx_thread_system_resume              Resume automatic start thread */
  71:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    _tx_thread_system_ni_resume           Noninterruptable resume thread*/
  72:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  73:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  CALLED BY                                                             */
  74:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  75:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    Application Code                                                    */
  76:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    _tx_timer_initialize                  Create system timer thread    */
  77:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  78:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  RELEASE HISTORY                                                       */
  79:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  80:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*    DATE              NAME                      DESCRIPTION             */
  81:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  82:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  05-19-2020      William E. Lamie        Initial Version 6.0           */
  83:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  09-30-2020      William E. Lamie        Modified comment(s), and      */
  84:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                            changed stack calculations  */
  85:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                            to use ALIGN_TYPE integers, */
  86:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                            resulting in version 6.1    */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 3


  87:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  06-02-2021      William E. Lamie        Modified comment(s), and      */
  88:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                            supported TX_MISRA_ENABLE,  */
  89:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*  08-02-2021      Scott Larson            Removed unneeded cast,        */
  90:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                            resulting in version 6.1.8  */
  91:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /*                                                                        */
  92:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** /**************************************************************************/
  93:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** UINT  _tx_thread_create(TX_THREAD *thread_ptr, CHAR *name_ptr, VOID (*entry_function)(ULONG id), UL
  94:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                             VOID *stack_start, ULONG stack_size, UINT priority, UINT preempt_thresh
  95:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                             ULONG time_slice, UINT auto_start)
  96:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** {
  30              		.loc 1 96 1 view -0
  31              		.cfi_startproc
  32              		@ args = 24, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 96 1 is_stmt 0 view .LVU1
  35 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 40
  38              		.cfi_offset 3, -40
  39              		.cfi_offset 4, -36
  40              		.cfi_offset 5, -32
  41              		.cfi_offset 6, -28
  42              		.cfi_offset 7, -24
  43              		.cfi_offset 8, -20
  44              		.cfi_offset 9, -16
  45              		.cfi_offset 10, -12
  46              		.cfi_offset 11, -8
  47              		.cfi_offset 14, -4
  48 0004 0446     		mov	r4, r0
  49 0006 8A46     		mov	r10, r1
  50 0008 9146     		mov	r9, r2
  51 000a 9846     		mov	r8, r3
  52 000c 0A9D     		ldr	r5, [sp, #40]
  53 000e 0B9E     		ldr	r6, [sp, #44]
  54 0010 0C9F     		ldr	r7, [sp, #48]
  55 0012 DDF838B0 		ldr	fp, [sp, #56]
  97:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
  98:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** TX_INTERRUPT_SAVE_AREA
  56              		.loc 1 98 1 is_stmt 1 view .LVU2
  99:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 100:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** TX_THREAD               *next_thread;
  57              		.loc 1 100 1 view .LVU3
 101:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** TX_THREAD               *previous_thread;
  58              		.loc 1 101 1 view .LVU4
 102:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** TX_THREAD               *saved_thread_ptr;
  59              		.loc 1 102 1 view .LVU5
 103:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** UINT                    saved_threshold =  ((UINT) 0);
  60              		.loc 1 103 1 view .LVU6
  61              	.LVL1:
 104:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** UCHAR                   *temp_ptr;
  62              		.loc 1 104 1 view .LVU7
 105:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 106:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_ENABLE_STACK_CHECKING
 107:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** ALIGN_TYPE              new_stack_start;
 108:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** ALIGN_TYPE              updated_stack_start;
 109:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 110:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 4


 111:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifndef TX_DISABLE_STACK_FILLING
 112:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 113:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Set the thread stack to a pattern prior to creating the initial
 114:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        stack frame.  This pattern is used by the stack checking routines
 115:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        to see how much has been used.  */
 116:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_MEMSET(stack_start, ((UCHAR) TX_STACK_FILL), stack_size);
  63              		.loc 1 116 5 view .LVU8
  64 0016 3246     		mov	r2, r6
  65              	.LVL2:
  66              		.loc 1 116 5 is_stmt 0 view .LVU9
  67 0018 EF21     		movs	r1, #239
  68              	.LVL3:
  69              		.loc 1 116 5 view .LVU10
  70 001a 2846     		mov	r0, r5
  71              	.LVL4:
  72              		.loc 1 116 5 view .LVU11
  73 001c FFF7FEFF 		bl	memset
  74              	.LVL5:
 117:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 118:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 119:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_ENABLE_STACK_CHECKING
 120:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 121:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Ensure that there are two ULONG of 0xEF patterns at the top and
 122:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        bottom of the thread's stack. This will be used to check for stack
 123:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        overflow conditions during run-time.  */
 124:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     stack_size =  ((stack_size/(sizeof(ULONG))) * (sizeof(ULONG))) - (sizeof(ULONG));
 125:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 126:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Ensure the starting stack address is evenly aligned.  */
 127:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_MISRA_ENABLE
 128:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     new_stack_start = TX_POINTER_TO_ULONG_CONVERT(stack_start);
 129:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #else
 130:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     new_stack_start =  TX_POINTER_TO_ALIGN_TYPE_CONVERT(stack_start);
 131:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif /* TX_MISRA_ENABLE */
 132:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     updated_stack_start =  (((new_stack_start) + ((sizeof(ULONG)) - ((ULONG) 1)) ) & (~((sizeof(ULO
 133:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 134:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Determine if the starting stack address is different.  */
 135:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     if (new_stack_start != updated_stack_start)
 136:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 137:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 138:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Yes, subtract another ULONG from the size to avoid going past the stack area.  */
 139:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         stack_size =  stack_size - (sizeof(ULONG));
 140:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 141:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 142:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Update the starting stack pointer.  */
 143:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_MISRA_ENABLE
 144:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     stack_start = TX_ULONG_TO_POINTER_CONVERT(updated_stack_start);
 145:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #else
 146:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     stack_start =  TX_ALIGN_TYPE_TO_POINTER_CONVERT(updated_stack_start);
 147:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif /* TX_MISRA_ENABLE */
 148:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 149:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 150:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Prepare the thread control block prior to placing it on the created
 151:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        list.  */
 152:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 153:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Initialize thread control block to all zeros.  */
 154:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_MEMSET(thread_ptr, 0, (sizeof(TX_THREAD)));
  75              		.loc 1 154 5 is_stmt 1 view .LVU12
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 5


  76 0020 B022     		movs	r2, #176
  77 0022 0021     		movs	r1, #0
  78 0024 2046     		mov	r0, r4
  79 0026 FFF7FEFF 		bl	memset
  80              	.LVL6:
 155:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 156:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Place the supplied parameters into the thread's control block.  */
 157:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_name =              name_ptr;
  81              		.loc 1 157 5 view .LVU13
  82              		.loc 1 157 34 is_stmt 0 view .LVU14
  83 002a C4F828A0 		str	r10, [r4, #40]
 158:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_entry =             entry_function;
  84              		.loc 1 158 5 is_stmt 1 view .LVU15
  85              		.loc 1 158 35 is_stmt 0 view .LVU16
  86 002e C4F84490 		str	r9, [r4, #68]
 159:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_entry_parameter =   entry_input;
  87              		.loc 1 159 5 is_stmt 1 view .LVU17
  88              		.loc 1 159 45 is_stmt 0 view .LVU18
  89 0032 C4F84880 		str	r8, [r4, #72]
 160:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_stack_start =       stack_start;
  90              		.loc 1 160 5 is_stmt 1 view .LVU19
  91              		.loc 1 160 41 is_stmt 0 view .LVU20
  92 0036 E560     		str	r5, [r4, #12]
 161:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_stack_size =        stack_size;
  93              		.loc 1 161 5 is_stmt 1 view .LVU21
  94              		.loc 1 161 40 is_stmt 0 view .LVU22
  95 0038 6661     		str	r6, [r4, #20]
 162:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_priority =          priority;
  96              		.loc 1 162 5 is_stmt 1 view .LVU23
  97              		.loc 1 162 38 is_stmt 0 view .LVU24
  98 003a E762     		str	r7, [r4, #44]
 163:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_user_priority =     priority;
  99              		.loc 1 163 5 is_stmt 1 view .LVU25
 100              		.loc 1 163 43 is_stmt 0 view .LVU26
 101 003c C4F89470 		str	r7, [r4, #148]
 164:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_time_slice =        time_slice;
 102              		.loc 1 164 5 is_stmt 1 view .LVU27
 103              		.loc 1 164 40 is_stmt 0 view .LVU28
 104 0040 C4F818B0 		str	fp, [r4, #24]
 165:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_new_time_slice =    time_slice;
 105              		.loc 1 165 5 is_stmt 1 view .LVU29
 106              		.loc 1 165 44 is_stmt 0 view .LVU30
 107 0044 C4F81CB0 		str	fp, [r4, #28]
 166:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_inherit_priority =  ((UINT) TX_MAX_PRIORITIES);
 108              		.loc 1 166 5 is_stmt 1 view .LVU31
 109              		.loc 1 166 46 is_stmt 0 view .LVU32
 110 0048 2023     		movs	r3, #32
 111 004a C4F89C30 		str	r3, [r4, #156]
 167:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 168:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Calculate the end of the thread's stack area.  */
 169:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     temp_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(stack_start);
 112              		.loc 1 169 5 is_stmt 1 view .LVU33
 113              	.LVL7:
 170:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     temp_ptr =  (TX_UCHAR_POINTER_ADD(temp_ptr, (stack_size - ((ULONG) 1))));
 114              		.loc 1 170 5 view .LVU34
 115              		.loc 1 170 18 is_stmt 0 view .LVU35
 116 004e 013E     		subs	r6, r6, #1
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 6


 117              		.loc 1 170 14 view .LVU36
 118 0050 3544     		add	r5, r5, r6
 119              	.LVL8:
 171:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_stack_end =         TX_UCHAR_TO_VOID_POINTER_CONVERT(temp_ptr);
 120              		.loc 1 171 5 is_stmt 1 view .LVU37
 121              		.loc 1 171 39 is_stmt 0 view .LVU38
 122 0052 2561     		str	r5, [r4, #16]
 172:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 173:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifndef TX_DISABLE_PREEMPTION_THRESHOLD
 174:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 175:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Preemption-threshold is enabled, setup accordingly.  */
 176:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_preempt_threshold =       preempt_threshold;
 177:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_user_preempt_threshold =  preempt_threshold;
 178:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #else
 179:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 180:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Preemption-threshold is disabled, determine if preemption-threshold was required.  */
 181:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     if (priority != preempt_threshold)
 123              		.loc 1 181 5 is_stmt 1 view .LVU39
 124              		.loc 1 181 8 is_stmt 0 view .LVU40
 125 0054 0D9B     		ldr	r3, [sp, #52]
 126 0056 9F42     		cmp	r7, r3
 127 0058 2FD0     		beq	.L11
 128              	.L2:
 182:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 183:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 184:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Preemption-threshold specified. Since specific preemption-threshold is not supported,
 185:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****            disable all preemption.  */
 186:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_preempt_threshold =       ((UINT) 0);
 187:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_user_preempt_threshold =  ((UINT) 0);
 188:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 189:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     else
 190:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 191:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 192:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Preemption-threshold is not specified, just setup with the priority.  */
 193:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_preempt_threshold =       priority;
 194:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_user_preempt_threshold =  priority;
 195:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 196:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 197:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 198:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Now fill in the values that are required for thread initialization.  */
 199:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_state =  TX_SUSPENDED;
 129              		.loc 1 199 5 is_stmt 1 view .LVU41
 130              		.loc 1 199 35 is_stmt 0 view .LVU42
 131 005a 0323     		movs	r3, #3
 132 005c 2363     		str	r3, [r4, #48]
 200:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 201:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Setup the necessary fields in the thread timer block.  */
 202:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_THREAD_CREATE_TIMEOUT_SETUP(thread_ptr)
 133              		.loc 1 202 5 is_stmt 1 view .LVU43
 134 005e 2D4B     		ldr	r3, .L12
 135 0060 6365     		str	r3, [r4, #84]
 136              		.loc 1 202 5 view .LVU44
 137 0062 A465     		str	r4, [r4, #88]
 203:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 204:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Perform any additional thread setup activities for tool or user purpose.  */
 205:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_THREAD_CREATE_INTERNAL_EXTENSION(thread_ptr)
 206:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 7


 207:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Call the target specific stack frame building routine to build the
 208:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        thread's initial stack and to setup the actual stack pointer in the
 209:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        control block.  */
 210:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     _tx_thread_stack_build(thread_ptr, _tx_thread_shell_entry);
 138              		.loc 1 210 5 view .LVU45
 139 0064 2C49     		ldr	r1, .L12+4
 140 0066 2046     		mov	r0, r4
 141 0068 FFF7FEFF 		bl	_tx_thread_stack_build
 142              	.LVL9:
 211:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 212:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_ENABLE_STACK_CHECKING
 213:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 214:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Setup the highest usage stack pointer.  */
 215:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_stack_highest_ptr =  thread_ptr -> tx_thread_stack_ptr;
 216:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 217:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 218:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Prepare to make this thread a member of the created thread list.  */
 219:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_DISABLE
 143              		.loc 1 219 5 view .LVU46
 144              	.LBB20:
 145              	.LBI20:
 146              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.10       */
  30:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 8


  36:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  60:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  61:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  62:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  63:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  64:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  65:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  66:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  67:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  69:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  70:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  71:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  72:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  73:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  74:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  75:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  77:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  78:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  80:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  81:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  83:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  84:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  85:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  86:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  87:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  88:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  89:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  90:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  91:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  92:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 9


  93:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
  94:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  95:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
  97:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
  98:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
  99:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 100:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 102:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 103:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 104:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 105:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 106:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 108:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 109:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 110:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 111:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 112:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 113:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 114:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 115:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 116:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 117:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 118:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 119:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 120:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 121:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 122:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 123:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 124:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 125:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 126:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 127:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 128:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 129:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 130:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 131:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 132:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 133:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 134:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 135:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 136:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 137:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 138:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 139:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 140:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 142:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 143:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 144:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 145:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 146:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 147:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 148:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 149:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 10


 150:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 151:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 153:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 154:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 155:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 156:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 157:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0x0a800024)
 158:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 159:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 160:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 161:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 162:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 163:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 164:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0xE0001004)
 165:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 166:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 167:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 168:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 169:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 170:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 171:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 172:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 173:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 175:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 176:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 177:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 178:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 179:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 180:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 181:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 182:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 184:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 185:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 186:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 187:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 188:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 189:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 191:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 192:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 194:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 196:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 197:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 198:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 199:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 200:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 201:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 202:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 203:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 204:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 206:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 11


 207:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 208:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 209:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 210:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 211:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 212:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 213:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 214:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 215:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 216:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 218:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 220:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 221:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 222:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 223:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 224:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 225:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 226:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 227:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 228:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 229:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 230:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 231:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 232:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 233:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 234:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 235:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 237:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 238:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 239:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 240:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 241:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 242:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 243:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 244:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 245:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 246:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 247:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 248:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 249:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 250:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 253:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 254:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 256:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 257:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 258:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 259:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 260:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 261:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 262:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 12


 264:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 265:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 266:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 267:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 268:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 269:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 270:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 271:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 272:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 273:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 274:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 276:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 277:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 278:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 279:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 280:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 281:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 282:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 283:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 284:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 285:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 286:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 288:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 289:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 290:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 291:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 292:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 293:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 294:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 295:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 296:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 297:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 298:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 300:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 301:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 302:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 303:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 304:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 305:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 307:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 308:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 310:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 311:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 312:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 313:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 314:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 315:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 316:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 317:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 318:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 319:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 320:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 13


 321:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 322:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 325:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 326:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 327:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 328:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 329:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 330:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 331:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 333:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 334:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 335:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 337:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 338:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 339:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 340:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 341:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 342:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 343:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 345:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 346:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 347:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 348:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 349:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 350:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 351:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 352:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 353:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 354:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 355:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 356:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 357:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 358:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 360:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 362:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 363:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 364:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 365:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 366:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 367:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 368:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 369:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 370:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 371:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 372:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 373:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 374:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 375:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 376:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 377:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 14


 378:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 379:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 380:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 381:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((ULONG *) 0xE000EF34);  
 382:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 383:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 384:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 385:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 386:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 387:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 388:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 389:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 390:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 391:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 392:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 393:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 394:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 395:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 396:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 397:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 398:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 399:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 400:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 401:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 402:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 403:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 404:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 405:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 406:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 407:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 408:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 409:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 410:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 411:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 412:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 413:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 414:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 415:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 416:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 417:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 418:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 419:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 420:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 421:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 422:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 423:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 424:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 425:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 426:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 427:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 428:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 429:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 430:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 432:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 433:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 434:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 15


 435:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 436:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 437:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 438:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 439:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 440:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 441:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 442:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 443:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 444:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 445:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 446:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 447:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 448:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 449:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 450:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 452:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 453:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 454:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 455:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 456:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 457:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 458:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 459:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 460:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 461:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 463:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 464:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 465:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 466:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 467:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 468:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 469:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 470:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 471:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 472:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 473:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 475:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 479:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 480:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 482:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 483:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 484:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 485:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 486:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 487:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 488:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 489:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 490:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 491:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 16


 492:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 493:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 494:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 496:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 497:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 498:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 499:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 500:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 502:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 503:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 504:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 505:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 506:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 507:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 509:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 510:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 511:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 512:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 514:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 515:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 516:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 517:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 518:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 519:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 520:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 521:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 522:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 523:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 524:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 526:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 528:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 529:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 530:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 531:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 532:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 534:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 536:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 537:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 538:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 540:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 542:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 543:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 544:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 545:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 546:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 548:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 17


 549:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 551:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 553:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 554:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 555:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 557:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 558:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 559:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 560:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 561:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 563:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 565:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
 147              		.loc 2 566 63 view .LVU47
 148              	.LBB21:
 567:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
 149              		.loc 2 568 1 view .LVU48
 569:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
 150              		.loc 2 570 5 view .LVU49
 151              	.LBB22:
 152              	.LBI22:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 153              		.loc 2 533 63 view .LVU50
 154              	.LBB23:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 155              		.loc 2 535 1 view .LVU51
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 156              		.loc 2 539 5 view .LVU52
 157              		.syntax unified
 158              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 159 006c EFF31081 		MRS  r1, PRIMASK 
 160              	@ 0 "" 2
 161              	.LVL10:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 162              		.loc 2 541 5 view .LVU53
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 163              		.loc 2 541 5 is_stmt 0 view .LVU54
 164              		.thumb
 165              		.syntax unified
 166              	.LBE23:
 167              	.LBE22:
 571:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 572:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 573:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 574:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
 168              		.loc 2 575 5 is_stmt 1 view .LVU55
 169              		.syntax unified
 170              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 171 0070 72B6     		CPSID i
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 18


 172              	@ 0 "" 2
 576:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 577:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
 173              		.loc 2 577 5 view .LVU56
 174              	.LVL11:
 175              		.loc 2 577 5 is_stmt 0 view .LVU57
 176              		.thumb
 177              		.syntax unified
 178              	.LBE21:
 179              	.LBE20:
 220:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 221:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Load the thread ID field in the thread control block.  */
 222:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     thread_ptr -> tx_thread_id =  TX_THREAD_ID;
 180              		.loc 1 222 5 is_stmt 1 view .LVU58
 181              		.loc 1 222 32 is_stmt 0 view .LVU59
 182 0072 2A4B     		ldr	r3, .L12+8
 183 0074 2360     		str	r3, [r4]
 223:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 224:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Place the thread on the list of created threads.  First,
 225:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        check for an empty list.  */
 226:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     if (_tx_thread_created_count == TX_EMPTY)
 184              		.loc 1 226 5 is_stmt 1 view .LVU60
 185              		.loc 1 226 34 is_stmt 0 view .LVU61
 186 0076 2A4B     		ldr	r3, .L12+12
 187 0078 1B68     		ldr	r3, [r3]
 188              		.loc 1 226 8 view .LVU62
 189 007a 13BB     		cbnz	r3, .L3
 227:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 228:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 229:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* The created thread list is empty.  Add thread to empty list.  */
 230:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         _tx_thread_created_ptr =                    thread_ptr;
 190              		.loc 1 230 9 is_stmt 1 view .LVU63
 191              		.loc 1 230 32 is_stmt 0 view .LVU64
 192 007c 294A     		ldr	r2, .L12+16
 193 007e 1460     		str	r4, [r2]
 231:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_created_next =      thread_ptr;
 194              		.loc 1 231 9 is_stmt 1 view .LVU65
 195              		.loc 1 231 46 is_stmt 0 view .LVU66
 196 0080 C4F88840 		str	r4, [r4, #136]
 232:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_created_previous =  thread_ptr;
 197              		.loc 1 232 9 is_stmt 1 view .LVU67
 198              		.loc 1 232 50 is_stmt 0 view .LVU68
 199 0084 C4F88C40 		str	r4, [r4, #140]
 200              	.L4:
 233:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 234:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     else
 235:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 236:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 237:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* This list is not NULL, add to the end of the list.  */
 238:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         next_thread =  _tx_thread_created_ptr;
 239:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         previous_thread =  next_thread -> tx_thread_created_previous;
 240:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 241:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Place the new thread in the list.  */
 242:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         next_thread -> tx_thread_created_previous =  thread_ptr;
 243:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         previous_thread -> tx_thread_created_next =  thread_ptr;
 244:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 245:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Setup this thread's created links.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 19


 246:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_created_previous =  previous_thread;
 247:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_created_next =      next_thread;
 248:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 249:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 250:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Increment the thread created count.  */
 251:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     _tx_thread_created_count++;
 201              		.loc 1 251 5 is_stmt 1 view .LVU69
 202              		.loc 1 251 29 is_stmt 0 view .LVU70
 203 0088 0133     		adds	r3, r3, #1
 204 008a 254A     		ldr	r2, .L12+12
 205 008c 1360     		str	r3, [r2]
 252:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 253:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* If trace is enabled, register this object.  */
 254:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_TRACE_OBJECT_REGISTER(TX_TRACE_OBJECT_TYPE_THREAD, thread_ptr, name_ptr, TX_POINTER_TO_ULONG
 255:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 256:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 257:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_CREATE, thread_ptr, priority, TX_POINTER_TO_ULONG_CONVE
 258:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 259:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Register thread in the thread array structure.  */
 260:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_EL_THREAD_REGISTER(thread_ptr)
 261:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 262:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Log this kernel call.  */
 263:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     TX_EL_THREAD_CREATE_INSERT
 264:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 265:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifndef TX_NOT_INTERRUPTABLE
 266:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 267:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Temporarily disable preemption.  */
 268:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     _tx_thread_preempt_disable++;
 206              		.loc 1 268 5 is_stmt 1 view .LVU71
 207              		.loc 1 268 31 is_stmt 0 view .LVU72
 208 008e 264A     		ldr	r2, .L12+20
 209 0090 1368     		ldr	r3, [r2]
 210 0092 0133     		adds	r3, r3, #1
 211 0094 1360     		str	r3, [r2]
 269:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 270:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 271:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Determine if an automatic start was requested.  If so, call the resume
 272:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****        thread function and then check for a preemption condition.  */
 273:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     if (auto_start == TX_AUTO_START)
 212              		.loc 1 273 5 is_stmt 1 view .LVU73
 213              		.loc 1 273 8 is_stmt 0 view .LVU74
 214 0096 0F9B     		ldr	r3, [sp, #60]
 215 0098 012B     		cmp	r3, #1
 216 009a 2BD1     		bne	.L5
 274:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 275:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 276:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Determine if the create call is being called from initialization.  */
 277:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         if (TX_THREAD_GET_SYSTEM_STATE() >= TX_INITIALIZE_IN_PROGRESS)
 217              		.loc 1 277 9 is_stmt 1 view .LVU75
 218              	.LBB24:
 219              	.LBI24:
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 220              		.loc 2 474 63 view .LVU76
 221              	.LBB25:
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 222              		.loc 2 476 1 view .LVU77
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 20


 223              		.loc 2 477 5 view .LVU78
 224              		.syntax unified
 225              	@ 477 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 226 009c EFF30582 		 MRS  r2,IPSR 
 227              	@ 0 "" 2
 228              	.LVL12:
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 229              		.loc 2 478 5 view .LVU79
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 230              		.loc 2 478 5 is_stmt 0 view .LVU80
 231              		.thumb
 232              		.syntax unified
 233              	.LBE25:
 234              	.LBE24:
 235              		.loc 1 277 13 view .LVU81
 236 00a0 224B     		ldr	r3, .L12+24
 237 00a2 1B68     		ldr	r3, [r3]
 238 00a4 1343     		orrs	r3, r3, r2
 239              		.loc 1 277 12 view .LVU82
 240 00a6 B3F1F03F 		cmp	r3, #-252645136
 241 00aa 17D3     		bcc	.L8
 278:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         {
 279:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 280:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             /* Yes, this create call was made from initialization.  */
 281:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 282:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             /* Pickup the current thread execute pointer, which corresponds to the
 283:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                highest priority thread ready to execute.  Interrupt lockout is
 284:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                not required, since interrupts are assumed to be disabled during
 285:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                initialization.  */
 286:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             saved_thread_ptr =  _tx_thread_execute_ptr;
 242              		.loc 1 286 13 is_stmt 1 view .LVU83
 243              		.loc 1 286 30 is_stmt 0 view .LVU84
 244 00ac 204B     		ldr	r3, .L12+28
 245 00ae 1D68     		ldr	r5, [r3]
 246              	.LVL13:
 287:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 288:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             /* Determine if there is thread ready for execution.  */
 289:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             if (saved_thread_ptr != TX_NULL)
 247              		.loc 1 289 13 is_stmt 1 view .LVU85
 248              		.loc 1 289 16 is_stmt 0 view .LVU86
 249 00b0 F5B1     		cbz	r5, .L9
 290:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             {
 291:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 292:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                 /* Yes, a thread is ready for execution when initialization completes.  */
 293:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 294:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                 /* Save the current preemption-threshold.  */
 295:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                 saved_threshold =  saved_thread_ptr -> tx_thread_preempt_threshold;
 250              		.loc 1 295 17 is_stmt 1 view .LVU87
 251              		.loc 1 295 33 is_stmt 0 view .LVU88
 252 00b2 EE6B     		ldr	r6, [r5, #60]
 253              	.LVL14:
 296:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 297:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                 /* For initialization, temporarily set the preemption-threshold to the
 298:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                    priority level to make sure the highest-priority thread runs once
 299:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                    initialization is complete.  */
 300:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                 saved_thread_ptr -> tx_thread_preempt_threshold =  saved_thread_ptr -> tx_thread_pr
 254              		.loc 1 300 17 is_stmt 1 view .LVU89
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 21


 255              		.loc 1 300 85 is_stmt 0 view .LVU90
 256 00b4 EB6A     		ldr	r3, [r5, #44]
 257              		.loc 1 300 65 view .LVU91
 258 00b6 EB63     		str	r3, [r5, #60]
 259 00b8 12E0     		b	.L6
 260              	.LVL15:
 261              	.L11:
 193:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_user_preempt_threshold =  priority;
 262              		.loc 1 193 9 is_stmt 1 view .LVU92
 193:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_user_preempt_threshold =  priority;
 263              		.loc 1 193 51 is_stmt 0 view .LVU93
 264 00ba E763     		str	r7, [r4, #60]
 194:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 265              		.loc 1 194 9 is_stmt 1 view .LVU94
 194:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 266              		.loc 1 194 56 is_stmt 0 view .LVU95
 267 00bc C4F89870 		str	r7, [r4, #152]
 268 00c0 CBE7     		b	.L2
 269              	.LVL16:
 270              	.L3:
 238:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         previous_thread =  next_thread -> tx_thread_created_previous;
 271              		.loc 1 238 9 is_stmt 1 view .LVU96
 238:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         previous_thread =  next_thread -> tx_thread_created_previous;
 272              		.loc 1 238 21 is_stmt 0 view .LVU97
 273 00c2 184A     		ldr	r2, .L12+16
 274 00c4 1268     		ldr	r2, [r2]
 275              	.LVL17:
 239:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 276              		.loc 1 239 9 is_stmt 1 view .LVU98
 239:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 277              		.loc 1 239 25 is_stmt 0 view .LVU99
 278 00c6 D2F88C00 		ldr	r0, [r2, #140]
 279              	.LVL18:
 242:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         previous_thread -> tx_thread_created_next =  thread_ptr;
 280              		.loc 1 242 9 is_stmt 1 view .LVU100
 242:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         previous_thread -> tx_thread_created_next =  thread_ptr;
 281              		.loc 1 242 51 is_stmt 0 view .LVU101
 282 00ca C2F88C40 		str	r4, [r2, #140]
 243:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 283              		.loc 1 243 9 is_stmt 1 view .LVU102
 243:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 284              		.loc 1 243 51 is_stmt 0 view .LVU103
 285 00ce C0F88840 		str	r4, [r0, #136]
 246:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_created_next =      next_thread;
 286              		.loc 1 246 9 is_stmt 1 view .LVU104
 246:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         thread_ptr -> tx_thread_created_next =      next_thread;
 287              		.loc 1 246 50 is_stmt 0 view .LVU105
 288 00d2 C4F88C00 		str	r0, [r4, #140]
 247:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 289              		.loc 1 247 9 is_stmt 1 view .LVU106
 247:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 290              		.loc 1 247 46 is_stmt 0 view .LVU107
 291 00d6 C4F88820 		str	r2, [r4, #136]
 292 00da D5E7     		b	.L4
 293              	.LVL19:
 294              	.L8:
 103:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** UCHAR                   *temp_ptr;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 22


 295              		.loc 1 103 25 view .LVU108
 296 00dc 0026     		movs	r6, #0
 301:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             }
 302:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         }
 303:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         else
 304:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         {
 305:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 306:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             /* Simply set the saved thread pointer to NULL.  */
 307:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             saved_thread_ptr =  TX_NULL;
 297              		.loc 1 307 30 view .LVU109
 298 00de 3546     		mov	r5, r6
 299              	.LVL20:
 300              	.L6:
 308:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         }
 309:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 310:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_NOT_INTERRUPTABLE
 311:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 312:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Perform any additional activities for tool or user purpose.  */
 313:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_THREAD_CREATE_EXTENSION(thread_ptr)
 314:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 315:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Resume the thread!  */
 316:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         _tx_thread_system_ni_resume(thread_ptr);
 317:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 318:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Restore previous interrupt posture.  */
 319:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_RESTORE
 320:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #else
 321:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 322:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Restore previous interrupt posture.  */
 323:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_RESTORE
 301              		.loc 1 323 9 is_stmt 1 view .LVU110
 302              	.LBB26:
 303              	.LBI26:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 304              		.loc 2 556 55 view .LVU111
 305              	.LBB27:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 306              		.loc 2 562 5 view .LVU112
 307              		.syntax unified
 308              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 309 00e0 81F31088 		MSR  PRIMASK,r1
 310              	@ 0 "" 2
 311              	.LVL21:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 312              		.loc 2 562 5 is_stmt 0 view .LVU113
 313              		.thumb
 314              		.syntax unified
 315              	.LBE27:
 316              	.LBE26:
 324:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 325:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Perform any additional activities for tool or user purpose.  */
 326:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_THREAD_CREATE_EXTENSION(thread_ptr)
 327:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 328:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Call the resume thread function to make this thread ready.  */
 329:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         _tx_thread_system_resume(thread_ptr);
 317              		.loc 1 329 9 is_stmt 1 view .LVU114
 318 00e4 2046     		mov	r0, r4
 319 00e6 FFF7FEFF 		bl	_tx_thread_system_resume
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 23


 320              	.LVL22:
 330:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 331:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 332:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Determine if the thread's preemption-threshold needs to be restored.  */
 333:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         if (saved_thread_ptr != TX_NULL)
 321              		.loc 1 333 9 view .LVU115
 322              		.loc 1 333 12 is_stmt 0 view .LVU116
 323 00ea 85B1     		cbz	r5, .L7
 334:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         {
 335:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 336:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             /* Yes, restore the previous highest-priority thread's preemption-threshold. This
 337:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****                can only happen if this routine is called from initialization.  */
 338:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****             saved_thread_ptr -> tx_thread_preempt_threshold =  saved_threshold;
 324              		.loc 1 338 13 is_stmt 1 view .LVU117
 325              		.loc 1 338 61 is_stmt 0 view .LVU118
 326 00ec EE63     		str	r6, [r5, #60]
 327 00ee 0EE0     		b	.L7
 328              	.LVL23:
 329              	.L9:
 103:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** UCHAR                   *temp_ptr;
 330              		.loc 1 103 25 view .LVU119
 331 00f0 0026     		movs	r6, #0
 332              	.LVL24:
 103:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** UCHAR                   *temp_ptr;
 333              		.loc 1 103 25 view .LVU120
 334 00f2 F5E7     		b	.L6
 335              	.LVL25:
 336              	.L5:
 339:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         }
 340:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 341:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     else
 342:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     {
 343:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 344:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #ifdef TX_NOT_INTERRUPTABLE
 345:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 346:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Perform any additional activities for tool or user purpose.  */
 347:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_THREAD_CREATE_EXTENSION(thread_ptr)
 348:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 349:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Restore interrupts.  */
 350:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_RESTORE
 351:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #else
 352:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 353:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Restore interrupts.  */
 354:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_RESTORE
 337              		.loc 1 354 9 is_stmt 1 view .LVU121
 338              	.LBB28:
 339              	.LBI28:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 340              		.loc 2 556 55 view .LVU122
 341              	.LBB29:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 342              		.loc 2 562 5 view .LVU123
 343              		.syntax unified
 344              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 345 00f4 81F31088 		MSR  PRIMASK,r1
 346              	@ 0 "" 2
 347              	.LVL26:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 24


 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 348              		.loc 2 562 5 is_stmt 0 view .LVU124
 349              		.thumb
 350              		.syntax unified
 351              	.LBE29:
 352              	.LBE28:
 355:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 356:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Perform any additional activities for tool or user purpose.  */
 357:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_THREAD_CREATE_EXTENSION(thread_ptr)
 358:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 359:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Disable interrupts.  */
 360:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_DISABLE
 353              		.loc 1 360 9 is_stmt 1 view .LVU125
 354              	.LBB30:
 355              	.LBI30:
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 356              		.loc 2 566 63 view .LVU126
 357              	.LBB31:
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 358              		.loc 2 568 1 view .LVU127
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359              		.loc 2 570 5 view .LVU128
 360              	.LBB32:
 361              	.LBI32:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 362              		.loc 2 533 63 view .LVU129
 363              	.LBB33:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 364              		.loc 2 535 1 view .LVU130
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 365              		.loc 2 539 5 view .LVU131
 366              		.syntax unified
 367              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 368 00f8 EFF31081 		MRS  r1, PRIMASK 
 369              	@ 0 "" 2
 370              	.LVL27:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 371              		.loc 2 541 5 view .LVU132
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 372              		.loc 2 541 5 is_stmt 0 view .LVU133
 373              		.thumb
 374              		.syntax unified
 375              	.LBE33:
 376              	.LBE32:
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 377              		.loc 2 575 5 is_stmt 1 view .LVU134
 378              		.syntax unified
 379              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 380 00fc 72B6     		CPSID i
 381              	@ 0 "" 2
 382              		.loc 2 577 5 view .LVU135
 383              	.LVL28:
 384              		.loc 2 577 5 is_stmt 0 view .LVU136
 385              		.thumb
 386              		.syntax unified
 387              	.LBE31:
 388              	.LBE30:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 25


 361:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 362:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Re-enable preemption.  */
 363:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         _tx_thread_preempt_disable--;
 389              		.loc 1 363 9 is_stmt 1 view .LVU137
 390              		.loc 1 363 35 is_stmt 0 view .LVU138
 391 00fe 0A4A     		ldr	r2, .L12+20
 392 0100 1368     		ldr	r3, [r2]
 393 0102 013B     		subs	r3, r3, #1
 394 0104 1360     		str	r3, [r2]
 364:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 365:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Restore interrupts.  */
 366:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         TX_RESTORE
 395              		.loc 1 366 9 is_stmt 1 view .LVU139
 396              	.LVL29:
 397              	.LBB34:
 398              	.LBI34:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 399              		.loc 2 556 55 view .LVU140
 400              	.LBB35:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 401              		.loc 2 562 5 view .LVU141
 402              		.syntax unified
 403              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 404 0106 81F31088 		MSR  PRIMASK,r1
 405              	@ 0 "" 2
 406              	.LVL30:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 407              		.loc 2 562 5 is_stmt 0 view .LVU142
 408              		.thumb
 409              		.syntax unified
 410              	.LBE35:
 411              	.LBE34:
 367:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 368:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         /* Check for preemption.  */
 369:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****         _tx_thread_system_preempt_check();
 412              		.loc 1 369 9 is_stmt 1 view .LVU143
 413 010a FFF7FEFF 		bl	_tx_thread_system_preempt_check
 414              	.LVL31:
 415              	.L7:
 370:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** #endif
 371:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     }
 372:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** 
 373:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     /* Always return a success.  */
 374:./Middlewares/ST/threadx/common/src/tx_thread_create.c ****     return(TX_SUCCESS);
 416              		.loc 1 374 5 view .LVU144
 375:./Middlewares/ST/threadx/common/src/tx_thread_create.c **** }
 417              		.loc 1 375 1 is_stmt 0 view .LVU145
 418 010e 0020     		movs	r0, #0
 419 0110 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 420              	.LVL32:
 421              	.L13:
 422              		.loc 1 375 1 view .LVU146
 423              		.align	2
 424              	.L12:
 425 0114 00000000 		.word	_tx_thread_timeout
 426 0118 00000000 		.word	_tx_thread_shell_entry
 427 011c 44524854 		.word	1414025796
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 26


 428 0120 00000000 		.word	_tx_thread_created_count
 429 0124 00000000 		.word	_tx_thread_created_ptr
 430 0128 00000000 		.word	_tx_thread_preempt_disable
 431 012c 00000000 		.word	_tx_thread_system_state
 432 0130 00000000 		.word	_tx_thread_execute_ptr
 433              		.cfi_endproc
 434              	.LFE8:
 436              		.text
 437              	.Letext0:
 438              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
 439              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_thread.h"
 440              		.file 5 "c:\\software_user\\armgcc\\arm-none-eabi\\include\\string.h"
 441              		.file 6 "<built-in>"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 tx_thread_create.c
C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s:20     .text._tx_thread_create:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s:26     .text._tx_thread_create:00000000 _tx_thread_create
C:\Users\Dennis\AppData\Local\Temp\ccJEFhtf.s:425    .text._tx_thread_create:00000114 $d

UNDEFINED SYMBOLS
memset
_tx_thread_stack_build
_tx_thread_system_resume
_tx_thread_system_preempt_check
_tx_thread_timeout
_tx_thread_shell_entry
_tx_thread_created_count
_tx_thread_created_ptr
_tx_thread_preempt_disable
_tx_thread_system_state
_tx_thread_execute_ptr
