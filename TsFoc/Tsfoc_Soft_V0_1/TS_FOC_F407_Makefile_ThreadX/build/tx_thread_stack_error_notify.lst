ARM GAS  /tmp/ccTWKCS8.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_thread_stack_error_notify.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c"
  20              		.section	.text._tx_thread_stack_error_notify,"ax",%progbits
  21              		.align	1
  22              		.global	_tx_thread_stack_error_notify
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_tx_thread_stack_error_notify:
  28              	.LVL0:
  29              	.LFB8:
   1:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**   Thread                                                              */
  19:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  26:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /* Include necessary system files.  */
  27:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  28:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #include "tx_api.h"
  29:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #include "tx_thread.h"
ARM GAS  /tmp/ccTWKCS8.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #if defined(TX_ENABLE_STACK_CHECKING) || defined(TX_PORT_THREAD_STACK_ERROR_HANDLING)
  31:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #include "tx_trace.h"
  32:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #endif
  33:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  34:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  35:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  36:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  37:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  FUNCTION                                               RELEASE        */
  38:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  39:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    _tx_thread_stack_error_notify                       PORTABLE C      */
  40:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                           6.1.9        */
  41:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  AUTHOR                                                                */
  42:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  43:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    William E. Lamie, Microsoft Corporation                             */
  44:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  45:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  DESCRIPTION                                                           */
  46:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  47:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    This function registers an application stack error handler. If      */
  48:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    ThreadX detects a stack error, this application handler is called.  */
  49:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  50:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    Note: stack checking must be enabled for this routine to serve any  */
  51:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    purpose via the TX_ENABLE_STACK_CHECKING define.                    */
  52:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  53:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  INPUT                                                                 */
  54:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  55:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    stack_error_handler                   Pointer to stack error        */
  56:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            handler, TX_NULL to disable */
  57:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  58:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  OUTPUT                                                                */
  59:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  60:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    status                                Service return status         */
  61:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  62:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  CALLS                                                                 */
  63:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  64:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    None                                                                */
  65:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  66:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  CALLED BY                                                             */
  67:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  68:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    Application Code                                                    */
  69:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  70:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  RELEASE HISTORY                                                       */
  71:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  72:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*    DATE              NAME                      DESCRIPTION             */
  73:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  74:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  75:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  76:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            resulting in version 6.1    */
  77:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  06-02-2021     Yuxin Zhou               Modified comment(s), added    */
  78:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            conditional compilation     */
  79:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            for ARMv8-M (Cortex M23/33) */
  80:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            resulting in version 6.1.7  */
  81:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*  10-15-2021     Yuxin Zhou               Modified comment(s), improved */
  82:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            stack check error handling, */
  83:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                            resulting in version 6.1.9  */
  84:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /*                                                                        */
  85:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** /**************************************************************************/
  86:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** UINT  _tx_thread_stack_error_notify(VOID (*stack_error_handler)(TX_THREAD *thread_ptr))
ARM GAS  /tmp/ccTWKCS8.s 			page 3


  87:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** {
  30              		.loc 1 87 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  88:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  89:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #if !defined(TX_ENABLE_STACK_CHECKING) && !defined(TX_PORT_THREAD_STACK_ERROR_HANDLING)
  90:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  91:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** UINT        status;
  35              		.loc 1 91 1 view .LVU1
  92:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  93:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  94:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Access input argument just for the sake of lint, MISRA, etc.  */
  95:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     if (stack_error_handler != TX_NULL)
  36              		.loc 1 95 5 view .LVU2
  96:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     {
  97:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
  98:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****         /* Stack checking is not enabled, just return an error.  */
  99:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****         status =  TX_FEATURE_NOT_ENABLED;
 100:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     }
 101:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     else
 102:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     {
 103:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 104:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****         /* Stack checking is not enabled, just return an error.  */
 105:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****         status =  TX_FEATURE_NOT_ENABLED;
  37              		.loc 1 105 9 view .LVU3
 106:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     }
 107:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 108:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Return completion status.  */
 109:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     return(status);
  38              		.loc 1 109 5 view .LVU4
 110:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 111:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #else
 112:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 113:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** TX_INTERRUPT_SAVE_AREA
 114:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 115:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 116:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Disable interrupts.  */
 117:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     TX_DISABLE
 118:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 119:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Make entry in event log.  */
 120:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_STACK_ERROR_NOTIFY, 0, 0, 0, 0, TX_TRACE_THREAD_EVENTS)
 121:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 122:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Make entry in event log.  */
 123:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     TX_EL_THREAD_STACK_ERROR_NOTIFY_INSERT
 124:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 125:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Setup global thread stack error handler.  */
 126:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     _tx_thread_application_stack_error_handler =  stack_error_handler;
 127:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 128:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Restore interrupts.  */
 129:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     TX_RESTORE
 130:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** 
 131:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     /* Return success to caller.  */
 132:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c ****     return(TX_SUCCESS);
 133:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** #endif
 134:./Middlewares/ST/threadx/common/src/tx_thread_stack_error_notify.c **** }
ARM GAS  /tmp/ccTWKCS8.s 			page 4


  39              		.loc 1 134 1 is_stmt 0 view .LVU5
  40 0000 FF20     		movs	r0, #255
  41              	.LVL1:
  42              		.loc 1 134 1 view .LVU6
  43 0002 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE8:
  47              		.text
  48              	.Letext0:
  49              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
  50              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
ARM GAS  /tmp/ccTWKCS8.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 tx_thread_stack_error_notify.c
     /tmp/ccTWKCS8.s:21     .text._tx_thread_stack_error_notify:00000000 $t
     /tmp/ccTWKCS8.s:27     .text._tx_thread_stack_error_notify:00000000 _tx_thread_stack_error_notify

NO UNDEFINED SYMBOLS
