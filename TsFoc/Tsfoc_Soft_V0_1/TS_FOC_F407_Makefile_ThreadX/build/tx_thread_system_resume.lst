ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_thread_system_resume.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_thread_system_resume,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_thread_system_resume
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_thread_system_resume:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c"
   1:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
   2:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
   3:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
   5:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  10:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  11:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  12:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  13:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  14:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  15:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**                                                                       */
  16:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**                                                                       */
  18:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**   Thread                                                              */
  19:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**                                                                       */
  20:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  21:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  22:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  23:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #define TX_SOURCE_CODE
  24:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  25:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /* Include necessary system files.  */
  26:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_api.h"
  27:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
  28:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_initialize.h"
  29:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 2


  30:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_trace.h"
  31:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_timer.h"
  32:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_thread.h"
  33:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  34:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  35:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  36:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  FUNCTION                                               RELEASE        */
  37:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  38:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_system_resume                            PORTABLE C      */
  39:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                           6.1          */
  40:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  AUTHOR                                                                */
  41:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  42:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  44:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  DESCRIPTION                                                           */
  45:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  46:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    This function places the specified thread on the list of ready      */
  47:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    threads at the thread's specific priority.                          */
  48:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  49:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  INPUT                                                                 */
  50:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  51:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    thread_ptr                            Pointer to thread to resume   */
  52:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  53:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  OUTPUT                                                                */
  54:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  55:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    None                                                                */
  56:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  57:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  CALLS                                                                 */
  58:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  59:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_system_return              Return to the system          */
  60:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_system_ni_resume           Noninterruptable thread resume*/
  61:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_timer_system_deactivate           Timer deactivate              */
  62:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  63:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  CALLED BY                                                             */
  64:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  65:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_create                     Thread create function        */
  66:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_priority_change            Thread priority change        */
  67:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_resume                     Application resume service    */
  68:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_timeout                    Thread timeout                */
  69:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_wait_abort                 Thread wait abort             */
  70:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    Other ThreadX Components                                            */
  71:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  72:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  RELEASE HISTORY                                                       */
  73:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  74:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    DATE              NAME                      DESCRIPTION             */
  75:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  76:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  77:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  78:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                            resulting in version 6.1    */
  79:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  80:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  81:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** VOID  _tx_thread_system_resume(TX_THREAD *thread_ptr)
  82:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_NOT_INTERRUPTABLE
  83:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** {
  30              		.loc 1 83 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 3


  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 83 1 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  84:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  85:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_INTERRUPT_SAVE_AREA
  43              		.loc 1 85 1 is_stmt 1 view .LVU2
  86:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  87:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** UINT            priority;
  44              		.loc 1 87 1 view .LVU3
  88:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** ULONG           priority_bit;
  45              		.loc 1 88 1 view .LVU4
  89:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *head_ptr;
  46              		.loc 1 89 1 view .LVU5
  90:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *tail_ptr;
  47              		.loc 1 90 1 view .LVU6
  91:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *execute_ptr;
  48              		.loc 1 91 1 view .LVU7
  92:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *current_thread;
  49              		.loc 1 92 1 view .LVU8
  93:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** ULONG           combined_flags;
  50              		.loc 1 93 1 view .LVU9
  94:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  95:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
  96:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_TRACE_BUFFER_ENTRY       *entry_ptr;
  97:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** ULONG                       time_stamp =  ((ULONG) 0);
  98:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
  99:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 100:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #if TX_MAX_PRIORITIES > 32
 101:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** UINT            map_index;
 102:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 103:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 104:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 105:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_STACK_CHECKING
 106:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 107:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Check this thread's stack.  */
 108:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_THREAD_STACK_CHECK(thread_ptr)
 109:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 110:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 111:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Lockout interrupts while the thread is being resumed.  */
 112:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_DISABLE
  51              		.loc 1 112 5 view .LVU10
  52              	.LBB40:
  53              	.LBI40:
  54              		.file 2 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 4


   7:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.10       */
  30:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  60:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  61:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  62:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  63:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 5


  64:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  65:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  66:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  67:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  69:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  70:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  71:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  72:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  73:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  74:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  75:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  77:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  78:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  80:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  81:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  83:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  84:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  85:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  86:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  87:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  88:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  89:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  90:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  91:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  92:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  93:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
  94:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  95:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
  97:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
  98:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
  99:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 100:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 102:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 103:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 104:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 105:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 106:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 108:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 109:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 110:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 111:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 112:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 113:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 114:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 115:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 116:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 117:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 118:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 119:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 120:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 6


 121:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 122:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 123:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 124:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 125:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 126:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 127:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 128:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 129:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 130:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 131:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 132:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 133:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 134:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 135:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 136:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 137:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 138:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 139:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 140:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 142:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 143:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 144:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 145:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 146:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 147:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 148:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 149:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 150:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 151:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 153:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 154:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 155:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 156:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 157:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0x0a800024)
 158:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 159:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 160:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 161:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 162:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 163:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 164:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((ULONG *) 0xE0001004)
 165:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 166:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 167:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 168:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 169:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 170:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 171:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 172:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 173:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 174:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 175:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 176:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 177:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 7


 178:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 179:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 180:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 181:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 182:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 184:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 185:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 186:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 187:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 188:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 189:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 191:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 192:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 194:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 196:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 197:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 198:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 199:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 200:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 201:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 202:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 203:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 204:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 205:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 206:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 208:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 209:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 210:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 211:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 212:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 213:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 214:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 215:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 216:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 218:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 220:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 221:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 222:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 223:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 224:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 225:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 226:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 227:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 228:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 229:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 230:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 231:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 232:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 233:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 234:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 8


 235:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 237:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 238:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 239:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 240:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 241:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 242:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 243:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 244:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 245:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 246:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 247:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 248:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 249:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 250:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 253:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 254:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 256:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 257:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 258:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 259:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 260:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 261:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 262:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 265:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 266:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 267:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 268:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 269:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 270:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 271:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 272:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 273:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 274:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 276:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 277:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 278:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 279:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 280:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 281:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 282:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 283:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 284:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 285:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 286:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 288:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 289:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 290:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 291:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 9


 292:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 293:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 294:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 295:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 296:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 297:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 298:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 300:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 301:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 302:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 303:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 304:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 305:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 307:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 308:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 309:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 310:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 311:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 312:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 313:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 314:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 315:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 316:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 317:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 318:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 319:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 320:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 321:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 322:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 325:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 326:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 327:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 328:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 329:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 330:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 331:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 333:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 334:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 335:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 337:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 338:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 339:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 340:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 341:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 342:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 343:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 345:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 346:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 347:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 348:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 10


 349:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 350:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 351:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 352:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 353:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 354:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 355:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 356:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 357:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 358:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 359:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 360:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 361:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 362:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 363:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 364:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 365:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 366:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 367:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 368:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 369:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 370:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 371:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 372:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 373:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 374:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 375:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 376:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 377:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 378:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 379:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 380:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 381:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((ULONG *) 0xE000EF34);  
 382:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 383:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 384:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 385:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 386:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 387:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 388:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 389:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 390:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 391:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 392:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 393:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 394:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 395:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 396:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 397:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 398:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 399:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 400:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 401:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 402:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 403:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 404:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 405:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 11


 406:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 407:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 408:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 409:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 410:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 411:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 412:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 413:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 414:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 415:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 416:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 417:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 418:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 419:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 420:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 421:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 422:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 423:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 424:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 425:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 426:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 427:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 428:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 429:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 430:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 431:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 432:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 433:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 434:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 435:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 436:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 437:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 438:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 439:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 440:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 441:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 442:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 443:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 444:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 445:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 446:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 447:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 448:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 449:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 450:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 452:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 453:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 454:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 455:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 456:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 457:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 458:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 459:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 460:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 461:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 12


 463:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 464:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 465:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 466:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 467:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 468:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 469:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 470:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 471:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 472:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 473:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 475:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 479:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 480:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 482:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 483:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 484:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 485:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 486:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 487:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 488:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 489:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 490:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 491:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 492:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 493:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 494:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 496:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 497:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 498:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 499:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 500:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 502:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 503:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 504:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 505:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 506:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 507:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 509:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 510:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 511:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 512:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 514:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 515:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 516:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 517:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 518:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 519:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 13


 520:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 521:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 522:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 523:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 524:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 526:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 528:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 529:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 530:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 531:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 532:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 534:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 536:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 537:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 538:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 540:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 542:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 543:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 544:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 545:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 546:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 548:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 549:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 551:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 553:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 554:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 555:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 557:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 558:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 559:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 560:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 561:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 563:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 564:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 565:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 566:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  55              		.loc 2 566 63 view .LVU11
  56              	.LBB41:
 567:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 568:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  57              		.loc 2 568 1 view .LVU12
 569:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 570:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  58              		.loc 2 570 5 view .LVU13
  59              	.LBB42:
  60              	.LBI42:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 14


 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  61              		.loc 2 533 63 view .LVU14
  62              	.LBB43:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  63              		.loc 2 535 1 view .LVU15
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  64              		.loc 2 539 5 view .LVU16
  65              		.syntax unified
  66              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  67 0004 EFF31085 		MRS  r5, PRIMASK 
  68              	@ 0 "" 2
  69              	.LVL1:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  70              		.loc 2 541 5 view .LVU17
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  71              		.loc 2 541 5 is_stmt 0 view .LVU18
  72              		.thumb
  73              		.syntax unified
  74              	.LBE43:
  75              	.LBE42:
 571:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 572:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 573:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 574:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 575:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  76              		.loc 2 575 5 is_stmt 1 view .LVU19
  77              		.syntax unified
  78              	@ 575 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  79 0008 72B6     		CPSID i
  80              	@ 0 "" 2
 576:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 577:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
  81              		.loc 2 577 5 view .LVU20
  82              	.LVL2:
  83              		.loc 2 577 5 is_stmt 0 view .LVU21
  84              		.thumb
  85              		.syntax unified
  86              	.LBE41:
  87              	.LBE40:
 113:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 114:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_NO_TIMER
 115:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 116:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Deactivate the timeout timer if necessary.  */
 117:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (thread_ptr -> tx_thread_timer.tx_timer_internal_list_head != TX_NULL)
  88              		.loc 1 117 5 is_stmt 1 view .LVU22
  89              		.loc 1 117 38 is_stmt 0 view .LVU23
  90 000a 436E     		ldr	r3, [r0, #100]
  91              		.loc 1 117 8 view .LVU24
  92 000c DBB1     		cbz	r3, .L2
 118:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 119:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 120:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Deactivate the thread's timeout timer.  */
 121:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         _tx_timer_system_deactivate(&(thread_ptr -> tx_thread_timer));
  93              		.loc 1 121 9 is_stmt 1 view .LVU25
  94 000e 4C30     		adds	r0, r0, #76
  95              	.LVL3:
  96              		.loc 1 121 9 is_stmt 0 view .LVU26
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 15


  97 0010 FFF7FEFF 		bl	_tx_timer_system_deactivate
  98              	.LVL4:
  99              	.L3:
 122:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 123:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     else
 124:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 125:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 126:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Clear the remaining time to ensure timer doesn't get activated.  */
 127:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  ((ULONG) 0);
 128:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 129:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 130:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 131:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 132:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 133:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* If trace is enabled, save the current event pointer.  */
 134:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     entry_ptr =  _tx_trace_buffer_current_ptr;
 135:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 136:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 137:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Log the thread status change.  */
 138:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_RESUME, thread_ptr, thread_ptr -> tx_thread_state, TX_P
 139:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 140:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 141:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 142:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Save the time stamp for later comparison to verify that
 143:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        the event hasn't been overwritten by the time we have
 144:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        computed the next thread to execute.  */
 145:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (entry_ptr != TX_NULL)
 146:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 147:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 148:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Save time stamp.  */
 149:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         time_stamp =  entry_ptr -> tx_trace_buffer_entry_time_stamp;
 150:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 151:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 152:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 153:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Decrease the preempt disabled count.  */
 154:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     _tx_thread_preempt_disable--;
 100              		.loc 1 154 5 is_stmt 1 view .LVU27
 101              		.loc 1 154 31 is_stmt 0 view .LVU28
 102 0014 3C4A     		ldr	r2, .L15
 103 0016 1368     		ldr	r3, [r2]
 104 0018 013B     		subs	r3, r3, #1
 105 001a 1360     		str	r3, [r2]
 155:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 156:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Determine if the thread is in the process of suspending.  If so, the thread
 157:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        control block is already on the linked list so nothing needs to be done.  */
 158:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (thread_ptr -> tx_thread_suspending == TX_FALSE)
 106              		.loc 1 158 5 is_stmt 1 view .LVU29
 107              		.loc 1 158 20 is_stmt 0 view .LVU30
 108 001c A36B     		ldr	r3, [r4, #56]
 109              		.loc 1 158 8 view .LVU31
 110 001e 002B     		cmp	r3, #0
 111 0020 63D1     		bne	.L4
 159:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 160:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 161:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Thread is not in the process of suspending. Now check to make sure the thread
 162:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            has not already been resumed.  */
 163:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (thread_ptr -> tx_thread_state != TX_READY)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 16


 112              		.loc 1 163 9 is_stmt 1 view .LVU32
 113              		.loc 1 163 24 is_stmt 0 view .LVU33
 114 0022 236B     		ldr	r3, [r4, #48]
 115              		.loc 1 163 12 view .LVU34
 116 0024 002B     		cmp	r3, #0
 117 0026 46D0     		beq	.L5
 164:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 165:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 166:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* No, now check to see if the delayed suspension flag is set.  */
 167:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
 118              		.loc 1 167 13 is_stmt 1 view .LVU35
 119              		.loc 1 167 28 is_stmt 0 view .LVU36
 120 0028 636B     		ldr	r3, [r4, #52]
 121              		.loc 1 167 16 view .LVU37
 122 002a 002B     		cmp	r3, #0
 123 002c 3FD1     		bne	.L6
 168:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 169:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 170:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Resume the thread!  */
 171:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 172:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Make this thread ready.  */
 173:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 174:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Change the state to ready.  */
 175:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_state =  TX_READY;
 124              		.loc 1 175 17 is_stmt 1 view .LVU38
 125              		.loc 1 175 47 is_stmt 0 view .LVU39
 126 002e 2363     		str	r3, [r4, #48]
 176:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 177:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Pickup priority of thread.  */
 178:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 priority =  thread_ptr -> tx_thread_priority;
 127              		.loc 1 178 17 is_stmt 1 view .LVU40
 128              		.loc 1 178 26 is_stmt 0 view .LVU41
 129 0030 E26A     		ldr	r2, [r4, #44]
 130              	.LVL5:
 179:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 180:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Thread state change.  */
 181:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 TX_THREAD_STATE_CHANGE(thread_ptr, TX_READY)
 182:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 183:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Log the thread status change.  */
 184:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)
 185:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 186:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 187:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 188:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment the total number of thread resumptions.  */
 189:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 _tx_thread_performance_resume_count++;
 190:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 191:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment this thread's resume count.  */
 192:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_performance_resume_count++;
 193:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 194:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 195:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Determine if there are other threads at this priority that are
 196:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                    ready.  */
 197:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 head_ptr =  _tx_thread_priority_list[priority];
 131              		.loc 1 197 17 is_stmt 1 view .LVU42
 132              		.loc 1 197 26 is_stmt 0 view .LVU43
 133 0032 364B     		ldr	r3, .L15+4
 134 0034 53F82230 		ldr	r3, [r3, r2, lsl #2]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 17


 135              	.LVL6:
 198:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 if (head_ptr == TX_NULL)
 136              		.loc 1 198 17 is_stmt 1 view .LVU44
 137              		.loc 1 198 20 is_stmt 0 view .LVU45
 138 0038 43B1     		cbz	r3, .L13
 199:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 200:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 201:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* First thread at this priority ready.  Add to the front of the list.  */
 202:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_list[priority] =       thread_ptr;
 203:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 204:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   thread_ptr;
 205:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 206:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #if TX_MAX_PRIORITIES > 32
 207:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 208:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Calculate the index into the bit map array.  */
 209:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     map_index =  priority/((UINT) 32);
 210:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 211:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Set the active bit to remember that the priority map has something set.  */
 212:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_DIV32_BIT_SET(priority, priority_bit)
 213:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_map_active =  _tx_thread_priority_map_active | priority_bit
 214:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 215:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 216:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Or in the thread's priority bit.  */
 217:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_MOD32_BIT_SET(priority, priority_bit)
 218:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | pr
 219:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 220:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Determine if this newly ready thread is the highest priority.  */
 221:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     if (priority < _tx_thread_highest_priority)
 222:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 223:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 224:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* A new highest priority thread is present. */
 225:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 226:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* Update the highest priority variable.  */
 227:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         _tx_thread_highest_priority =  priority;
 228:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 229:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* Pickup the execute pointer. Since it is going to be referenced multiple
 230:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                            times, it is placed in a local variable.  */
 231:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         execute_ptr =  _tx_thread_execute_ptr;
 232:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 233:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* Determine if no thread is currently executing.  */
 234:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         if (execute_ptr == TX_NULL)
 235:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 236:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 237:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             /* Simply setup the execute pointer.  */
 238:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             _tx_thread_execute_ptr =  thread_ptr;
 239:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 240:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         else
 241:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 242:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 243:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             /* Another thread has been scheduled for execution.  */
 244:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 245:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             /* Check to see if this is a higher priority thread and determine if pr
 246:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             if (priority < execute_ptr -> tx_thread_preempt_threshold)
 247:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 248:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 249:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_DISABLE_PREEMPTION_THRESHOLD
 250:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 18


 251:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Determine if the preempted thread had preemption-threshold set. 
 252:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (execute_ptr -> tx_thread_preempt_threshold != execute_ptr -> tx
 253:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 254:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 255:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #if TX_MAX_PRIORITIES > 32
 256:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 257:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Calculate the index into the bit map array.  */
 258:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     map_index =  (execute_ptr -> tx_thread_priority)/((UINT) 32);
 259:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 260:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Set the active bit to remember that the preempt map has some
 261:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     TX_DIV32_BIT_SET(execute_ptr -> tx_thread_priority, priority_bi
 262:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_preempted_map_active =  _tx_thread_preempted_map_act
 263:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 264:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 265:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Remember that this thread was preempted by a thread above th
 266:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     TX_MOD32_BIT_SET(execute_ptr -> tx_thread_priority, priority_bi
 267:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_preempted_maps[MAP_INDEX] =  _tx_thread_preempted_ma
 268:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 269:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 270:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 271:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 272:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 273:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Determine if the caller is an interrupt or from a thread.  */
 274:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (TX_THREAD_GET_SYSTEM_STATE() == ((ULONG) 0))
 275:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 276:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 277:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Caller is a thread, so this is a solicited preemption.  */
 278:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance_solicited_preemption_count++;
 279:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 280:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Increment the thread's solicited preemption counter.  */
 281:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     execute_ptr -> tx_thread_performance_solicited_preemption_count
 282:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 283:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 else
 284:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 285:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 286:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
 287:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     {
 288:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 289:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Caller is an interrupt, so this is an interrupt preempti
 290:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         _tx_thread_performance_interrupt_preemption_count++;
 291:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 292:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Increment the thread's interrupt preemption counter.  */
 293:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         execute_ptr -> tx_thread_performance_interrupt_preemption_c
 294:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     }
 295:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 296:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 297:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Remember the thread that preempted this thread.  */
 298:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 execute_ptr -> tx_thread_performance_last_preempting_thread =  thre
 299:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 300:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 301:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 302:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Yes, modify the execute thread pointer.  */
 303:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 _tx_thread_execute_ptr =  thread_ptr;
 304:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 305:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_MISRA_ENABLE
 306:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 307:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* If MISRA is not-enabled, insert a preemption and return in-line 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 19


 308:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 309:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 310:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 311:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Is the execute pointer different?  */
 312:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (_tx_thread_performance_execute_log[_tx_thread_performance__exec
 313:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 314:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 315:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Move to next entry.  */
 316:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance__execute_log_index++;
 317:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 318:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Check for wrap condition.  */
 319:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXEC
 320:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     {
 321:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 322:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Set the index to the beginning.  */
 323:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         _tx_thread_performance__execute_log_index =  ((UINT) 0);
 324:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     }
 325:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 326:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Log the new execute pointer.  */
 327:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance_execute_log[_tx_thread_performance__exec
 328:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 329:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 330:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 331:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 332:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 333:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Check that the event time stamp is unchanged.  A different
 334:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                    timestamp means that a later event wrote over the thread
 335:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                    resume event. In that case, do nothing here.  */
 336:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (entry_ptr != TX_NULL)
 337:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 338:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 339:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Is the timestamp the same?  */
 340:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     if (time_stamp == entry_ptr -> tx_trace_buffer_entry_time_stamp
 341:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     {
 342:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 343:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Timestamp is the same, set the "next thread pointer" to 
 344:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                            be used by the trace analysis tool to show idle system c
 345:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         entry_ptr -> tx_trace_buffer_entry_information_field_4 =  T
 346:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     }
 347:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 348:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 349:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 350:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Restore interrupts.  */
 351:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 TX_RESTORE
 352:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 353:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_STACK_CHECKING
 354:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 355:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Pickup the next execute pointer.  */
 356:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 thread_ptr =  _tx_thread_execute_ptr;
 357:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 358:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Check this thread's stack.  */
 359:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 TX_THREAD_STACK_CHECK(thread_ptr)
 360:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 361:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 362:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Now determine if preemption should take place. This is only poss
 363:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                    not the same as the execute thread pointer AND the system state 
 364:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 20


 365:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (combined_flags == ((ULONG) 0))
 366:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 367:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 368:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 369:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 370:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* There is another thread ready to run and will be scheduled u
 371:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance_non_idle_return_count++;
 372:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 373:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 374:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Preemption is needed - return to the system!  */
 375:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_system_return();
 376:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 377:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 378:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Return in-line when MISRA is not enabled.  */
 379:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 return;
 380:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 381:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             }
 382:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 383:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     }
 384:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 385:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 else
 386:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 387:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 388:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* No, there are other threads at this priority already ready.  */
 389:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 390:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Just add this thread to the priority list.  */
 391:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     tail_ptr =                                 head_ptr -> tx_thread_ready_previous
 139              		.loc 1 391 21 is_stmt 1 view .LVU46
 140              		.loc 1 391 30 is_stmt 0 view .LVU47
 141 003a 5A6A     		ldr	r2, [r3, #36]
 142              	.LVL7:
 392:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     tail_ptr -> tx_thread_ready_next =         thread_ptr;
 143              		.loc 1 392 21 is_stmt 1 view .LVU48
 144              		.loc 1 392 54 is_stmt 0 view .LVU49
 145 003c 1462     		str	r4, [r2, #32]
 146              	.LVL8:
 393:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     head_ptr -> tx_thread_ready_previous =     thread_ptr;
 147              		.loc 1 393 21 is_stmt 1 view .LVU50
 148              		.loc 1 393 58 is_stmt 0 view .LVU51
 149 003e 5C62     		str	r4, [r3, #36]
 394:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   tail_ptr;
 150              		.loc 1 394 21 is_stmt 1 view .LVU52
 151              		.loc 1 394 60 is_stmt 0 view .LVU53
 152 0040 6262     		str	r2, [r4, #36]
 395:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       head_ptr;
 153              		.loc 1 395 21 is_stmt 1 view .LVU54
 154              		.loc 1 395 56 is_stmt 0 view .LVU55
 155 0042 2362     		str	r3, [r4, #32]
 156 0044 37E0     		b	.L5
 157              	.LVL9:
 158              	.L2:
 127:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 159              		.loc 1 127 9 is_stmt 1 view .LVU56
 127:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 160              		.loc 1 127 73 is_stmt 0 view .LVU57
 161 0046 0023     		movs	r3, #0
 162 0048 C364     		str	r3, [r0, #76]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 21


 163 004a E3E7     		b	.L3
 164              	.LVL10:
 165              	.L13:
 202:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 166              		.loc 1 202 21 is_stmt 1 view .LVU58
 202:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 167              		.loc 1 202 56 is_stmt 0 view .LVU59
 168 004c 2F4B     		ldr	r3, .L15+4
 169              	.LVL11:
 202:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 170              		.loc 1 202 56 view .LVU60
 171 004e 43F82240 		str	r4, [r3, r2, lsl #2]
 172              	.LVL12:
 203:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   thread_ptr;
 173              		.loc 1 203 21 is_stmt 1 view .LVU61
 203:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   thread_ptr;
 174              		.loc 1 203 56 is_stmt 0 view .LVU62
 175 0052 2462     		str	r4, [r4, #32]
 204:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 176              		.loc 1 204 21 is_stmt 1 view .LVU63
 204:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 177              		.loc 1 204 60 is_stmt 0 view .LVU64
 178 0054 6462     		str	r4, [r4, #36]
 217:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | pr
 179              		.loc 1 217 21 is_stmt 1 view .LVU65
 180 0056 0123     		movs	r3, #1
 181 0058 03FA02F1 		lsl	r1, r3, r2
 182              	.LVL13:
 218:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 183              		.loc 1 218 21 view .LVU66
 218:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 184              		.loc 1 218 84 is_stmt 0 view .LVU67
 185 005c 2C48     		ldr	r0, .L15+8
 186 005e 0368     		ldr	r3, [r0]
 218:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 187              		.loc 1 218 96 view .LVU68
 188 0060 0B43     		orrs	r3, r3, r1
 218:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 189              		.loc 1 218 57 view .LVU69
 190 0062 0360     		str	r3, [r0]
 221:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 191              		.loc 1 221 21 is_stmt 1 view .LVU70
 221:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 192              		.loc 1 221 34 is_stmt 0 view .LVU71
 193 0064 2B4B     		ldr	r3, .L15+12
 194 0066 1B68     		ldr	r3, [r3]
 221:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 195              		.loc 1 221 24 view .LVU72
 196 0068 9342     		cmp	r3, r2
 197 006a 24D9     		bls	.L5
 227:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 198              		.loc 1 227 25 is_stmt 1 view .LVU73
 227:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 199              		.loc 1 227 53 is_stmt 0 view .LVU74
 200 006c 294B     		ldr	r3, .L15+12
 201 006e 1A60     		str	r2, [r3]
 231:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 22


 202              		.loc 1 231 25 is_stmt 1 view .LVU75
 231:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 203              		.loc 1 231 37 is_stmt 0 view .LVU76
 204 0070 294B     		ldr	r3, .L15+16
 205 0072 1B68     		ldr	r3, [r3]
 206              	.LVL14:
 234:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 207              		.loc 1 234 25 is_stmt 1 view .LVU77
 234:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 208              		.loc 1 234 28 is_stmt 0 view .LVU78
 209 0074 C3B1     		cbz	r3, .L14
 246:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 210              		.loc 1 246 29 is_stmt 1 view .LVU79
 246:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 211              		.loc 1 246 56 is_stmt 0 view .LVU80
 212 0076 DB6B     		ldr	r3, [r3, #60]
 213              	.LVL15:
 246:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 214              		.loc 1 246 32 view .LVU81
 215 0078 9342     		cmp	r3, r2
 216 007a 1CD9     		bls	.L5
 303:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 217              		.loc 1 303 33 is_stmt 1 view .LVU82
 303:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 218              		.loc 1 303 56 is_stmt 0 view .LVU83
 219 007c 264B     		ldr	r3, .L15+16
 220              	.LVL16:
 303:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 221              		.loc 1 303 56 view .LVU84
 222 007e 1C60     		str	r4, [r3]
 223              	.LVL17:
 351:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 224              		.loc 1 351 33 is_stmt 1 view .LVU85
 225              	.LBB44:
 226              	.LBI44:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 227              		.loc 2 556 55 view .LVU86
 228              	.LBB45:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 229              		.loc 2 562 5 view .LVU87
 230              		.syntax unified
 231              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 232 0080 85F31088 		MSR  PRIMASK,r5
 233              	@ 0 "" 2
 234              	.LVL18:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 235              		.loc 2 562 5 is_stmt 0 view .LVU88
 236              		.thumb
 237              		.syntax unified
 238              	.LBE45:
 239              	.LBE44:
 364:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (combined_flags == ((ULONG) 0))
 240              		.loc 1 364 33 is_stmt 1 view .LVU89
 241 0084 204B     		ldr	r3, .L15
 242 0086 1B68     		ldr	r3, [r3]
 243              	.LVL19:
 365:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 23


 244              		.loc 1 365 33 view .LVU90
 365:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 245              		.loc 1 365 36 is_stmt 0 view .LVU91
 246 0088 73BB     		cbnz	r3, .L1
 375:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 247              		.loc 1 375 37 is_stmt 1 view .LVU92
 248              	.LBB46:
 249              	.LBI46:
 578:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 579:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 580:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void _tx_thread_system_return_inline(void)
 250              		.loc 2 580 55 view .LVU93
 251              	.LBB47:
 581:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 582:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int interrupt_save;
 252              		.loc 2 582 1 view .LVU94
 583:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 584:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     /* Set PendSV to invoke ThreadX scheduler.  */
 585:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     *((ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
 253              		.loc 2 585 5 view .LVU95
 254              		.loc 2 585 29 is_stmt 0 view .LVU96
 255 008a 4FF0E023 		mov	r3, #-536813568
 256              	.LVL20:
 257              		.loc 2 585 29 view .LVU97
 258 008e 4FF08052 		mov	r2, #268435456
 259              	.LVL21:
 260              		.loc 2 585 29 view .LVU98
 261 0092 C3F8042D 		str	r2, [r3, #3332]
 262              	.LVL22:
 586:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 263              		.loc 2 586 5 is_stmt 1 view .LVU99
 264              	.LBB48:
 265              	.LBI48:
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 266              		.loc 2 474 63 view .LVU100
 267              	.LBB49:
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 268              		.loc 2 476 1 view .LVU101
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 269              		.loc 2 477 5 view .LVU102
 270              		.syntax unified
 271              	@ 477 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 272 0096 EFF30583 		 MRS  r3,IPSR 
 273              	@ 0 "" 2
 274              	.LVL23:
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 275              		.loc 2 478 5 view .LVU103
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 276              		.loc 2 478 5 is_stmt 0 view .LVU104
 277              		.thumb
 278              		.syntax unified
 279              	.LBE49:
 280              	.LBE48:
 281              		.loc 2 586 8 view .LVU105
 282 009a 2BBB     		cbnz	r3, .L1
 587:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     {
 588:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****         interrupt_save = __get_interrupt_posture();
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 24


 283              		.loc 2 588 9 is_stmt 1 view .LVU106
 284              	.LBB50:
 285              	.LBI50:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 286              		.loc 2 533 63 view .LVU107
 287              	.LBB51:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 288              		.loc 2 535 1 view .LVU108
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 289              		.loc 2 539 5 view .LVU109
 290              		.syntax unified
 291              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 292 009c EFF31083 		MRS  r3, PRIMASK 
 293              	@ 0 "" 2
 294              	.LVL24:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 295              		.loc 2 541 5 view .LVU110
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 296              		.loc 2 541 5 is_stmt 0 view .LVU111
 297              		.thumb
 298              		.syntax unified
 299              	.LBE51:
 300              	.LBE50:
 589:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 590:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****         __set_basepri_value(0);
 591:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 592:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****         __enable_interrupts();
 301              		.loc 2 592 9 is_stmt 1 view .LVU112
 302              	.LBB52:
 303              	.LBI52:
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 304              		.loc 2 550 55 view .LVU113
 305              	.LBB53:
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 306              		.loc 2 552 5 view .LVU114
 307              		.syntax unified
 308              	@ 552 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 309 00a0 62B6     		CPSIE  i
 310              	@ 0 "" 2
 311              		.thumb
 312              		.syntax unified
 313              	.LBE53:
 314              	.LBE52:
 593:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 594:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****         __restore_interrupt(interrupt_save);
 315              		.loc 2 594 9 view .LVU115
 316              	.LVL25:
 317              	.LBB54:
 318              	.LBI54:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 319              		.loc 2 556 55 view .LVU116
 320              	.LBB55:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 321              		.loc 2 562 5 view .LVU117
 322              		.syntax unified
 323              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 324 00a2 83F31088 		MSR  PRIMASK,r3
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 25


 325              	@ 0 "" 2
 326              	.LVL26:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 327              		.loc 2 562 5 is_stmt 0 view .LVU118
 328              		.thumb
 329              		.syntax unified
 330              	.LBE55:
 331              	.LBE54:
 332              	.LBE47:
 333              	.LBE46:
 379:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 334              		.loc 1 379 33 is_stmt 1 view .LVU119
 335 00a6 1FE0     		b	.L1
 336              	.LVL27:
 337              	.L14:
 238:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 338              		.loc 1 238 29 view .LVU120
 238:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 339              		.loc 1 238 52 is_stmt 0 view .LVU121
 340 00a8 1B4B     		ldr	r3, .L15+16
 341              	.LVL28:
 238:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 342              		.loc 1 238 52 view .LVU122
 343 00aa 1C60     		str	r4, [r3]
 344              	.LVL29:
 238:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 345              		.loc 1 238 52 view .LVU123
 346 00ac 03E0     		b	.L5
 347              	.LVL30:
 348              	.L6:
 396:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 397:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             }
 398:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 399:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Else, delayed suspend flag was set.  */
 400:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             else
 401:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 402:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 403:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Clear the delayed suspend flag and change the state.  */
 404:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
 349              		.loc 1 404 17 is_stmt 1 view .LVU124
 350              		.loc 1 404 57 is_stmt 0 view .LVU125
 351 00ae 0023     		movs	r3, #0
 352 00b0 6363     		str	r3, [r4, #52]
 405:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 353              		.loc 1 405 17 is_stmt 1 view .LVU126
 354              		.loc 1 405 47 is_stmt 0 view .LVU127
 355 00b2 0323     		movs	r3, #3
 356 00b4 2363     		str	r3, [r4, #48]
 357              	.L5:
 406:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             }
 407:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 408:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 409:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     else
 410:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 411:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 412:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* A resumption occurred in the middle of a previous thread suspension.  */
 413:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 26


 414:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Make sure the type of suspension under way is not a terminate or
 415:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            thread completion.  In either of these cases, do not void the
 416:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            interrupted suspension processing.  */
 417:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (thread_ptr -> tx_thread_state != TX_COMPLETED)
 418:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 419:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 420:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Make sure the thread isn't terminated.  */
 421:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             if (thread_ptr -> tx_thread_state != TX_TERMINATED)
 422:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 423:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 424:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* No, now check to see if the delayed suspension flag is set.  */
 425:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
 426:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 427:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 428:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Clear the suspending flag.  */
 429:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_suspending =   TX_FALSE;
 430:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 431:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Restore the state to ready.  */
 432:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =        TX_READY;
 433:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 434:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Thread state change.  */
 435:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_THREAD_STATE_CHANGE(thread_ptr, TX_READY)
 436:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 437:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Log the thread status change.  */
 438:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)
 439:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 440:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 else
 441:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 442:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 443:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Clear the delayed suspend flag and change the state.  */
 444:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
 445:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 446:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 447:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 448:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 449:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 450:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment the total number of thread resumptions.  */
 451:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 _tx_thread_performance_resume_count++;
 452:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 453:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment this thread's resume count.  */
 454:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_performance_resume_count++;
 455:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 456:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             }
 457:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 458:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 459:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 460:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 461:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 462:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Is the execute pointer different?  */
 463:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread
 464:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 465:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 466:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Move to next entry.  */
 467:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         _tx_thread_performance__execute_log_index++;
 468:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 469:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Check for wrap condition.  */
 470:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 27


 471:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 472:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 473:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Set the index to the beginning.  */
 474:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             _tx_thread_performance__execute_log_index =  ((UINT) 0);
 475:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 476:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 477:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Log the new execute pointer.  */
 478:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread
 479:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 480:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 481:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 482:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 483:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 484:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Check that the event time stamp is unchanged.  A different
 485:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        timestamp means that a later event wrote over the thread
 486:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        resume event. In that case, do nothing here.  */
 487:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (entry_ptr != TX_NULL)
 488:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 489:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 490:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Is the timestamp the same?  */
 491:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (time_stamp == entry_ptr -> tx_trace_buffer_entry_time_stamp)
 492:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 493:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 494:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Timestamp is the same, set the "next thread pointer" to NULL. This can
 495:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                be used by the trace analysis tool to show idle system conditions.  */
 496:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_MISRA_ENABLE
 497:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             entry_ptr -> tx_trace_buffer_entry_info_4 =  TX_POINTER_TO_ULONG_CONVERT(_tx_thread_exe
 498:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #else
 499:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             entry_ptr -> tx_trace_buffer_entry_information_field_4 =  TX_POINTER_TO_ULONG_CONVERT(_
 500:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 501:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 502:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 503:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 504:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 505:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Pickup thread pointer.  */
 506:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_THREAD_GET_CURRENT(current_thread)
 358              		.loc 1 506 5 is_stmt 1 view .LVU128
 359 00b6 194B     		ldr	r3, .L15+20
 360 00b8 1B68     		ldr	r3, [r3]
 361              	.LVL31:
 507:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 508:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Restore interrupts.  */
 509:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_RESTORE
 362              		.loc 1 509 5 view .LVU129
 363              	.LBB56:
 364              	.LBI56:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 365              		.loc 2 556 55 view .LVU130
 366              	.LBB57:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 367              		.loc 2 562 5 view .LVU131
 368              		.syntax unified
 369              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 370 00ba 85F31088 		MSR  PRIMASK,r5
 371              	@ 0 "" 2
 372              	.LVL32:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 28


 373              		.loc 2 562 5 is_stmt 0 view .LVU132
 374              		.thumb
 375              		.syntax unified
 376              	.LBE57:
 377              	.LBE56:
 510:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 511:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Determine if a preemption condition is present.  */
 512:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (current_thread != _tx_thread_execute_ptr)
 378              		.loc 1 512 5 is_stmt 1 view .LVU133
 379              		.loc 1 512 24 is_stmt 0 view .LVU134
 380 00be 164A     		ldr	r2, .L15+16
 381 00c0 1268     		ldr	r2, [r2]
 382              		.loc 1 512 8 view .LVU135
 383 00c2 9A42     		cmp	r2, r3
 384 00c4 10D0     		beq	.L1
 513:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 514:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 515:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_STACK_CHECKING
 516:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 517:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Pickup the next execute pointer.  */
 518:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         thread_ptr =  _tx_thread_execute_ptr;
 519:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 520:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Check this thread's stack.  */
 521:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         TX_THREAD_STACK_CHECK(thread_ptr)
 522:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 523:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 524:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Now determine if preemption should take place. This is only possible if the current thre
 525:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            not the same as the execute thread pointer AND the system state and preempt disable flag
 526:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
 385              		.loc 1 526 9 is_stmt 1 view .LVU136
 386 00c6 104B     		ldr	r3, .L15
 387              	.LVL33:
 388              		.loc 1 526 9 is_stmt 0 view .LVU137
 389 00c8 1B68     		ldr	r3, [r3]
 390              	.LVL34:
 527:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (combined_flags == ((ULONG) 0))
 391              		.loc 1 527 9 is_stmt 1 view .LVU138
 392              		.loc 1 527 12 is_stmt 0 view .LVU139
 393 00ca 6BB9     		cbnz	r3, .L1
 528:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 529:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 530:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 531:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 532:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* There is another thread ready to run and will be scheduled upon return.  */
 533:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             _tx_thread_performance_non_idle_return_count++;
 534:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 535:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 536:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Preemption is needed - return to the system!  */
 537:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             _tx_thread_system_return();
 394              		.loc 1 537 13 is_stmt 1 view .LVU140
 395              	.LBB58:
 396              	.LBI58:
 580:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 397              		.loc 2 580 55 view .LVU141
 398              	.LBB59:
 582:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 399              		.loc 2 582 1 view .LVU142
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 29


 585:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 400              		.loc 2 585 5 view .LVU143
 585:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 401              		.loc 2 585 29 is_stmt 0 view .LVU144
 402 00cc 4FF0E023 		mov	r3, #-536813568
 403              	.LVL35:
 585:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 404              		.loc 2 585 29 view .LVU145
 405 00d0 4FF08052 		mov	r2, #268435456
 406 00d4 C3F8042D 		str	r2, [r3, #3332]
 407              	.LVL36:
 586:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     {
 408              		.loc 2 586 5 is_stmt 1 view .LVU146
 409              	.LBB60:
 410              	.LBI60:
 474:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 411              		.loc 2 474 63 view .LVU147
 412              	.LBB61:
 476:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 413              		.loc 2 476 1 view .LVU148
 477:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 414              		.loc 2 477 5 view .LVU149
 415              		.syntax unified
 416              	@ 477 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 417 00d8 EFF30583 		 MRS  r3,IPSR 
 418              	@ 0 "" 2
 419              	.LVL37:
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 420              		.loc 2 478 5 view .LVU150
 478:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 421              		.loc 2 478 5 is_stmt 0 view .LVU151
 422              		.thumb
 423              		.syntax unified
 424              	.LBE61:
 425              	.LBE60:
 586:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     {
 426              		.loc 2 586 8 view .LVU152
 427 00dc 23B9     		cbnz	r3, .L1
 588:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 428              		.loc 2 588 9 is_stmt 1 view .LVU153
 429              	.LBB62:
 430              	.LBI62:
 533:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 431              		.loc 2 533 63 view .LVU154
 432              	.LBB63:
 535:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 433              		.loc 2 535 1 view .LVU155
 539:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 434              		.loc 2 539 5 view .LVU156
 435              		.syntax unified
 436              	@ 539 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 437 00de EFF31083 		MRS  r3, PRIMASK 
 438              	@ 0 "" 2
 439              	.LVL38:
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 440              		.loc 2 541 5 view .LVU157
 541:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 30


 441              		.loc 2 541 5 is_stmt 0 view .LVU158
 442              		.thumb
 443              		.syntax unified
 444              	.LBE63:
 445              	.LBE62:
 592:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 446              		.loc 2 592 9 is_stmt 1 view .LVU159
 447              	.LBB64:
 448              	.LBI64:
 550:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 449              		.loc 2 550 55 view .LVU160
 450              	.LBB65:
 552:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 451              		.loc 2 552 5 view .LVU161
 452              		.syntax unified
 453              	@ 552 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 454 00e2 62B6     		CPSIE  i
 455              	@ 0 "" 2
 456              		.thumb
 457              		.syntax unified
 458              	.LBE65:
 459              	.LBE64:
 460              		.loc 2 594 9 view .LVU162
 461              	.LVL39:
 462              	.LBB66:
 463              	.LBI66:
 556:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 464              		.loc 2 556 55 view .LVU163
 465              	.LBB67:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 466              		.loc 2 562 5 view .LVU164
 467              		.syntax unified
 468              	@ 562 "./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 469 00e4 83F31088 		MSR  PRIMASK,r3
 470              	@ 0 "" 2
 471              	.LVL40:
 472              		.thumb
 473              		.syntax unified
 474              	.L1:
 562:./Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 475              		.loc 2 562 5 is_stmt 0 view .LVU165
 476              	.LBE67:
 477              	.LBE66:
 478              	.LBE59:
 479              	.LBE58:
 538:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 539:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 540:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** }
 480              		.loc 1 540 1 view .LVU166
 481 00e8 38BD     		pop	{r3, r4, r5, pc}
 482              	.LVL41:
 483              	.L4:
 417:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 484              		.loc 1 417 9 is_stmt 1 view .LVU167
 417:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 485              		.loc 1 417 24 is_stmt 0 view .LVU168
 486 00ea 236B     		ldr	r3, [r4, #48]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 31


 417:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 487              		.loc 1 417 12 view .LVU169
 488 00ec 012B     		cmp	r3, #1
 489 00ee E2D0     		beq	.L5
 421:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 490              		.loc 1 421 13 is_stmt 1 view .LVU170
 421:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 491              		.loc 1 421 16 is_stmt 0 view .LVU171
 492 00f0 022B     		cmp	r3, #2
 493 00f2 E0D0     		beq	.L5
 425:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 494              		.loc 1 425 17 is_stmt 1 view .LVU172
 425:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 495              		.loc 1 425 32 is_stmt 0 view .LVU173
 496 00f4 636B     		ldr	r3, [r4, #52]
 425:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 497              		.loc 1 425 20 view .LVU174
 498 00f6 13B9     		cbnz	r3, .L11
 429:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 499              		.loc 1 429 21 is_stmt 1 view .LVU175
 429:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 500              		.loc 1 429 56 is_stmt 0 view .LVU176
 501 00f8 A363     		str	r3, [r4, #56]
 432:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 502              		.loc 1 432 21 is_stmt 1 view .LVU177
 432:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 503              		.loc 1 432 51 is_stmt 0 view .LVU178
 504 00fa 2363     		str	r3, [r4, #48]
 505 00fc DBE7     		b	.L5
 506              	.L11:
 444:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 507              		.loc 1 444 21 is_stmt 1 view .LVU179
 444:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 508              		.loc 1 444 61 is_stmt 0 view .LVU180
 509 00fe 0023     		movs	r3, #0
 510 0100 6363     		str	r3, [r4, #52]
 445:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 511              		.loc 1 445 21 is_stmt 1 view .LVU181
 445:./Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 512              		.loc 1 445 51 is_stmt 0 view .LVU182
 513 0102 0323     		movs	r3, #3
 514 0104 2363     		str	r3, [r4, #48]
 515 0106 D6E7     		b	.L5
 516              	.L16:
 517              		.align	2
 518              	.L15:
 519 0108 00000000 		.word	_tx_thread_preempt_disable
 520 010c 00000000 		.word	_tx_thread_priority_list
 521 0110 00000000 		.word	_tx_thread_priority_maps
 522 0114 00000000 		.word	_tx_thread_highest_priority
 523 0118 00000000 		.word	_tx_thread_execute_ptr
 524 011c 00000000 		.word	_tx_thread_current_ptr
 525              		.cfi_endproc
 526              	.LFE8:
 528              		.text
 529              	.Letext0:
 530              		.file 3 "./Middlewares/ST/threadx/common/inc/tx_api.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 32


 531              		.file 4 "./Middlewares/ST/threadx/common/inc/tx_thread.h"
 532              		.file 5 "./Middlewares/ST/threadx/common/inc/tx_timer.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 tx_thread_system_resume.c
C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s:20     .text._tx_thread_system_resume:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s:26     .text._tx_thread_system_resume:00000000 _tx_thread_system_resume
C:\Users\Dennis\AppData\Local\Temp\cct6dOKc.s:519    .text._tx_thread_system_resume:00000108 $d

UNDEFINED SYMBOLS
_tx_timer_system_deactivate
_tx_thread_preempt_disable
_tx_thread_priority_list
_tx_thread_priority_maps
_tx_thread_highest_priority
_tx_thread_execute_ptr
_tx_thread_current_ptr
