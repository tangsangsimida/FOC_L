


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "tx_initialize_low_level.s"
    1 00000000         ; 
    2 00000000         ; 
    3 00000000         ; 
    4 00000000         ; 
    5 00000000         ; 
    6 00000000         ; 
    7 00000000         ; 
    8 00000000         ; 
    9 00000000         ; 
   10 00000000         ; 
   11 00000000         ;
   12 00000000         ;
   13 00000000         ; 
   14 00000000         ; 
   15 00000000         ; 
   16 00000000         ; 
   17 00000000         ; 
   18 00000000         ; 
   19 00000000         ; 
   20 00000000         ; 
   21 00000000         ; 
   22 00000000         ;
   23 00000000         ;#define TX_SOURCE_CODE
   24 00000000         ;
   25 00000000         ;
   26 00000000         ; 
   27 00000000         ;
   28 00000000         ;#include "tx_api.h"
   29 00000000         ;#include "tx_initialize.h"
   30 00000000         ;#include "tx_thread.h"
   31 00000000         ;#include "tx_timer.h"
   32 00000000         ;
   33 00000000         ;
   34 00000000                 IMPORT           _tx_thread_system_stack_ptr
   35 00000000                 IMPORT           _tx_initialize_unused_memory
   36 00000000                 IMPORT           _tx_thread_context_save
   37 00000000                 IMPORT           _tx_thread_context_restore
   38 00000000                 IMPORT           _tx_timer_interrupt
   39 00000000                 IMPORT           __main
   40 00000000                 IMPORT           |Image$$RO$$Limit|
   41 00000000                 IMPORT           |Image$$RW$$Base|
   42 00000000                 IMPORT           |Image$$ZI$$Base|
   43 00000000                 IMPORT           |Image$$ZI$$Limit|
   44 00000000                 IMPORT           __tx_PendSVHandler
   45 00000000         ;
   46 00000000         ;
   47 00000000 005B8D80 
                       SYSTEM_CLOCK
                               EQU              6000000
   48 00000000 0000EA5F 
                       SYSTICK_CYCLES
                               EQU              ((SYSTEM_CLOCK / 100) -1)
   49 00000000         ;
   50 00000000         ;
   51 00000000         ; 
   52 00000000         ;
   53 00000000 00000400 
                       STACK_SIZE



ARM Macro Assembler    Page 2 


                               EQU              0x00000400
   54 00000000 00000000 
                       HEAP_SIZE
                               EQU              0x00000000
   55 00000000         
   56 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   57 00000000         StackMem
   58 00000000                 SPACE            STACK_SIZE
   59 00000400         __initial_sp
   60 00000400         
   61 00000400         
   62 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   63 00000000         __heap_base
   64 00000000         HeapMem
   65 00000000                 SPACE            HEAP_SIZE
   66 00000000         __heap_limit
   67 00000000         
   68 00000000         
   69 00000000                 AREA             RESET, CODE, READONLY
   70 00000000         ;
   71 00000000                 EXPORT           __tx_vectors
   72 00000000         __tx_vectors
   73 00000000 00000000        DCD              __initial_sp ; Reset and system
                                                             stack ptr
   74 00000004 00000000        DCD              Reset_Handler ; Reset goes to s
                                                            tartup function
   75 00000008 00000000        DCD              __tx_NMIHandler ; NMI
   76 0000000C 00000000        DCD              __tx_BadHandler ; HardFault
   77 00000010 00000000        DCD              0           ; MemManage
   78 00000014 00000000        DCD              0           ; BusFault
   79 00000018 00000000        DCD              0           ; UsageFault
   80 0000001C 00000000        DCD              0           ; 7
   81 00000020 00000000        DCD              0           ; 8
   82 00000024 00000000        DCD              0           ; 9
   83 00000028 00000000        DCD              0           ; 10
   84 0000002C 00000000        DCD              __tx_SVCallHandler ; SVCall
   85 00000030 00000000        DCD              __tx_DBGHandler ; Monitor
   86 00000034 00000000        DCD              0           ; 13
   87 00000038 00000000        DCD              __tx_PendSVHandler ; PendSV
   88 0000003C 00000000        DCD              __tx_SysTickHandler ; SysTick
   89 00000040 00000000        DCD              __tx_IntHandler ; Int 0
   90 00000044 00000000        DCD              __tx_IntHandler ; Int 1
   91 00000048 00000000        DCD              __tx_IntHandler ; Int 2
   92 0000004C 00000000        DCD              __tx_IntHandler ; Int 3
   93 00000050         
   94 00000050         ;
   95 00000050         ;
   96 00000050                 AREA             ||.text||, CODE, READONLY
   97 00000000                 EXPORT           Reset_Handler
   98 00000000         Reset_Handler
   99 00000000 B672            CPSID            i
  100 00000002                 IF               {TARGET_FPU_VFP} = {TRUE}
  101 00000002 4820            LDR              r0, =0xE000ED88 ; Pickup addres
                                                            s of CPACR
  102 00000004 6801            LDR              r1, [r0]    ; Pickup CPACR
  103 00000006 F240 0200 
              F2C0 02F0        MOV32            r2, 0x00F00000 ; Build enable v



ARM Macro Assembler    Page 3 


                                                            alue
  104 0000000E EA41 0102       ORR              r1, r1, r2  ; Or in enable valu
                                                            e
  105 00000012 6001            STR              r1, [r0]    ; Setup CPACR
  106 00000014                 ENDIF
  107 00000014 481C            LDR              r0, =__main
  108 00000016 4700            BX               r0
  109 00000018         
  110 00000018         
  111 00000018         ; 
  112 00000018         ; 
  113 00000018         ; 
  114 00000018         ; 
  115 00000018         ; 
  116 00000018         ; 
  117 00000018         ; 
  118 00000018         ; 
  119 00000018         ; 
  120 00000018         ; 
  121 00000018         ; 
  122 00000018         ; 
  123 00000018         ; 
  124 00000018         ; 
  125 00000018         ; 
  126 00000018         ; 
  127 00000018         ; 
  128 00000018         ; 
  129 00000018         ; 
  130 00000018         ; 
  131 00000018         ; 
  132 00000018         ; 
  133 00000018         ; 
  134 00000018         ; 
  135 00000018         ; 
  136 00000018         ; 
  137 00000018         ; 
  138 00000018         ; 
  139 00000018         ; 
  140 00000018         ; 
  141 00000018         ; 
  142 00000018         ; 
  143 00000018         ; 
  144 00000018         ; 
  145 00000018         ; 
  146 00000018         ; 
  147 00000018         ; 
  148 00000018         ; 
  149 00000018         ; 
  150 00000018         ; 
  151 00000018         ; 
  152 00000018         ;VOID   _tx_initialize_low_level(VOID)
  153 00000018         ;{
  154 00000018                 EXPORT           _tx_initialize_low_level
  155 00000018         _tx_initialize_low_level
  156 00000018         ;
  157 00000018         ;     
  158 00000018         ;
  159 00000018 B672            CPSID            i
  160 0000001A         ;



ARM Macro Assembler    Page 4 


  161 0000001A         ;     
  162 0000001A         ;
  163 0000001A 481C            LDR              r0, =_tx_initialize_unused_memo
ry 
                                                            ; Build address of 
                                                            unused memory point
                                                            er
  164 0000001C 491C            LDR              r1, =|Image$$ZI$$Limit| ; Build
                                                             first free address
                                                            
  165 0000001E F101 0104       ADD              r1, r1, #4  ;
  166 00000022 6001            STR              r1, [r0]    ; Setup first unuse
                                                            d memory pointer
  167 00000024         ;
  168 00000024         ;     
  169 00000024         ;
  170 00000024 F04F 20E0       MOV              r0, #0xE000E000 ; Build address
                                                             of NVIC registers
  171 00000028 491A            LDR              r1, =__tx_vectors ; Pickup addr
                                                            ess of vector table
                                                            
  172 0000002A F8C0 1D08       STR              r1, [r0, #0xD08] ; Set vector t
                                                            able address
  173 0000002E         ;
  174 0000002E         ;     
  175 0000002E         ;
  176 0000002E         ;    LDR     r0, =0xE0001000                         ; B
                       uild address of DWT register
  177 0000002E         ;    LDR     r1, [r0]                                ; P
                       ickup the current value
  178 0000002E         ;    ORR     r1, r1, #1                              ; S
                       et the CYCCNTENA bit
  179 0000002E         ;    STR     r1, [r0]                                ; E
                       nable the cycle count register
  180 0000002E         ;
  181 0000002E         ;     
  182 0000002E         ;
  183 0000002E 481A            LDR              r0, =_tx_thread_system_stack_pt
r 
                                                            ; Build address of 
                                                            system stack pointe
                                                            r
  184 00000030 4918            LDR              r1, =__tx_vectors ; Pickup addr
                                                            ess of vector table
                                                            
  185 00000032 6809            LDR              r1, [r1]    ; Pickup reset stac
                                                            k pointer
  186 00000034 6001            STR              r1, [r0]    ; Save system stack
                                                             pointer
  187 00000036         ;
  188 00000036         ;     
  189 00000036         ;
  190 00000036 F04F 20E0       MOV              r0, #0xE000E000 ; Build address
                                                             of NVIC registers
  191 0000003A F64E 215F       LDR              r1, =SYSTICK_CYCLES
  192 0000003E 6141            STR              r1, [r0, #0x14] ; Setup SysTick
                                                             Reload Value
  193 00000040 F04F 0107       MOV              r1, #0x7    ; Build SysTick Con
                                                            trol Enable Value



ARM Macro Assembler    Page 5 


  194 00000044 6101            STR              r1, [r0, #0x10] ; Setup SysTick
                                                             Control
  195 00000046         ;
  196 00000046         ;     
  197 00000046         ;
  198 00000046 F04F 0100       LDR              r1, =0x00000000 ; Rsrv, UsgF, B
                                                            usF, MemM
  199 0000004A F8C0 1D18       STR              r1, [r0, #0xD18] ; Setup System
                                                             Handlers 4-7 Prior
                                                            ity Registers
  200 0000004E         
  201 0000004E F04F 417F       LDR              r1, =0xFF000000 ; SVCl, Rsrv, R
                                                            srv, Rsrv
  202 00000052 F8C0 1D1C       STR              r1, [r0, #0xD1C] ; Setup System
                                                             Handlers 8-11 Prio
                                                            rity Registers
  203 00000056         ; Note: SVC must be lowest priority, which is 0xFF
  204 00000056         
  205 00000056 4911            LDR              r1, =0x40FF0000 ; SysT, PnSV, R
                                                            srv, DbgM
  206 00000058 F8C0 1D20       STR              r1, [r0, #0xD20] ; Setup System
                                                             Handlers 12-15 Pri
                                                            ority Registers
  207 0000005C         ; Note: PnSV must be lowest priority, which is 0xFF
  208 0000005C         ;
  209 0000005C         ;     
  210 0000005C         ;
  211 0000005C 4770            BX               lr
  212 0000005E         ;}
  213 0000005E         ;
  214 0000005E         ;
  215 0000005E         ;
  216 0000005E         
  217 0000005E         ;
  218 0000005E                 EXPORT           __user_initial_stackheap
  219 0000005E         __user_initial_stackheap
  220 0000005E 4810            LDR              r0, =HeapMem
  221 00000060 4910            LDR              r1, =(StackMem + STACK_SIZE)
  222 00000062 4A0F            LDR              r2, =(HeapMem + HEAP_SIZE)
  223 00000064 4B10            LDR              r3, =StackMem
  224 00000066 4770            BX               lr
  225 00000068         ;
  226 00000068         ;
  227 00000068         ; 
  228 00000068         ;
  229 00000068                 EXPORT           __tx_BadHandler
  230 00000068         __tx_BadHandler
  231 00000068 E7FE            B                __tx_BadHandler
  232 0000006A         
  233 0000006A                 EXPORT           __tx_SVCallHandler
  234 0000006A         __tx_SVCallHandler
  235 0000006A E7FE            B                __tx_SVCallHandler
  236 0000006C         
  237 0000006C                 EXPORT           __tx_IntHandler
  238 0000006C         __tx_IntHandler
  239 0000006C         ; VOID InterruptHandler (VOID)
  240 0000006C         ; {
  241 0000006C B501            PUSH             {r0, lr}
  242 0000006E         



ARM Macro Assembler    Page 6 


  243 0000006E         ;     
  244 0000006E         ;     
  245 0000006E         
  246 0000006E E8BD 4001       POP              {r0, lr}
  247 00000072 4770            BX               LR
  248 00000074         ; }
  249 00000074         
  250 00000074                 EXPORT           __tx_SysTickHandler
  251 00000074         __tx_SysTickHandler
  252 00000074         ; VOID TimerInterruptHandler (VOID)
  253 00000074         ; {
  254 00000074         ;
  255 00000074 B501            PUSH             {r0, lr}
  256 00000076 F7FF FFFE       BL               _tx_timer_interrupt
  257 0000007A E8BD 4001       POP              {r0, lr}
  258 0000007E 4770            BX               LR
  259 00000080         ; }
  260 00000080         
  261 00000080                 EXPORT           __tx_NMIHandler
  262 00000080         __tx_NMIHandler
  263 00000080 E7FE            B                __tx_NMIHandler
  264 00000082         
  265 00000082                 EXPORT           __tx_DBGHandler
  266 00000082         __tx_DBGHandler
  267 00000082 E7FE            B                __tx_DBGHandler
  268 00000084         
  269 00000084                 ALIGN
  270 00000084 E000ED88 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              40FF0000 
              00000000 
              00000400 
              00000000         LTORG
  271 000000AC                 END
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=.\tx_initialize_low_level.d -o.\tx_initialize_low_le
vel.o -I.\RTE\_ThreadX_Demo -ID:\software\keil5\ARM\PACK\Keil\STM32F4xx_DFP\2.1
7.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\software\keil5\ARM\CMSIS\Inc
lude --predefine="__UVISION_VERSION SETA 524" --predefine="STM32F407xx SETA 1" 
--list=.\tx_initialize_low_level.lst tx_initialize_low_level.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 56 in file tx_initialize_low_level.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 57 in file tx_initialize_low_level.s
   Uses
      At line 221 in file tx_initialize_low_level.s
      At line 223 in file tx_initialize_low_level.s

__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 59 in file tx_initialize_low_level.s
   Uses
      At line 73 in file tx_initialize_low_level.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 62 in file tx_initialize_low_level.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 64 in file tx_initialize_low_level.s
   Uses
      At line 220 in file tx_initialize_low_level.s
      At line 222 in file tx_initialize_low_level.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 63 in file tx_initialize_low_level.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 66 in file tx_initialize_low_level.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 69 in file tx_initialize_low_level.s
   Uses
      None
Comment: RESET unused
__tx_vectors 00000000

Symbol: __tx_vectors
   Definitions
      At line 72 in file tx_initialize_low_level.s
   Uses
      At line 71 in file tx_initialize_low_level.s
      At line 171 in file tx_initialize_low_level.s
      At line 184 in file tx_initialize_low_level.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 98 in file tx_initialize_low_level.s
   Uses
      At line 74 in file tx_initialize_low_level.s
      At line 97 in file tx_initialize_low_level.s

__tx_BadHandler 00000068

Symbol: __tx_BadHandler
   Definitions
      At line 230 in file tx_initialize_low_level.s
   Uses
      At line 76 in file tx_initialize_low_level.s
      At line 229 in file tx_initialize_low_level.s
      At line 231 in file tx_initialize_low_level.s

__tx_DBGHandler 00000082

Symbol: __tx_DBGHandler
   Definitions
      At line 266 in file tx_initialize_low_level.s
   Uses
      At line 85 in file tx_initialize_low_level.s
      At line 265 in file tx_initialize_low_level.s
      At line 267 in file tx_initialize_low_level.s

__tx_IntHandler 0000006C

Symbol: __tx_IntHandler
   Definitions
      At line 238 in file tx_initialize_low_level.s
   Uses
      At line 89 in file tx_initialize_low_level.s
      At line 90 in file tx_initialize_low_level.s
      At line 91 in file tx_initialize_low_level.s
      At line 92 in file tx_initialize_low_level.s
      At line 237 in file tx_initialize_low_level.s

__tx_NMIHandler 00000080

Symbol: __tx_NMIHandler
   Definitions
      At line 262 in file tx_initialize_low_level.s
   Uses
      At line 75 in file tx_initialize_low_level.s
      At line 261 in file tx_initialize_low_level.s
      At line 263 in file tx_initialize_low_level.s

__tx_SVCallHandler 0000006A

Symbol: __tx_SVCallHandler
   Definitions
      At line 234 in file tx_initialize_low_level.s
   Uses
      At line 84 in file tx_initialize_low_level.s
      At line 233 in file tx_initialize_low_level.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 235 in file tx_initialize_low_level.s

__tx_SysTickHandler 00000074

Symbol: __tx_SysTickHandler
   Definitions
      At line 251 in file tx_initialize_low_level.s
   Uses
      At line 88 in file tx_initialize_low_level.s
      At line 250 in file tx_initialize_low_level.s

__user_initial_stackheap 0000005E

Symbol: __user_initial_stackheap
   Definitions
      At line 219 in file tx_initialize_low_level.s
   Uses
      At line 218 in file tx_initialize_low_level.s
Comment: __user_initial_stackheap used once
_tx_initialize_low_level 00000018

Symbol: _tx_initialize_low_level
   Definitions
      At line 155 in file tx_initialize_low_level.s
   Uses
      At line 154 in file tx_initialize_low_level.s
Comment: _tx_initialize_low_level used once
|.text| 00000000

Symbol: |.text|
   Definitions
      At line 96 in file tx_initialize_low_level.s
   Uses
      None
Comment: |.text| unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

HEAP_SIZE 00000000

Symbol: HEAP_SIZE
   Definitions
      At line 54 in file tx_initialize_low_level.s
   Uses
      At line 65 in file tx_initialize_low_level.s
      At line 222 in file tx_initialize_low_level.s

STACK_SIZE 00000400

Symbol: STACK_SIZE
   Definitions
      At line 53 in file tx_initialize_low_level.s
   Uses
      At line 58 in file tx_initialize_low_level.s
      At line 221 in file tx_initialize_low_level.s

SYSTEM_CLOCK 005B8D80

Symbol: SYSTEM_CLOCK
   Definitions
      At line 47 in file tx_initialize_low_level.s
   Uses
      At line 48 in file tx_initialize_low_level.s
Comment: SYSTEM_CLOCK used once
SYSTICK_CYCLES 0000EA5F

Symbol: SYSTICK_CYCLES
   Definitions
      At line 48 in file tx_initialize_low_level.s
   Uses
      At line 191 in file tx_initialize_low_level.s
Comment: SYSTICK_CYCLES used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$RO$$Limit 00000000

Symbol: Image$$RO$$Limit
   Definitions
      At line 40 in file tx_initialize_low_level.s
   Uses
      None
Comment: Image$$RO$$Limit unused
Image$$RW$$Base 00000000

Symbol: Image$$RW$$Base
   Definitions
      At line 41 in file tx_initialize_low_level.s
   Uses
      None
Comment: Image$$RW$$Base unused
Image$$ZI$$Base 00000000

Symbol: Image$$ZI$$Base
   Definitions
      At line 42 in file tx_initialize_low_level.s
   Uses
      None
Comment: Image$$ZI$$Base unused
Image$$ZI$$Limit 00000000

Symbol: Image$$ZI$$Limit
   Definitions
      At line 43 in file tx_initialize_low_level.s
   Uses
      At line 164 in file tx_initialize_low_level.s
Comment: Image$$ZI$$Limit used once
__main 00000000

Symbol: __main
   Definitions
      At line 39 in file tx_initialize_low_level.s
   Uses
      At line 107 in file tx_initialize_low_level.s
Comment: __main used once
__tx_PendSVHandler 00000000

Symbol: __tx_PendSVHandler
   Definitions
      At line 44 in file tx_initialize_low_level.s
   Uses
      At line 87 in file tx_initialize_low_level.s
Comment: __tx_PendSVHandler used once
_tx_initialize_unused_memory 00000000

Symbol: _tx_initialize_unused_memory
   Definitions
      At line 35 in file tx_initialize_low_level.s
   Uses
      At line 163 in file tx_initialize_low_level.s
Comment: _tx_initialize_unused_memory used once
_tx_thread_context_restore 00000000

Symbol: _tx_thread_context_restore



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 37 in file tx_initialize_low_level.s
   Uses
      None
Comment: _tx_thread_context_restore unused
_tx_thread_context_save 00000000

Symbol: _tx_thread_context_save
   Definitions
      At line 36 in file tx_initialize_low_level.s
   Uses
      None
Comment: _tx_thread_context_save unused
_tx_thread_system_stack_ptr 00000000

Symbol: _tx_thread_system_stack_ptr
   Definitions
      At line 34 in file tx_initialize_low_level.s
   Uses
      At line 183 in file tx_initialize_low_level.s
Comment: _tx_thread_system_stack_ptr used once
_tx_timer_interrupt 00000000

Symbol: _tx_timer_interrupt
   Definitions
      At line 38 in file tx_initialize_low_level.s
   Uses
      At line 256 in file tx_initialize_low_level.s
Comment: _tx_timer_interrupt used once
11 symbols
369 symbols in table
