ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__io_putchar,"ax",%progbits
  20              		.align	1
  21              		.global	__io_putchar
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__io_putchar:
  27              	.LVL0:
  28              	.LFB223:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "crc.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "i2c.h"
  25:Core/Src/main.c **** #include "spi.h"
  26:Core/Src/main.c **** #include "tim.h"
  27:Core/Src/main.c **** #include "usart.h"
  28:Core/Src/main.c **** #include "gpio.h"
  29:Core/Src/main.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 2


  30:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** #include "as5600.h"
  35:Core/Src/main.c **** #include "ts_foc.h"
  36:Core/Src/main.c **** #include "lowpass_filter.h"
  37:Core/Src/main.c **** #include "pid.h"
  38:Core/Src/main.c **** #include "inlinecurrent.h"
  39:Core/Src/main.c **** #include "user_api.h"
  40:Core/Src/main.c **** #include "get_cmd.h"
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END Includes */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  46:Core/Src/main.c **** //Serial port redirection
  47:Core/Src/main.c **** #ifdef __GNUC__
  48:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  49:Core/Src/main.c **** #else
  50:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  51:Core/Src/main.c **** #endif
  52:Core/Src/main.c **** PUTCHAR_PROTOTYPE
  53:Core/Src/main.c **** {
  30              		.loc 1 53 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 53 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
  54:Core/Src/main.c ****     HAL_UART_Transmit(&huart1 , (uint8_t *)&ch, 1,2000);
  43              		.loc 1 54 5 is_stmt 1 view .LVU2
  44 0006 4FF4FA63 		mov	r3, #2000
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 54 5 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
  55:Core/Src/main.c ****     //重定向到对应的串口即可
  56:Core/Src/main.c ****     return ch;
  52              		.loc 1 56 5 is_stmt 1 view .LVU4
  57:Core/Src/main.c **** }
  53              		.loc 1 57 1 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 3


  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE223:
  67              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  68              		.align	1
  69              		.global	HAL_TIM_PeriodElapsedCallback
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	HAL_TIM_PeriodElapsedCallback:
  75              	.LVL3:
  76              	.LFB226:
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PTD */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN PD */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** float target_angle = 0; //目标角度
  65:Core/Src/main.c **** float target_torque = 0; //目标力矩
  66:Core/Src/main.c **** /* USER CODE END PD */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN PM */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PM */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE BEGIN PV */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PV */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  80:Core/Src/main.c **** void SystemClock_Config(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  86:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END 0 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /**
  91:Core/Src/main.c ****   * @brief  The application entry point.
  92:Core/Src/main.c ****   * @retval int
  93:Core/Src/main.c ****   */
  94:Core/Src/main.c **** int main(void)
  95:Core/Src/main.c **** {
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 4


  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_DMA_Init();
 120:Core/Src/main.c ****   MX_CRC_Init();
 121:Core/Src/main.c ****   MX_I2C1_Init();
 122:Core/Src/main.c ****   MX_USART1_UART_Init();
 123:Core/Src/main.c ****   MX_ADC1_Init();
 124:Core/Src/main.c ****   MX_TIM3_Init();
 125:Core/Src/main.c ****   MX_TIM2_Init();
 126:Core/Src/main.c ****   MX_SPI1_Init();
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   // HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buffer, 1); // Start ADC DMA
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1); // Start PWM timer
 133:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3); // Start PWM timer  
 134:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1); // Start PWM timer
 135:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2); // Start PWM timer
 136:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); // Start PWM timer
 137:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4); // Start PWM timer
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   Motor * motor1;
 143:Core/Src/main.c ****   motor1 = (Motor *)malloc(sizeof(Motor) * 1);
 144:Core/Src/main.c ****   motor1->Motor_ID = 1;
 145:Core/Src/main.c ****   motor1->PP = 7;  
 146:Core/Src/main.c ****   motor1->DIR = 1;
 147:Core/Src/main.c ****   motor1->As5600_Sensor = (As5600_Sensor_Typedef *)malloc(sizeof(As5600_Sensor_Typedef) * 1);
 148:Core/Src/main.c ****   motor1->As5600_Sensor->Rotations = 0;
 149:Core/Src/main.c ****   Read_AS5600_Angle(motor1->As5600_Sensor);
 150:Core/Src/main.c ****   motor1->Motor_Set_Compare1 = Motor1_Set_Compare1;
 151:Core/Src/main.c ****   motor1->Motor_Set_Compare2 = Motor1_Set_Compare2;
 152:Core/Src/main.c ****   motor1->Motor_Set_Compare3 = Motor1_Set_Compare3;
 153:Core/Src/main.c ****   motor1->voltage_power_supply = 12.0;
 154:Core/Src/main.c ****   motor1->zero_electric_angle = 0;
 155:Core/Src/main.c ****   motor1->Ualpha = motor1->Ubeta = motor1->Ua = motor1->Ub = motor1->Uc = 0;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 5


 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE END 2 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* Infinite loop */
 160:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 161:Core/Src/main.c ****   Read_AS5600_Angle(motor1->As5600_Sensor);
 162:Core/Src/main.c ****   //计算0电角度->后续规整到电机初始化当中
 163:Core/Src/main.c ****   setTorque(motor1,2, _3PI_2);
 164:Core/Src/main.c ****   HAL_Delay(1000);  
 165:Core/Src/main.c ****   Read_AS5600_Angle(motor1->As5600_Sensor);
 166:Core/Src/main.c ****   motor1->zero_electric_angle = _electricalAngle(motor1);
 167:Core/Src/main.c ****   setTorque(motor1,0, _3PI_2);
 168:Core/Src/main.c ****   printf("0电角度:%d\r\n",(int)(motor1->zero_electric_angle*1000));
 169:Core/Src/main.c ****   HAL_Delay(1000);
 170:Core/Src/main.c ****   printf("init_ok\r\n");
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   float Kp = 0.133; //位置环比例系数
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   while (1)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     // HAL_Delay(100);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****     Read_AS5600_Angle(motor1->As5600_Sensor);   // Read the angle of the AS5600 sensor
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     // printf("Angle:%d,圈数:%d\r\n",(int)(Get_AS5600_Angle(motor1->As5600_Sensor)*1000),(int)(mo
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     Get_Cmd(&huart1); //获取指令
 185:Core/Src/main.c ****     // setTorque(motor1, target_torque, _electricalAngle(motor1));   //力矩闭环
 186:Core/Src/main.c ****     setTorque(motor1,Kp*(target_angle-motor1->DIR*Get_AS5600_Angle(motor1->As5600_Sensor))*180./PI,
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****     /* USER CODE END WHILE */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE END 3 */
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief System Clock Configuration
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void SystemClock_Config(void)
 203:Core/Src/main.c **** {
 204:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 205:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 210:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 6


 213:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 99;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 232:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 236:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /* USER CODE END 4 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /**
 249:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 250:Core/Src/main.c ****   * @note   This function is called  when TIM11 interrupt took place, inside
 251:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 252:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 253:Core/Src/main.c ****   * @param  htim : TIM handle
 254:Core/Src/main.c ****   * @retval None
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 257:Core/Src/main.c **** {
  77              		.loc 1 257 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 257 1 is_stmt 0 view .LVU7
  82 0000 08B5     		push	{r3, lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
 258:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 259:Core/Src/main.c **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 7


 260:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 261:Core/Src/main.c ****   if (htim->Instance == TIM11) {
  87              		.loc 1 261 3 is_stmt 1 view .LVU8
  88              		.loc 1 261 11 is_stmt 0 view .LVU9
  89 0002 0268     		ldr	r2, [r0]
  90              		.loc 1 261 6 view .LVU10
  91 0004 034B     		ldr	r3, .L9
  92 0006 9A42     		cmp	r2, r3
  93 0008 00D0     		beq	.L8
  94              	.LVL4:
  95              	.L5:
 262:Core/Src/main.c ****     HAL_IncTick();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 267:Core/Src/main.c **** }
  96              		.loc 1 267 1 view .LVU11
  97 000a 08BD     		pop	{r3, pc}
  98              	.LVL5:
  99              	.L8:
 262:Core/Src/main.c ****     HAL_IncTick();
 100              		.loc 1 262 5 is_stmt 1 view .LVU12
 101 000c FFF7FEFF 		bl	HAL_IncTick
 102              	.LVL6:
 103              		.loc 1 267 1 is_stmt 0 view .LVU13
 104 0010 FBE7     		b	.L5
 105              	.L10:
 106 0012 00BF     		.align	2
 107              	.L9:
 108 0014 00480140 		.word	1073825792
 109              		.cfi_endproc
 110              	.LFE226:
 112              		.section	.text.Error_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	Error_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	Error_Handler:
 120              	.LFB227:
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /**
 270:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** void Error_Handler(void)
 274:Core/Src/main.c **** {
 121              		.loc 1 274 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 275:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 276:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 277:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 8


 127              		.loc 1 277 3 view .LVU15
 128              	.LBB4:
 129              	.LBI4:
 130              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 9


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 10


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 11


 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 12


 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 13


 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 14


 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 15


 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 16


 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 17


 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 18


 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 19


 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 20


 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 21


 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 22


 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 23


 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 24


 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 131              		.loc 2 960 27 view .LVU16
 132              	.LBB5:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 133              		.loc 2 962 3 view .LVU17
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 25


 134              		.syntax unified
 135              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 136 0000 72B6     		cpsid i
 137              	@ 0 "" 2
 138              		.thumb
 139              		.syntax unified
 140              	.L12:
 141              	.LBE5:
 142              	.LBE4:
 278:Core/Src/main.c ****   while (1)
 143              		.loc 1 278 3 discriminator 1 view .LVU18
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****   }
 144              		.loc 1 280 3 discriminator 1 view .LVU19
 278:Core/Src/main.c ****   while (1)
 145              		.loc 1 278 9 discriminator 1 view .LVU20
 146 0002 FEE7     		b	.L12
 147              		.cfi_endproc
 148              	.LFE227:
 150              		.section	.text.SystemClock_Config,"ax",%progbits
 151              		.align	1
 152              		.global	SystemClock_Config
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	SystemClock_Config:
 158              	.LFB225:
 203:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 159              		.loc 1 203 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 80
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 00B5     		push	{lr}
 164              	.LCFI4:
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 14, -4
 167 0002 95B0     		sub	sp, sp, #84
 168              	.LCFI5:
 169              		.cfi_def_cfa_offset 88
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 170              		.loc 1 204 3 view .LVU22
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171              		.loc 1 204 22 is_stmt 0 view .LVU23
 172 0004 3022     		movs	r2, #48
 173 0006 0021     		movs	r1, #0
 174 0008 08A8     		add	r0, sp, #32
 175 000a FFF7FEFF 		bl	memset
 176              	.LVL7:
 205:Core/Src/main.c **** 
 177              		.loc 1 205 3 is_stmt 1 view .LVU24
 205:Core/Src/main.c **** 
 178              		.loc 1 205 22 is_stmt 0 view .LVU25
 179 000e 0023     		movs	r3, #0
 180 0010 0393     		str	r3, [sp, #12]
 181 0012 0493     		str	r3, [sp, #16]
 182 0014 0593     		str	r3, [sp, #20]
 183 0016 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 26


 184 0018 0793     		str	r3, [sp, #28]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 185              		.loc 1 209 3 is_stmt 1 view .LVU26
 186              	.LBB6:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 187              		.loc 1 209 3 view .LVU27
 188 001a 0193     		str	r3, [sp, #4]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 189              		.loc 1 209 3 view .LVU28
 190 001c 1E4A     		ldr	r2, .L19
 191 001e 116C     		ldr	r1, [r2, #64]
 192 0020 41F08051 		orr	r1, r1, #268435456
 193 0024 1164     		str	r1, [r2, #64]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 194              		.loc 1 209 3 view .LVU29
 195 0026 126C     		ldr	r2, [r2, #64]
 196 0028 02F08052 		and	r2, r2, #268435456
 197 002c 0192     		str	r2, [sp, #4]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 198              		.loc 1 209 3 view .LVU30
 199 002e 019A     		ldr	r2, [sp, #4]
 200              	.LBE6:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 201              		.loc 1 209 3 view .LVU31
 210:Core/Src/main.c **** 
 202              		.loc 1 210 3 view .LVU32
 203              	.LBB7:
 210:Core/Src/main.c **** 
 204              		.loc 1 210 3 view .LVU33
 205 0030 0293     		str	r3, [sp, #8]
 210:Core/Src/main.c **** 
 206              		.loc 1 210 3 view .LVU34
 207 0032 1A4A     		ldr	r2, .L19+4
 208 0034 1168     		ldr	r1, [r2]
 209 0036 41F44041 		orr	r1, r1, #49152
 210 003a 1160     		str	r1, [r2]
 210:Core/Src/main.c **** 
 211              		.loc 1 210 3 view .LVU35
 212 003c 1268     		ldr	r2, [r2]
 213 003e 02F44042 		and	r2, r2, #49152
 214 0042 0292     		str	r2, [sp, #8]
 210:Core/Src/main.c **** 
 215              		.loc 1 210 3 view .LVU36
 216 0044 029A     		ldr	r2, [sp, #8]
 217              	.LBE7:
 210:Core/Src/main.c **** 
 218              		.loc 1 210 3 view .LVU37
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 219              		.loc 1 215 3 view .LVU38
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220              		.loc 1 215 36 is_stmt 0 view .LVU39
 221 0046 0222     		movs	r2, #2
 222 0048 0892     		str	r2, [sp, #32]
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 223              		.loc 1 216 3 is_stmt 1 view .LVU40
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 224              		.loc 1 216 30 is_stmt 0 view .LVU41
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 27


 225 004a 0121     		movs	r1, #1
 226 004c 0B91     		str	r1, [sp, #44]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227              		.loc 1 217 3 is_stmt 1 view .LVU42
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 228              		.loc 1 217 41 is_stmt 0 view .LVU43
 229 004e 1021     		movs	r1, #16
 230 0050 0C91     		str	r1, [sp, #48]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 231              		.loc 1 218 3 is_stmt 1 view .LVU44
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 232              		.loc 1 218 34 is_stmt 0 view .LVU45
 233 0052 0E92     		str	r2, [sp, #56]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 234              		.loc 1 219 3 is_stmt 1 view .LVU46
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 235              		.loc 1 219 35 is_stmt 0 view .LVU47
 236 0054 0F93     		str	r3, [sp, #60]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 99;
 237              		.loc 1 220 3 is_stmt 1 view .LVU48
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 99;
 238              		.loc 1 220 30 is_stmt 0 view .LVU49
 239 0056 0823     		movs	r3, #8
 240 0058 1093     		str	r3, [sp, #64]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 241              		.loc 1 221 3 is_stmt 1 view .LVU50
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 242              		.loc 1 221 30 is_stmt 0 view .LVU51
 243 005a 6323     		movs	r3, #99
 244 005c 1193     		str	r3, [sp, #68]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 245              		.loc 1 222 3 is_stmt 1 view .LVU52
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 246              		.loc 1 222 30 is_stmt 0 view .LVU53
 247 005e 1292     		str	r2, [sp, #72]
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 248              		.loc 1 223 3 is_stmt 1 view .LVU54
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 249              		.loc 1 223 30 is_stmt 0 view .LVU55
 250 0060 0423     		movs	r3, #4
 251 0062 1393     		str	r3, [sp, #76]
 224:Core/Src/main.c ****   {
 252              		.loc 1 224 3 is_stmt 1 view .LVU56
 224:Core/Src/main.c ****   {
 253              		.loc 1 224 7 is_stmt 0 view .LVU57
 254 0064 08A8     		add	r0, sp, #32
 255 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 256              	.LVL8:
 224:Core/Src/main.c ****   {
 257              		.loc 1 224 6 view .LVU58
 258 006a 88B9     		cbnz	r0, .L17
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 259              		.loc 1 231 3 is_stmt 1 view .LVU59
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 260              		.loc 1 231 31 is_stmt 0 view .LVU60
 261 006c 0F23     		movs	r3, #15
 262 006e 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 28


 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 263              		.loc 1 233 3 is_stmt 1 view .LVU61
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 264              		.loc 1 233 34 is_stmt 0 view .LVU62
 265 0070 0223     		movs	r3, #2
 266 0072 0493     		str	r3, [sp, #16]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 267              		.loc 1 234 3 is_stmt 1 view .LVU63
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 268              		.loc 1 234 35 is_stmt 0 view .LVU64
 269 0074 0023     		movs	r3, #0
 270 0076 0593     		str	r3, [sp, #20]
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 271              		.loc 1 235 3 is_stmt 1 view .LVU65
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 272              		.loc 1 235 36 is_stmt 0 view .LVU66
 273 0078 4FF48052 		mov	r2, #4096
 274 007c 0692     		str	r2, [sp, #24]
 236:Core/Src/main.c **** 
 275              		.loc 1 236 3 is_stmt 1 view .LVU67
 236:Core/Src/main.c **** 
 276              		.loc 1 236 36 is_stmt 0 view .LVU68
 277 007e 0793     		str	r3, [sp, #28]
 238:Core/Src/main.c ****   {
 278              		.loc 1 238 3 is_stmt 1 view .LVU69
 238:Core/Src/main.c ****   {
 279              		.loc 1 238 7 is_stmt 0 view .LVU70
 280 0080 0321     		movs	r1, #3
 281 0082 03A8     		add	r0, sp, #12
 282 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 283              	.LVL9:
 238:Core/Src/main.c ****   {
 284              		.loc 1 238 6 view .LVU71
 285 0088 20B9     		cbnz	r0, .L18
 242:Core/Src/main.c **** 
 286              		.loc 1 242 1 view .LVU72
 287 008a 15B0     		add	sp, sp, #84
 288              	.LCFI6:
 289              		.cfi_remember_state
 290              		.cfi_def_cfa_offset 4
 291              		@ sp needed
 292 008c 5DF804FB 		ldr	pc, [sp], #4
 293              	.L17:
 294              	.LCFI7:
 295              		.cfi_restore_state
 226:Core/Src/main.c ****   }
 296              		.loc 1 226 5 is_stmt 1 view .LVU73
 297 0090 FFF7FEFF 		bl	Error_Handler
 298              	.LVL10:
 299              	.L18:
 240:Core/Src/main.c ****   }
 300              		.loc 1 240 5 view .LVU74
 301 0094 FFF7FEFF 		bl	Error_Handler
 302              	.LVL11:
 303              	.L20:
 304              		.align	2
 305              	.L19:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 29


 306 0098 00380240 		.word	1073887232
 307 009c 00700040 		.word	1073770496
 308              		.cfi_endproc
 309              	.LFE225:
 311              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 312              		.align	2
 313              	.LC0:
 314 0000 30E794B5 		.ascii	"0\347\224\265\350\247\222\345\272\246:%d\015\012\000"
 314      E8A792E5 
 314      BAA63A25 
 314      640D0A00 
 315              		.align	2
 316              	.LC1:
 317 0010 696E6974 		.ascii	"init_ok\015\000"
 317      5F6F6B0D 
 317      00
 318              		.global	__aeabi_f2d
 319              		.global	__aeabi_dmul
 320              		.global	__aeabi_ddiv
 321              		.global	__aeabi_d2f
 322              		.section	.text.main,"ax",%progbits
 323              		.align	1
 324              		.global	main
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	main:
 330              	.LFB224:
  95:Core/Src/main.c **** 
 331              		.loc 1 95 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 336              	.LCFI8:
 337              		.cfi_def_cfa_offset 24
 338              		.cfi_offset 3, -24
 339              		.cfi_offset 4, -20
 340              		.cfi_offset 5, -16
 341              		.cfi_offset 6, -12
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 2DED028B 		vpush.64	{d8}
 345              	.LCFI9:
 346              		.cfi_def_cfa_offset 32
 347              		.cfi_offset 80, -32
 348              		.cfi_offset 81, -28
 104:Core/Src/main.c **** 
 349              		.loc 1 104 3 view .LVU76
 350 0006 FFF7FEFF 		bl	HAL_Init
 351              	.LVL12:
 111:Core/Src/main.c **** 
 352              		.loc 1 111 3 view .LVU77
 353 000a FFF7FEFF 		bl	SystemClock_Config
 354              	.LVL13:
 118:Core/Src/main.c ****   MX_DMA_Init();
 355              		.loc 1 118 3 view .LVU78
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 30


 356 000e FFF7FEFF 		bl	MX_GPIO_Init
 357              	.LVL14:
 119:Core/Src/main.c ****   MX_CRC_Init();
 358              		.loc 1 119 3 view .LVU79
 359 0012 FFF7FEFF 		bl	MX_DMA_Init
 360              	.LVL15:
 120:Core/Src/main.c ****   MX_I2C1_Init();
 361              		.loc 1 120 3 view .LVU80
 362 0016 FFF7FEFF 		bl	MX_CRC_Init
 363              	.LVL16:
 121:Core/Src/main.c ****   MX_USART1_UART_Init();
 364              		.loc 1 121 3 view .LVU81
 365 001a FFF7FEFF 		bl	MX_I2C1_Init
 366              	.LVL17:
 122:Core/Src/main.c ****   MX_ADC1_Init();
 367              		.loc 1 122 3 view .LVU82
 368 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 369              	.LVL18:
 123:Core/Src/main.c ****   MX_TIM3_Init();
 370              		.loc 1 123 3 view .LVU83
 371 0022 FFF7FEFF 		bl	MX_ADC1_Init
 372              	.LVL19:
 124:Core/Src/main.c ****   MX_TIM2_Init();
 373              		.loc 1 124 3 view .LVU84
 374 0026 FFF7FEFF 		bl	MX_TIM3_Init
 375              	.LVL20:
 125:Core/Src/main.c ****   MX_SPI1_Init();
 376              		.loc 1 125 3 view .LVU85
 377 002a FFF7FEFF 		bl	MX_TIM2_Init
 378              	.LVL21:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 379              		.loc 1 126 3 view .LVU86
 380 002e FFF7FEFF 		bl	MX_SPI1_Init
 381              	.LVL22:
 132:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3); // Start PWM timer  
 382              		.loc 1 132 3 view .LVU87
 383 0032 594C     		ldr	r4, .L24+8
 384 0034 0021     		movs	r1, #0
 385 0036 2046     		mov	r0, r4
 386 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 387              	.LVL23:
 133:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1); // Start PWM timer
 388              		.loc 1 133 3 view .LVU88
 389 003c 0821     		movs	r1, #8
 390 003e 2046     		mov	r0, r4
 391 0040 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 392              	.LVL24:
 134:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2); // Start PWM timer
 393              		.loc 1 134 3 view .LVU89
 394 0044 554C     		ldr	r4, .L24+12
 395 0046 0021     		movs	r1, #0
 396 0048 2046     		mov	r0, r4
 397 004a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 398              	.LVL25:
 135:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); // Start PWM timer
 399              		.loc 1 135 3 view .LVU90
 400 004e 0421     		movs	r1, #4
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 31


 401 0050 2046     		mov	r0, r4
 402 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 403              	.LVL26:
 136:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4); // Start PWM timer
 404              		.loc 1 136 3 view .LVU91
 405 0056 0821     		movs	r1, #8
 406 0058 2046     		mov	r0, r4
 407 005a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 408              	.LVL27:
 137:Core/Src/main.c **** 
 409              		.loc 1 137 3 view .LVU92
 410 005e 0C21     		movs	r1, #12
 411 0060 2046     		mov	r0, r4
 412 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 413              	.LVL28:
 142:Core/Src/main.c ****   motor1 = (Motor *)malloc(sizeof(Motor) * 1);
 414              		.loc 1 142 3 view .LVU93
 143:Core/Src/main.c ****   motor1->Motor_ID = 1;
 415              		.loc 1 143 3 view .LVU94
 143:Core/Src/main.c ****   motor1->Motor_ID = 1;
 416              		.loc 1 143 21 is_stmt 0 view .LVU95
 417 0066 5020     		movs	r0, #80
 418 0068 FFF7FEFF 		bl	malloc
 419              	.LVL29:
 420 006c 0546     		mov	r5, r0
 421              	.LVL30:
 144:Core/Src/main.c ****   motor1->PP = 7;  
 422              		.loc 1 144 3 is_stmt 1 view .LVU96
 144:Core/Src/main.c ****   motor1->PP = 7;  
 423              		.loc 1 144 20 is_stmt 0 view .LVU97
 424 006e 0123     		movs	r3, #1
 425 0070 0370     		strb	r3, [r0]
 145:Core/Src/main.c ****   motor1->DIR = 1;
 426              		.loc 1 145 3 is_stmt 1 view .LVU98
 145:Core/Src/main.c ****   motor1->DIR = 1;
 427              		.loc 1 145 14 is_stmt 0 view .LVU99
 428 0072 0722     		movs	r2, #7
 429 0074 4260     		str	r2, [r0, #4]
 146:Core/Src/main.c ****   motor1->As5600_Sensor = (As5600_Sensor_Typedef *)malloc(sizeof(As5600_Sensor_Typedef) * 1);
 430              		.loc 1 146 3 is_stmt 1 view .LVU100
 146:Core/Src/main.c ****   motor1->As5600_Sensor = (As5600_Sensor_Typedef *)malloc(sizeof(As5600_Sensor_Typedef) * 1);
 431              		.loc 1 146 15 is_stmt 0 view .LVU101
 432 0076 8360     		str	r3, [r0, #8]
 147:Core/Src/main.c ****   motor1->As5600_Sensor->Rotations = 0;
 433              		.loc 1 147 3 is_stmt 1 view .LVU102
 147:Core/Src/main.c ****   motor1->As5600_Sensor->Rotations = 0;
 434              		.loc 1 147 52 is_stmt 0 view .LVU103
 435 0078 1420     		movs	r0, #20
 436              	.LVL31:
 147:Core/Src/main.c ****   motor1->As5600_Sensor->Rotations = 0;
 437              		.loc 1 147 52 view .LVU104
 438 007a FFF7FEFF 		bl	malloc
 439              	.LVL32:
 147:Core/Src/main.c ****   motor1->As5600_Sensor->Rotations = 0;
 440              		.loc 1 147 25 view .LVU105
 441 007e A862     		str	r0, [r5, #40]
 148:Core/Src/main.c ****   Read_AS5600_Angle(motor1->As5600_Sensor);
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 32


 442              		.loc 1 148 3 is_stmt 1 view .LVU106
 148:Core/Src/main.c ****   Read_AS5600_Angle(motor1->As5600_Sensor);
 443              		.loc 1 148 36 is_stmt 0 view .LVU107
 444 0080 0024     		movs	r4, #0
 445 0082 0461     		str	r4, [r0, #16]
 149:Core/Src/main.c ****   motor1->Motor_Set_Compare1 = Motor1_Set_Compare1;
 446              		.loc 1 149 3 is_stmt 1 view .LVU108
 447 0084 FFF7FEFF 		bl	Read_AS5600_Angle
 448              	.LVL33:
 150:Core/Src/main.c ****   motor1->Motor_Set_Compare2 = Motor1_Set_Compare2;
 449              		.loc 1 150 3 view .LVU109
 150:Core/Src/main.c ****   motor1->Motor_Set_Compare2 = Motor1_Set_Compare2;
 450              		.loc 1 150 30 is_stmt 0 view .LVU110
 451 0088 454B     		ldr	r3, .L24+16
 452 008a 6B64     		str	r3, [r5, #68]
 151:Core/Src/main.c ****   motor1->Motor_Set_Compare3 = Motor1_Set_Compare3;
 453              		.loc 1 151 3 is_stmt 1 view .LVU111
 151:Core/Src/main.c ****   motor1->Motor_Set_Compare3 = Motor1_Set_Compare3;
 454              		.loc 1 151 30 is_stmt 0 view .LVU112
 455 008c 454B     		ldr	r3, .L24+20
 456 008e AB64     		str	r3, [r5, #72]
 152:Core/Src/main.c ****   motor1->voltage_power_supply = 12.0;
 457              		.loc 1 152 3 is_stmt 1 view .LVU113
 152:Core/Src/main.c ****   motor1->voltage_power_supply = 12.0;
 458              		.loc 1 152 30 is_stmt 0 view .LVU114
 459 0090 454B     		ldr	r3, .L24+24
 460 0092 EB64     		str	r3, [r5, #76]
 153:Core/Src/main.c ****   motor1->zero_electric_angle = 0;
 461              		.loc 1 153 3 is_stmt 1 view .LVU115
 153:Core/Src/main.c ****   motor1->zero_electric_angle = 0;
 462              		.loc 1 153 32 is_stmt 0 view .LVU116
 463 0094 454B     		ldr	r3, .L24+28
 464 0096 EB60     		str	r3, [r5, #12]	@ float
 154:Core/Src/main.c ****   motor1->Ualpha = motor1->Ubeta = motor1->Ua = motor1->Ub = motor1->Uc = 0;
 465              		.loc 1 154 3 is_stmt 1 view .LVU117
 154:Core/Src/main.c ****   motor1->Ualpha = motor1->Ubeta = motor1->Ua = motor1->Ub = motor1->Uc = 0;
 466              		.loc 1 154 31 is_stmt 0 view .LVU118
 467 0098 2C61     		str	r4, [r5, #16]
 155:Core/Src/main.c **** 
 468              		.loc 1 155 3 is_stmt 1 view .LVU119
 155:Core/Src/main.c **** 
 469              		.loc 1 155 73 is_stmt 0 view .LVU120
 470 009a 9FED458A 		vldr.32	s16, .L24+32
 471 009e 85ED098A 		vstr.32	s16, [r5, #36]
 155:Core/Src/main.c **** 
 472              		.loc 1 155 60 view .LVU121
 473 00a2 85ED088A 		vstr.32	s16, [r5, #32]
 155:Core/Src/main.c **** 
 474              		.loc 1 155 47 view .LVU122
 475 00a6 85ED078A 		vstr.32	s16, [r5, #28]
 155:Core/Src/main.c **** 
 476              		.loc 1 155 34 view .LVU123
 477 00aa 85ED068A 		vstr.32	s16, [r5, #24]
 155:Core/Src/main.c **** 
 478              		.loc 1 155 18 view .LVU124
 479 00ae 85ED058A 		vstr.32	s16, [r5, #20]
 161:Core/Src/main.c ****   //计算0电角度->后续规整到电机初始化当中
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 33


 480              		.loc 1 161 3 is_stmt 1 view .LVU125
 481 00b2 A86A     		ldr	r0, [r5, #40]
 482 00b4 FFF7FEFF 		bl	Read_AS5600_Angle
 483              	.LVL34:
 163:Core/Src/main.c ****   HAL_Delay(1000);  
 484              		.loc 1 163 3 view .LVU126
 485 00b8 DFED3E8A 		vldr.32	s17, .L24+36
 486 00bc F0EE680A 		vmov.f32	s1, s17
 487 00c0 B0EE000A 		vmov.f32	s0, #2.0e+0
 488 00c4 2846     		mov	r0, r5
 489 00c6 FFF7FEFF 		bl	setTorque
 490              	.LVL35:
 164:Core/Src/main.c ****   Read_AS5600_Angle(motor1->As5600_Sensor);
 491              		.loc 1 164 3 view .LVU127
 492 00ca 4FF47A70 		mov	r0, #1000
 493 00ce FFF7FEFF 		bl	HAL_Delay
 494              	.LVL36:
 165:Core/Src/main.c ****   motor1->zero_electric_angle = _electricalAngle(motor1);
 495              		.loc 1 165 3 view .LVU128
 496 00d2 A86A     		ldr	r0, [r5, #40]
 497 00d4 FFF7FEFF 		bl	Read_AS5600_Angle
 498              	.LVL37:
 166:Core/Src/main.c ****   setTorque(motor1,0, _3PI_2);
 499              		.loc 1 166 3 view .LVU129
 166:Core/Src/main.c ****   setTorque(motor1,0, _3PI_2);
 500              		.loc 1 166 33 is_stmt 0 view .LVU130
 501 00d8 2846     		mov	r0, r5
 502 00da FFF7FEFF 		bl	_electricalAngle
 503              	.LVL38:
 166:Core/Src/main.c ****   setTorque(motor1,0, _3PI_2);
 504              		.loc 1 166 31 view .LVU131
 505 00de BDEEC00A 		vcvt.s32.f32	s0, s0
 506 00e2 85ED040A 		vstr.32	s0, [r5, #16]	@ int
 167:Core/Src/main.c ****   printf("0电角度:%d\r\n",(int)(motor1->zero_electric_angle*1000));
 507              		.loc 1 167 3 is_stmt 1 view .LVU132
 508 00e6 F0EE680A 		vmov.f32	s1, s17
 509 00ea B0EE480A 		vmov.f32	s0, s16
 510 00ee 2846     		mov	r0, r5
 511 00f0 FFF7FEFF 		bl	setTorque
 512              	.LVL39:
 168:Core/Src/main.c ****   HAL_Delay(1000);
 513              		.loc 1 168 3 view .LVU133
 168:Core/Src/main.c ****   HAL_Delay(1000);
 514              		.loc 1 168 42 is_stmt 0 view .LVU134
 515 00f4 2969     		ldr	r1, [r5, #16]
 168:Core/Src/main.c ****   HAL_Delay(1000);
 516              		.loc 1 168 3 view .LVU135
 517 00f6 4FF47A74 		mov	r4, #1000
 518 00fa 04FB01F1 		mul	r1, r4, r1
 519 00fe 2E48     		ldr	r0, .L24+40
 520 0100 FFF7FEFF 		bl	printf
 521              	.LVL40:
 169:Core/Src/main.c ****   printf("init_ok\r\n");
 522              		.loc 1 169 3 is_stmt 1 view .LVU136
 523 0104 2046     		mov	r0, r4
 524 0106 FFF7FEFF 		bl	HAL_Delay
 525              	.LVL41:
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 34


 170:Core/Src/main.c **** 
 526              		.loc 1 170 3 view .LVU137
 527 010a 2C48     		ldr	r0, .L24+44
 528 010c FFF7FEFF 		bl	puts
 529              	.LVL42:
 172:Core/Src/main.c **** 
 530              		.loc 1 172 3 view .LVU138
 531              	.L22:
 174:Core/Src/main.c ****   {
 532              		.loc 1 174 3 discriminator 1 view .LVU139
 178:Core/Src/main.c **** 
 533              		.loc 1 178 5 discriminator 1 view .LVU140
 534 0110 4FF40051 		mov	r1, #8192
 535 0114 2A48     		ldr	r0, .L24+48
 536 0116 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 537              	.LVL43:
 180:Core/Src/main.c **** 
 538              		.loc 1 180 5 discriminator 1 view .LVU141
 539 011a A86A     		ldr	r0, [r5, #40]
 540 011c FFF7FEFF 		bl	Read_AS5600_Angle
 541              	.LVL44:
 184:Core/Src/main.c ****     // setTorque(motor1, target_torque, _electricalAngle(motor1));   //力矩闭环
 542              		.loc 1 184 5 discriminator 1 view .LVU142
 543 0120 2848     		ldr	r0, .L24+52
 544 0122 FFF7FEFF 		bl	Get_Cmd
 545              	.LVL45:
 186:Core/Src/main.c **** 
 546              		.loc 1 186 5 discriminator 1 view .LVU143
 186:Core/Src/main.c **** 
 547              		.loc 1 186 38 is_stmt 0 discriminator 1 view .LVU144
 548 0126 284B     		ldr	r3, .L24+56
 549 0128 93ED008A 		vldr.32	s16, [r3]
 186:Core/Src/main.c **** 
 550              		.loc 1 186 45 discriminator 1 view .LVU145
 551 012c AC68     		ldr	r4, [r5, #8]
 186:Core/Src/main.c **** 
 552              		.loc 1 186 51 discriminator 1 view .LVU146
 553 012e A86A     		ldr	r0, [r5, #40]
 554 0130 FFF7FEFF 		bl	Get_AS5600_Angle
 555              	.LVL46:
 186:Core/Src/main.c **** 
 556              		.loc 1 186 50 discriminator 1 view .LVU147
 557 0134 07EE904A 		vmov	s15, r4	@ int
 558 0138 F8EEE77A 		vcvt.f32.s32	s15, s15
 559 013c 67EE807A 		vmul.f32	s15, s15, s0
 186:Core/Src/main.c **** 
 560              		.loc 1 186 38 discriminator 1 view .LVU148
 561 0140 78EE677A 		vsub.f32	s15, s16, s15
 186:Core/Src/main.c **** 
 562              		.loc 1 186 24 discriminator 1 view .LVU149
 563 0144 9FED217A 		vldr.32	s14, .L24+60
 564 0148 67EE877A 		vmul.f32	s15, s15, s14
 565 014c 17EE900A 		vmov	r0, s15
 566 0150 FFF7FEFF 		bl	__aeabi_f2d
 567              	.LVL47:
 186:Core/Src/main.c **** 
 568              		.loc 1 186 91 discriminator 1 view .LVU150
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 35


 569 0154 0022     		movs	r2, #0
 570 0156 1E4B     		ldr	r3, .L24+64
 571 0158 FFF7FEFF 		bl	__aeabi_dmul
 572              	.LVL48:
 186:Core/Src/main.c **** 
 573              		.loc 1 186 96 discriminator 1 view .LVU151
 574 015c 0CA3     		adr	r3, .L24
 575 015e D3E90023 		ldrd	r2, [r3]
 576 0162 FFF7FEFF 		bl	__aeabi_ddiv
 577              	.LVL49:
 578 0166 0646     		mov	r6, r0
 579 0168 0F46     		mov	r7, r1
 186:Core/Src/main.c **** 
 580              		.loc 1 186 5 discriminator 1 view .LVU152
 581 016a 2846     		mov	r0, r5
 582 016c FFF7FEFF 		bl	_electricalAngle
 583              	.LVL50:
 584 0170 B0EE408A 		vmov.f32	s16, s0
 585 0174 3046     		mov	r0, r6
 586 0176 3946     		mov	r1, r7
 587 0178 FFF7FEFF 		bl	__aeabi_d2f
 588              	.LVL51:
 589 017c F0EE480A 		vmov.f32	s1, s16
 590 0180 00EE100A 		vmov	s0, r0
 591 0184 2846     		mov	r0, r5
 592 0186 FFF7FEFF 		bl	setTorque
 593              	.LVL52:
 174:Core/Src/main.c ****   {
 594              		.loc 1 174 9 is_stmt 1 discriminator 1 view .LVU153
 595 018a C1E7     		b	.L22
 596              	.L25:
 597 018c AFF30080 		.align	3
 598              	.L24:
 599 0190 00000060 		.word	1610612736
 600 0194 FB210940 		.word	1074340347
 601 0198 00000000 		.word	htim2
 602 019c 00000000 		.word	htim3
 603 01a0 00000000 		.word	Motor1_Set_Compare1
 604 01a4 00000000 		.word	Motor1_Set_Compare2
 605 01a8 00000000 		.word	Motor1_Set_Compare3
 606 01ac 00004041 		.word	1094713344
 607 01b0 00000000 		.word	0
 608 01b4 E4CB9640 		.word	1083624420
 609 01b8 00000000 		.word	.LC0
 610 01bc 10000000 		.word	.LC1
 611 01c0 00080240 		.word	1073874944
 612 01c4 00000000 		.word	huart1
 613 01c8 00000000 		.word	.LANCHOR0
 614 01cc 2731083E 		.word	1040724263
 615 01d0 00806640 		.word	1080459264
 616              		.cfi_endproc
 617              	.LFE224:
 619              		.global	target_torque
 620              		.global	target_angle
 621              		.section	.bss.target_angle,"aw",%nobits
 622              		.align	2
 623              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 36


 626              	target_angle:
 627 0000 00000000 		.space	4
 628              		.section	.bss.target_torque,"aw",%nobits
 629              		.align	2
 632              	target_torque:
 633 0000 00000000 		.space	4
 634              		.text
 635              	.Letext0:
 636              		.file 3 "c:\\software_user\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 637              		.file 4 "c:\\software_user\\armgcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 638              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 639              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 640              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 641              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 642              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 643              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 644              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 645              		.file 12 "Core/Inc/main.h"
 646              		.file 13 "Core/Inc/tim.h"
 647              		.file 14 "Core/Inc/usart.h"
 648              		.file 15 "usr/as5600.h"
 649              		.file 16 "usr/pid.h"
 650              		.file 17 "usr/lowpass_filter.h"
 651              		.file 18 "usr/inlinecurrent.h"
 652              		.file 19 "usr/ts_foc.h"
 653              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 654              		.file 21 "Core/Inc/gpio.h"
 655              		.file 22 "Core/Inc/dma.h"
 656              		.file 23 "Core/Inc/crc.h"
 657              		.file 24 "Core/Inc/i2c.h"
 658              		.file 25 "Core/Inc/adc.h"
 659              		.file 26 "Core/Inc/spi.h"
 660              		.file 27 "c:\\software_user\\armgcc\\arm-none-eabi\\include\\stdlib.h"
 661              		.file 28 "c:\\software_user\\armgcc\\arm-none-eabi\\include\\stdio.h"
 662              		.file 29 "<built-in>"
 663              		.file 30 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 664              		.file 31 "usr/get_cmd.h"
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:20     .text.__io_putchar:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:26     .text.__io_putchar:00000000 __io_putchar
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:63     .text.__io_putchar:0000001c $d
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:68     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:74     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:108    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:113    .text.Error_Handler:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:119    .text.Error_Handler:00000000 Error_Handler
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:151    .text.SystemClock_Config:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:157    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:306    .text.SystemClock_Config:00000098 $d
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:312    .rodata.main.str1.4:00000000 $d
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:323    .text.main:00000000 $t
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:329    .text.main:00000000 main
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:599    .text.main:00000190 $d
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:632    .bss.target_torque:00000000 target_torque
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:626    .bss.target_angle:00000000 target_angle
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:622    .bss.target_angle:00000000 $d
C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s:629    .bss.target_torque:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_CRC_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_ADC1_Init
MX_TIM3_Init
MX_TIM2_Init
MX_SPI1_Init
HAL_TIM_PWM_Start
malloc
Read_AS5600_Angle
setTorque
HAL_Delay
_electricalAngle
printf
puts
HAL_GPIO_TogglePin
Get_Cmd
Get_AS5600_Angle
htim2
htim3
Motor1_Set_Compare1
ARM GAS  C:\Users\Dennis\AppData\Local\Temp\cc7QH0Vw.s 			page 38


Motor1_Set_Compare2
Motor1_Set_Compare3
