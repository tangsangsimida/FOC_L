ARM GAS  /tmp/ccyfw4Y0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB220:
  28              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
ARM GAS  /tmp/ccyfw4Y0.s 			page 2


  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  40              		.loc 1 38 3 view .LVU1
  41              		.loc 1 38 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0093     		str	r3, [sp]
  44 0008 0193     		str	r3, [sp, #4]
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0393     		str	r3, [sp, #12]
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  45:Core/Src/adc.c ****   */
  46:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  47              		.loc 1 46 3 is_stmt 1 view .LVU3
  48              		.loc 1 46 18 is_stmt 0 view .LVU4
  49 000e 3448     		ldr	r0, .L17
  50 0010 344A     		ldr	r2, .L17+4
  51 0012 0260     		str	r2, [r0]
  47:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  52              		.loc 1 47 3 is_stmt 1 view .LVU5
  53              		.loc 1 47 29 is_stmt 0 view .LVU6
  54 0014 4FF48032 		mov	r2, #65536
  55 0018 4260     		str	r2, [r0, #4]
  48:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  56              		.loc 1 48 3 is_stmt 1 view .LVU7
  57              		.loc 1 48 25 is_stmt 0 view .LVU8
  58 001a 8360     		str	r3, [r0, #8]
  49:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ENABLE;
  59              		.loc 1 49 3 is_stmt 1 view .LVU9
  60              		.loc 1 49 27 is_stmt 0 view .LVU10
  61 001c 0122     		movs	r2, #1
  62 001e 0261     		str	r2, [r0, #16]
  50:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  63              		.loc 1 50 3 is_stmt 1 view .LVU11
  64              		.loc 1 50 33 is_stmt 0 view .LVU12
  65 0020 0276     		strb	r2, [r0, #24]
ARM GAS  /tmp/ccyfw4Y0.s 			page 3


  51:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  66              		.loc 1 51 3 is_stmt 1 view .LVU13
  67              		.loc 1 51 36 is_stmt 0 view .LVU14
  68 0022 80F82030 		strb	r3, [r0, #32]
  52:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  69              		.loc 1 52 3 is_stmt 1 view .LVU15
  70              		.loc 1 52 35 is_stmt 0 view .LVU16
  71 0026 C362     		str	r3, [r0, #44]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  72              		.loc 1 53 3 is_stmt 1 view .LVU17
  73              		.loc 1 53 31 is_stmt 0 view .LVU18
  74 0028 2F49     		ldr	r1, .L17+8
  75 002a 8162     		str	r1, [r0, #40]
  54:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  76              		.loc 1 54 3 is_stmt 1 view .LVU19
  77              		.loc 1 54 24 is_stmt 0 view .LVU20
  78 002c C360     		str	r3, [r0, #12]
  55:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 6;
  79              		.loc 1 55 3 is_stmt 1 view .LVU21
  80              		.loc 1 55 30 is_stmt 0 view .LVU22
  81 002e 0623     		movs	r3, #6
  82 0030 C361     		str	r3, [r0, #28]
  56:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  83              		.loc 1 56 3 is_stmt 1 view .LVU23
  84              		.loc 1 56 36 is_stmt 0 view .LVU24
  85 0032 80F83020 		strb	r2, [r0, #48]
  57:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  86              		.loc 1 57 3 is_stmt 1 view .LVU25
  87              		.loc 1 57 27 is_stmt 0 view .LVU26
  88 0036 4261     		str	r2, [r0, #20]
  58:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  89              		.loc 1 58 3 is_stmt 1 view .LVU27
  90              		.loc 1 58 7 is_stmt 0 view .LVU28
  91 0038 FFF7FEFF 		bl	HAL_ADC_Init
  92              	.LVL0:
  93              		.loc 1 58 6 view .LVU29
  94 003c 0028     		cmp	r0, #0
  95 003e 3AD1     		bne	.L10
  96              	.L2:
  59:Core/Src/adc.c ****   {
  60:Core/Src/adc.c ****     Error_Handler();
  61:Core/Src/adc.c ****   }
  62:Core/Src/adc.c **** 
  63:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  64:Core/Src/adc.c ****   */
  65:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  97              		.loc 1 65 3 is_stmt 1 view .LVU30
  98              		.loc 1 65 19 is_stmt 0 view .LVU31
  99 0040 0023     		movs	r3, #0
 100 0042 0093     		str	r3, [sp]
  66:Core/Src/adc.c ****   sConfig.Rank = 1;
 101              		.loc 1 66 3 is_stmt 1 view .LVU32
 102              		.loc 1 66 16 is_stmt 0 view .LVU33
 103 0044 0123     		movs	r3, #1
 104 0046 0193     		str	r3, [sp, #4]
  67:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 105              		.loc 1 67 3 is_stmt 1 view .LVU34
ARM GAS  /tmp/ccyfw4Y0.s 			page 4


 106              		.loc 1 67 24 is_stmt 0 view .LVU35
 107 0048 0293     		str	r3, [sp, #8]
  68:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 108              		.loc 1 68 3 is_stmt 1 view .LVU36
 109              		.loc 1 68 7 is_stmt 0 view .LVU37
 110 004a 6946     		mov	r1, sp
 111 004c 2448     		ldr	r0, .L17
 112 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 113              	.LVL1:
 114              		.loc 1 68 6 view .LVU38
 115 0052 0028     		cmp	r0, #0
 116 0054 32D1     		bne	.L11
 117              	.L3:
  69:Core/Src/adc.c ****   {
  70:Core/Src/adc.c ****     Error_Handler();
  71:Core/Src/adc.c ****   }
  72:Core/Src/adc.c **** 
  73:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  74:Core/Src/adc.c ****   */
  75:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 118              		.loc 1 75 3 is_stmt 1 view .LVU39
 119              		.loc 1 75 19 is_stmt 0 view .LVU40
 120 0056 0123     		movs	r3, #1
 121 0058 0093     		str	r3, [sp]
  76:Core/Src/adc.c ****   sConfig.Rank = 2;
 122              		.loc 1 76 3 is_stmt 1 view .LVU41
 123              		.loc 1 76 16 is_stmt 0 view .LVU42
 124 005a 0223     		movs	r3, #2
 125 005c 0193     		str	r3, [sp, #4]
  77:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 126              		.loc 1 77 3 is_stmt 1 view .LVU43
 127              		.loc 1 77 7 is_stmt 0 view .LVU44
 128 005e 6946     		mov	r1, sp
 129 0060 1F48     		ldr	r0, .L17
 130 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 131              	.LVL2:
 132              		.loc 1 77 6 view .LVU45
 133 0066 60BB     		cbnz	r0, .L12
 134              	.L4:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     Error_Handler();
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  83:Core/Src/adc.c ****   */
  84:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_2;
 135              		.loc 1 84 3 is_stmt 1 view .LVU46
 136              		.loc 1 84 19 is_stmt 0 view .LVU47
 137 0068 0223     		movs	r3, #2
 138 006a 0093     		str	r3, [sp]
  85:Core/Src/adc.c ****   sConfig.Rank = 3;
 139              		.loc 1 85 3 is_stmt 1 view .LVU48
 140              		.loc 1 85 16 is_stmt 0 view .LVU49
 141 006c 0323     		movs	r3, #3
 142 006e 0193     		str	r3, [sp, #4]
  86:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 143              		.loc 1 86 3 is_stmt 1 view .LVU50
ARM GAS  /tmp/ccyfw4Y0.s 			page 5


 144              		.loc 1 86 7 is_stmt 0 view .LVU51
 145 0070 6946     		mov	r1, sp
 146 0072 1B48     		ldr	r0, .L17
 147 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 148              	.LVL3:
 149              		.loc 1 86 6 view .LVU52
 150 0078 30BB     		cbnz	r0, .L13
 151              	.L5:
  87:Core/Src/adc.c ****   {
  88:Core/Src/adc.c ****     Error_Handler();
  89:Core/Src/adc.c ****   }
  90:Core/Src/adc.c **** 
  91:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  92:Core/Src/adc.c ****   */
  93:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_3;
 152              		.loc 1 93 3 is_stmt 1 view .LVU53
 153              		.loc 1 93 19 is_stmt 0 view .LVU54
 154 007a 0323     		movs	r3, #3
 155 007c 0093     		str	r3, [sp]
  94:Core/Src/adc.c ****   sConfig.Rank = 4;
 156              		.loc 1 94 3 is_stmt 1 view .LVU55
 157              		.loc 1 94 16 is_stmt 0 view .LVU56
 158 007e 0423     		movs	r3, #4
 159 0080 0193     		str	r3, [sp, #4]
  95:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 160              		.loc 1 95 3 is_stmt 1 view .LVU57
 161              		.loc 1 95 7 is_stmt 0 view .LVU58
 162 0082 6946     		mov	r1, sp
 163 0084 1648     		ldr	r0, .L17
 164 0086 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 165              	.LVL4:
 166              		.loc 1 95 6 view .LVU59
 167 008a 00BB     		cbnz	r0, .L14
 168              	.L6:
  96:Core/Src/adc.c ****   {
  97:Core/Src/adc.c ****     Error_Handler();
  98:Core/Src/adc.c ****   }
  99:Core/Src/adc.c **** 
 100:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 101:Core/Src/adc.c ****   */
 102:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
 169              		.loc 1 102 3 is_stmt 1 view .LVU60
 170              		.loc 1 102 19 is_stmt 0 view .LVU61
 171 008c 0423     		movs	r3, #4
 172 008e 0093     		str	r3, [sp]
 103:Core/Src/adc.c ****   sConfig.Rank = 5;
 173              		.loc 1 103 3 is_stmt 1 view .LVU62
 174              		.loc 1 103 16 is_stmt 0 view .LVU63
 175 0090 0523     		movs	r3, #5
 176 0092 0193     		str	r3, [sp, #4]
 104:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 177              		.loc 1 104 3 is_stmt 1 view .LVU64
 178              		.loc 1 104 7 is_stmt 0 view .LVU65
 179 0094 6946     		mov	r1, sp
 180 0096 1248     		ldr	r0, .L17
 181 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 182              	.LVL5:
ARM GAS  /tmp/ccyfw4Y0.s 			page 6


 183              		.loc 1 104 6 view .LVU66
 184 009c D0B9     		cbnz	r0, .L15
 185              	.L7:
 105:Core/Src/adc.c ****   {
 106:Core/Src/adc.c ****     Error_Handler();
 107:Core/Src/adc.c ****   }
 108:Core/Src/adc.c **** 
 109:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 110:Core/Src/adc.c ****   */
 111:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 186              		.loc 1 111 3 is_stmt 1 view .LVU67
 187              		.loc 1 111 19 is_stmt 0 view .LVU68
 188 009e 134B     		ldr	r3, .L17+12
 189 00a0 0093     		str	r3, [sp]
 112:Core/Src/adc.c ****   sConfig.Rank = 6;
 190              		.loc 1 112 3 is_stmt 1 view .LVU69
 191              		.loc 1 112 16 is_stmt 0 view .LVU70
 192 00a2 0623     		movs	r3, #6
 193 00a4 0193     		str	r3, [sp, #4]
 113:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 194              		.loc 1 113 3 is_stmt 1 view .LVU71
 195              		.loc 1 113 7 is_stmt 0 view .LVU72
 196 00a6 6946     		mov	r1, sp
 197 00a8 0D48     		ldr	r0, .L17
 198 00aa FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 199              	.LVL6:
 200              		.loc 1 113 6 view .LVU73
 201 00ae A0B9     		cbnz	r0, .L16
 202              	.L1:
 114:Core/Src/adc.c ****   {
 115:Core/Src/adc.c ****     Error_Handler();
 116:Core/Src/adc.c ****   }
 117:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 118:Core/Src/adc.c **** 
 119:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 120:Core/Src/adc.c **** 
 121:Core/Src/adc.c **** }
 203              		.loc 1 121 1 view .LVU74
 204 00b0 05B0     		add	sp, sp, #20
 205              	.LCFI2:
 206              		.cfi_remember_state
 207              		.cfi_def_cfa_offset 4
 208              		@ sp needed
 209 00b2 5DF804FB 		ldr	pc, [sp], #4
 210              	.L10:
 211              	.LCFI3:
 212              		.cfi_restore_state
  60:Core/Src/adc.c ****   }
 213              		.loc 1 60 5 is_stmt 1 view .LVU75
 214 00b6 FFF7FEFF 		bl	Error_Handler
 215              	.LVL7:
 216 00ba C1E7     		b	.L2
 217              	.L11:
  70:Core/Src/adc.c ****   }
 218              		.loc 1 70 5 view .LVU76
 219 00bc FFF7FEFF 		bl	Error_Handler
 220              	.LVL8:
ARM GAS  /tmp/ccyfw4Y0.s 			page 7


 221 00c0 C9E7     		b	.L3
 222              	.L12:
  79:Core/Src/adc.c ****   }
 223              		.loc 1 79 5 view .LVU77
 224 00c2 FFF7FEFF 		bl	Error_Handler
 225              	.LVL9:
 226 00c6 CFE7     		b	.L4
 227              	.L13:
  88:Core/Src/adc.c ****   }
 228              		.loc 1 88 5 view .LVU78
 229 00c8 FFF7FEFF 		bl	Error_Handler
 230              	.LVL10:
 231 00cc D5E7     		b	.L5
 232              	.L14:
  97:Core/Src/adc.c ****   }
 233              		.loc 1 97 5 view .LVU79
 234 00ce FFF7FEFF 		bl	Error_Handler
 235              	.LVL11:
 236 00d2 DBE7     		b	.L6
 237              	.L15:
 106:Core/Src/adc.c ****   }
 238              		.loc 1 106 5 view .LVU80
 239 00d4 FFF7FEFF 		bl	Error_Handler
 240              	.LVL12:
 241 00d8 E1E7     		b	.L7
 242              	.L16:
 115:Core/Src/adc.c ****   }
 243              		.loc 1 115 5 view .LVU81
 244 00da FFF7FEFF 		bl	Error_Handler
 245              	.LVL13:
 246              		.loc 1 121 1 is_stmt 0 view .LVU82
 247 00de E7E7     		b	.L1
 248              	.L18:
 249              		.align	2
 250              	.L17:
 251 00e0 00000000 		.word	.LANCHOR0
 252 00e4 00200140 		.word	1073815552
 253 00e8 0100000F 		.word	251658241
 254 00ec 12000010 		.word	268435474
 255              		.cfi_endproc
 256              	.LFE220:
 258              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_ADC_MspInit
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	HAL_ADC_MspInit:
 267              	.LVL14:
 268              	.LFB221:
 122:Core/Src/adc.c **** 
 123:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 124:Core/Src/adc.c **** {
 269              		.loc 1 124 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccyfw4Y0.s 			page 8


 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		.loc 1 124 1 is_stmt 0 view .LVU84
 274 0000 30B5     		push	{r4, r5, lr}
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 12
 277              		.cfi_offset 4, -12
 278              		.cfi_offset 5, -8
 279              		.cfi_offset 14, -4
 280 0002 89B0     		sub	sp, sp, #36
 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 48
 125:Core/Src/adc.c **** 
 126:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 283              		.loc 1 126 3 is_stmt 1 view .LVU85
 284              		.loc 1 126 20 is_stmt 0 view .LVU86
 285 0004 0023     		movs	r3, #0
 286 0006 0393     		str	r3, [sp, #12]
 287 0008 0493     		str	r3, [sp, #16]
 288 000a 0593     		str	r3, [sp, #20]
 289 000c 0693     		str	r3, [sp, #24]
 290 000e 0793     		str	r3, [sp, #28]
 127:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 291              		.loc 1 127 3 is_stmt 1 view .LVU87
 292              		.loc 1 127 15 is_stmt 0 view .LVU88
 293 0010 0268     		ldr	r2, [r0]
 294              		.loc 1 127 5 view .LVU89
 295 0012 03F18043 		add	r3, r3, #1073741824
 296 0016 03F59033 		add	r3, r3, #73728
 297 001a 9A42     		cmp	r2, r3
 298 001c 01D0     		beq	.L23
 299              	.LVL15:
 300              	.L19:
 128:Core/Src/adc.c ****   {
 129:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 130:Core/Src/adc.c **** 
 131:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 132:Core/Src/adc.c ****     /* ADC1 clock enable */
 133:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 134:Core/Src/adc.c **** 
 135:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 136:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 137:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 138:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 139:Core/Src/adc.c ****     PA2     ------> ADC1_IN2
 140:Core/Src/adc.c ****     PA3     ------> ADC1_IN3
 141:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 142:Core/Src/adc.c ****     */
 143:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 144:Core/Src/adc.c ****                           |GPIO_PIN_4;
 145:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 146:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 147:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148:Core/Src/adc.c **** 
 149:Core/Src/adc.c ****     /* ADC1 DMA Init */
 150:Core/Src/adc.c ****     /* ADC1 Init */
 151:Core/Src/adc.c ****     hdma_adc1.Instance = DMA2_Stream0;
 152:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
ARM GAS  /tmp/ccyfw4Y0.s 			page 9


 153:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 154:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 155:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 156:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 157:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 158:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 159:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 160:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 161:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 162:Core/Src/adc.c ****     {
 163:Core/Src/adc.c ****       Error_Handler();
 164:Core/Src/adc.c ****     }
 165:Core/Src/adc.c **** 
 166:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 167:Core/Src/adc.c **** 
 168:Core/Src/adc.c ****     /* ADC1 interrupt Init */
 169:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 170:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 171:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 172:Core/Src/adc.c **** 
 173:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 174:Core/Src/adc.c ****   }
 175:Core/Src/adc.c **** }
 301              		.loc 1 175 1 view .LVU90
 302 001e 09B0     		add	sp, sp, #36
 303              	.LCFI6:
 304              		.cfi_remember_state
 305              		.cfi_def_cfa_offset 12
 306              		@ sp needed
 307 0020 30BD     		pop	{r4, r5, pc}
 308              	.LVL16:
 309              	.L23:
 310              	.LCFI7:
 311              		.cfi_restore_state
 312              		.loc 1 175 1 view .LVU91
 313 0022 0446     		mov	r4, r0
 133:Core/Src/adc.c **** 
 314              		.loc 1 133 5 is_stmt 1 view .LVU92
 315              	.LBB2:
 133:Core/Src/adc.c **** 
 316              		.loc 1 133 5 view .LVU93
 317 0024 0025     		movs	r5, #0
 318 0026 0195     		str	r5, [sp, #4]
 133:Core/Src/adc.c **** 
 319              		.loc 1 133 5 view .LVU94
 320 0028 03F58C33 		add	r3, r3, #71680
 321 002c 5A6C     		ldr	r2, [r3, #68]
 322 002e 42F48072 		orr	r2, r2, #256
 323 0032 5A64     		str	r2, [r3, #68]
 133:Core/Src/adc.c **** 
 324              		.loc 1 133 5 view .LVU95
 325 0034 5A6C     		ldr	r2, [r3, #68]
 326 0036 02F48072 		and	r2, r2, #256
 327 003a 0192     		str	r2, [sp, #4]
 133:Core/Src/adc.c **** 
 328              		.loc 1 133 5 view .LVU96
 329 003c 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccyfw4Y0.s 			page 10


 330              	.LBE2:
 133:Core/Src/adc.c **** 
 331              		.loc 1 133 5 view .LVU97
 135:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 332              		.loc 1 135 5 view .LVU98
 333              	.LBB3:
 135:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 334              		.loc 1 135 5 view .LVU99
 335 003e 0295     		str	r5, [sp, #8]
 135:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 336              		.loc 1 135 5 view .LVU100
 337 0040 1A6B     		ldr	r2, [r3, #48]
 338 0042 42F00102 		orr	r2, r2, #1
 339 0046 1A63     		str	r2, [r3, #48]
 135:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 340              		.loc 1 135 5 view .LVU101
 341 0048 1B6B     		ldr	r3, [r3, #48]
 342 004a 03F00103 		and	r3, r3, #1
 343 004e 0293     		str	r3, [sp, #8]
 135:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 344              		.loc 1 135 5 view .LVU102
 345 0050 029B     		ldr	r3, [sp, #8]
 346              	.LBE3:
 135:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 347              		.loc 1 135 5 view .LVU103
 143:Core/Src/adc.c ****                           |GPIO_PIN_4;
 348              		.loc 1 143 5 view .LVU104
 143:Core/Src/adc.c ****                           |GPIO_PIN_4;
 349              		.loc 1 143 25 is_stmt 0 view .LVU105
 350 0052 1F23     		movs	r3, #31
 351 0054 0393     		str	r3, [sp, #12]
 145:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 352              		.loc 1 145 5 is_stmt 1 view .LVU106
 145:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 353              		.loc 1 145 26 is_stmt 0 view .LVU107
 354 0056 0323     		movs	r3, #3
 355 0058 0493     		str	r3, [sp, #16]
 146:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 356              		.loc 1 146 5 is_stmt 1 view .LVU108
 147:Core/Src/adc.c **** 
 357              		.loc 1 147 5 view .LVU109
 358 005a 03A9     		add	r1, sp, #12
 359 005c 1448     		ldr	r0, .L25
 360              	.LVL17:
 147:Core/Src/adc.c **** 
 361              		.loc 1 147 5 is_stmt 0 view .LVU110
 362 005e FFF7FEFF 		bl	HAL_GPIO_Init
 363              	.LVL18:
 151:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 364              		.loc 1 151 5 is_stmt 1 view .LVU111
 151:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 365              		.loc 1 151 24 is_stmt 0 view .LVU112
 366 0062 1448     		ldr	r0, .L25+4
 367 0064 144B     		ldr	r3, .L25+8
 368 0066 0360     		str	r3, [r0]
 152:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 369              		.loc 1 152 5 is_stmt 1 view .LVU113
ARM GAS  /tmp/ccyfw4Y0.s 			page 11


 152:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 370              		.loc 1 152 28 is_stmt 0 view .LVU114
 371 0068 4560     		str	r5, [r0, #4]
 153:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 372              		.loc 1 153 5 is_stmt 1 view .LVU115
 153:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 373              		.loc 1 153 30 is_stmt 0 view .LVU116
 374 006a 8560     		str	r5, [r0, #8]
 154:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 375              		.loc 1 154 5 is_stmt 1 view .LVU117
 154:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 376              		.loc 1 154 30 is_stmt 0 view .LVU118
 377 006c C560     		str	r5, [r0, #12]
 155:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 378              		.loc 1 155 5 is_stmt 1 view .LVU119
 155:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 379              		.loc 1 155 27 is_stmt 0 view .LVU120
 380 006e 4FF48063 		mov	r3, #1024
 381 0072 0361     		str	r3, [r0, #16]
 156:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 382              		.loc 1 156 5 is_stmt 1 view .LVU121
 156:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 383              		.loc 1 156 40 is_stmt 0 view .LVU122
 384 0074 4FF40063 		mov	r3, #2048
 385 0078 4361     		str	r3, [r0, #20]
 157:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 386              		.loc 1 157 5 is_stmt 1 view .LVU123
 157:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 387              		.loc 1 157 37 is_stmt 0 view .LVU124
 388 007a 4FF40053 		mov	r3, #8192
 389 007e 8361     		str	r3, [r0, #24]
 158:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 390              		.loc 1 158 5 is_stmt 1 view .LVU125
 158:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 391              		.loc 1 158 25 is_stmt 0 view .LVU126
 392 0080 4FF48073 		mov	r3, #256
 393 0084 C361     		str	r3, [r0, #28]
 159:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 394              		.loc 1 159 5 is_stmt 1 view .LVU127
 159:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 395              		.loc 1 159 29 is_stmt 0 view .LVU128
 396 0086 0562     		str	r5, [r0, #32]
 160:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 397              		.loc 1 160 5 is_stmt 1 view .LVU129
 160:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 398              		.loc 1 160 29 is_stmt 0 view .LVU130
 399 0088 4562     		str	r5, [r0, #36]
 161:Core/Src/adc.c ****     {
 400              		.loc 1 161 5 is_stmt 1 view .LVU131
 161:Core/Src/adc.c ****     {
 401              		.loc 1 161 9 is_stmt 0 view .LVU132
 402 008a FFF7FEFF 		bl	HAL_DMA_Init
 403              	.LVL19:
 161:Core/Src/adc.c ****     {
 404              		.loc 1 161 8 view .LVU133
 405 008e 58B9     		cbnz	r0, .L24
 406              	.L21:
ARM GAS  /tmp/ccyfw4Y0.s 			page 12


 166:Core/Src/adc.c **** 
 407              		.loc 1 166 5 is_stmt 1 view .LVU134
 166:Core/Src/adc.c **** 
 408              		.loc 1 166 5 view .LVU135
 409 0090 084B     		ldr	r3, .L25+4
 410 0092 A363     		str	r3, [r4, #56]
 166:Core/Src/adc.c **** 
 411              		.loc 1 166 5 view .LVU136
 412 0094 9C63     		str	r4, [r3, #56]
 166:Core/Src/adc.c **** 
 413              		.loc 1 166 5 view .LVU137
 169:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 414              		.loc 1 169 5 view .LVU138
 415 0096 0022     		movs	r2, #0
 416 0098 1146     		mov	r1, r2
 417 009a 1220     		movs	r0, #18
 418 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 419              	.LVL20:
 170:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 420              		.loc 1 170 5 view .LVU139
 421 00a0 1220     		movs	r0, #18
 422 00a2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 423              	.LVL21:
 424              		.loc 1 175 1 is_stmt 0 view .LVU140
 425 00a6 BAE7     		b	.L19
 426              	.L24:
 163:Core/Src/adc.c ****     }
 427              		.loc 1 163 7 is_stmt 1 view .LVU141
 428 00a8 FFF7FEFF 		bl	Error_Handler
 429              	.LVL22:
 430 00ac F0E7     		b	.L21
 431              	.L26:
 432 00ae 00BF     		.align	2
 433              	.L25:
 434 00b0 00000240 		.word	1073872896
 435 00b4 00000000 		.word	.LANCHOR1
 436 00b8 10640240 		.word	1073898512
 437              		.cfi_endproc
 438              	.LFE221:
 440              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 441              		.align	1
 442              		.global	HAL_ADC_MspDeInit
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	HAL_ADC_MspDeInit:
 449              	.LVL23:
 450              	.LFB222:
 176:Core/Src/adc.c **** 
 177:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 178:Core/Src/adc.c **** {
 451              		.loc 1 178 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 179:Core/Src/adc.c **** 
ARM GAS  /tmp/ccyfw4Y0.s 			page 13


 180:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 455              		.loc 1 180 3 view .LVU143
 456              		.loc 1 180 15 is_stmt 0 view .LVU144
 457 0000 0268     		ldr	r2, [r0]
 458              		.loc 1 180 5 view .LVU145
 459 0002 0B4B     		ldr	r3, .L34
 460 0004 9A42     		cmp	r2, r3
 461 0006 00D0     		beq	.L33
 462 0008 7047     		bx	lr
 463              	.L33:
 178:Core/Src/adc.c **** 
 464              		.loc 1 178 1 view .LVU146
 465 000a 10B5     		push	{r4, lr}
 466              	.LCFI8:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 470 000c 0446     		mov	r4, r0
 181:Core/Src/adc.c ****   {
 182:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 183:Core/Src/adc.c **** 
 184:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 185:Core/Src/adc.c ****     /* Peripheral clock disable */
 186:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 471              		.loc 1 186 5 is_stmt 1 view .LVU147
 472 000e 094A     		ldr	r2, .L34+4
 473 0010 536C     		ldr	r3, [r2, #68]
 474 0012 23F48073 		bic	r3, r3, #256
 475 0016 5364     		str	r3, [r2, #68]
 187:Core/Src/adc.c **** 
 188:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 189:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 190:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 191:Core/Src/adc.c ****     PA2     ------> ADC1_IN2
 192:Core/Src/adc.c ****     PA3     ------> ADC1_IN3
 193:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 194:Core/Src/adc.c ****     */
 195:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 476              		.loc 1 195 5 view .LVU148
 477 0018 1F21     		movs	r1, #31
 478 001a 0748     		ldr	r0, .L34+8
 479              	.LVL24:
 480              		.loc 1 195 5 is_stmt 0 view .LVU149
 481 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 482              	.LVL25:
 196:Core/Src/adc.c ****                           |GPIO_PIN_4);
 197:Core/Src/adc.c **** 
 198:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 199:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 483              		.loc 1 199 5 is_stmt 1 view .LVU150
 484 0020 A06B     		ldr	r0, [r4, #56]
 485 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 486              	.LVL26:
 200:Core/Src/adc.c **** 
 201:Core/Src/adc.c ****     /* ADC1 interrupt Deinit */
 202:Core/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 487              		.loc 1 202 5 view .LVU151
ARM GAS  /tmp/ccyfw4Y0.s 			page 14


 488 0026 1220     		movs	r0, #18
 489 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 490              	.LVL27:
 203:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 204:Core/Src/adc.c **** 
 205:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 206:Core/Src/adc.c ****   }
 207:Core/Src/adc.c **** }
 491              		.loc 1 207 1 is_stmt 0 view .LVU152
 492 002c 10BD     		pop	{r4, pc}
 493              	.LVL28:
 494              	.L35:
 495              		.loc 1 207 1 view .LVU153
 496 002e 00BF     		.align	2
 497              	.L34:
 498 0030 00200140 		.word	1073815552
 499 0034 00380240 		.word	1073887232
 500 0038 00000240 		.word	1073872896
 501              		.cfi_endproc
 502              	.LFE222:
 504              		.global	hdma_adc1
 505              		.global	hadc1
 506              		.section	.bss.hadc1,"aw",%nobits
 507              		.align	2
 508              		.set	.LANCHOR0,. + 0
 511              	hadc1:
 512 0000 00000000 		.space	72
 512      00000000 
 512      00000000 
 512      00000000 
 512      00000000 
 513              		.section	.bss.hdma_adc1,"aw",%nobits
 514              		.align	2
 515              		.set	.LANCHOR1,. + 0
 518              	hdma_adc1:
 519 0000 00000000 		.space	96
 519      00000000 
 519      00000000 
 519      00000000 
 519      00000000 
 520              		.text
 521              	.Letext0:
 522              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 523              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 524              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 525              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 526              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 527              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 528              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 529              		.file 9 "Core/Inc/adc.h"
 530              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 531              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccyfw4Y0.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccyfw4Y0.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccyfw4Y0.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccyfw4Y0.s:251    .text.MX_ADC1_Init:00000000000000e0 $d
     /tmp/ccyfw4Y0.s:259    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccyfw4Y0.s:266    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccyfw4Y0.s:434    .text.HAL_ADC_MspInit:00000000000000b0 $d
     /tmp/ccyfw4Y0.s:441    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccyfw4Y0.s:448    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccyfw4Y0.s:498    .text.HAL_ADC_MspDeInit:0000000000000030 $d
     /tmp/ccyfw4Y0.s:518    .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/ccyfw4Y0.s:511    .bss.hadc1:0000000000000000 hadc1
     /tmp/ccyfw4Y0.s:507    .bss.hadc1:0000000000000000 $d
     /tmp/ccyfw4Y0.s:514    .bss.hdma_adc1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
