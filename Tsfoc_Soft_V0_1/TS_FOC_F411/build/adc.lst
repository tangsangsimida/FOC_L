ARM GAS  /tmp/cc45Fxhx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB220:
  28              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
ARM GAS  /tmp/cc45Fxhx.s 			page 2


  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 8CB0     		sub	sp, sp, #48
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  41              		.loc 1 38 3 view .LVU1
  42              		.loc 1 38 26 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0894     		str	r4, [sp, #32]
  45 0008 0994     		str	r4, [sp, #36]
  46 000a 0A94     		str	r4, [sp, #40]
  47 000c 0B94     		str	r4, [sp, #44]
  39:Core/Src/adc.c ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
  48              		.loc 1 39 3 is_stmt 1 view .LVU3
  49              		.loc 1 39 28 is_stmt 0 view .LVU4
  50 000e 2022     		movs	r2, #32
  51 0010 2146     		mov	r1, r4
  52 0012 6846     		mov	r0, sp
  53 0014 FFF7FEFF 		bl	memset
  54              	.LVL0:
  40:Core/Src/adc.c **** 
  41:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  42:Core/Src/adc.c **** 
  43:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  44:Core/Src/adc.c **** 
  45:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  46:Core/Src/adc.c ****   */
  47:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  55              		.loc 1 47 3 is_stmt 1 view .LVU5
  56              		.loc 1 47 18 is_stmt 0 view .LVU6
  57 0018 1F48     		ldr	r0, .L9
  58 001a 204B     		ldr	r3, .L9+4
  59 001c 0360     		str	r3, [r0]
  48:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  60              		.loc 1 48 3 is_stmt 1 view .LVU7
  61              		.loc 1 48 29 is_stmt 0 view .LVU8
  62 001e 4FF48033 		mov	r3, #65536
  63 0022 4360     		str	r3, [r0, #4]
  49:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  64              		.loc 1 49 3 is_stmt 1 view .LVU9
  65              		.loc 1 49 25 is_stmt 0 view .LVU10
  66 0024 8460     		str	r4, [r0, #8]
ARM GAS  /tmp/cc45Fxhx.s 			page 3


  50:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = DISABLE;
  67              		.loc 1 50 3 is_stmt 1 view .LVU11
  68              		.loc 1 50 27 is_stmt 0 view .LVU12
  69 0026 0461     		str	r4, [r0, #16]
  51:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  70              		.loc 1 51 3 is_stmt 1 view .LVU13
  71              		.loc 1 51 33 is_stmt 0 view .LVU14
  72 0028 0123     		movs	r3, #1
  73 002a 0376     		strb	r3, [r0, #24]
  52:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  74              		.loc 1 52 3 is_stmt 1 view .LVU15
  75              		.loc 1 52 36 is_stmt 0 view .LVU16
  76 002c 80F82040 		strb	r4, [r0, #32]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  77              		.loc 1 53 3 is_stmt 1 view .LVU17
  78              		.loc 1 53 35 is_stmt 0 view .LVU18
  79 0030 C462     		str	r4, [r0, #44]
  54:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  80              		.loc 1 54 3 is_stmt 1 view .LVU19
  81              		.loc 1 54 31 is_stmt 0 view .LVU20
  82 0032 1B4A     		ldr	r2, .L9+8
  83 0034 8262     		str	r2, [r0, #40]
  55:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  84              		.loc 1 55 3 is_stmt 1 view .LVU21
  85              		.loc 1 55 24 is_stmt 0 view .LVU22
  86 0036 C460     		str	r4, [r0, #12]
  56:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 1;
  87              		.loc 1 56 3 is_stmt 1 view .LVU23
  88              		.loc 1 56 30 is_stmt 0 view .LVU24
  89 0038 C361     		str	r3, [r0, #28]
  57:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  90              		.loc 1 57 3 is_stmt 1 view .LVU25
  91              		.loc 1 57 36 is_stmt 0 view .LVU26
  92 003a 80F83030 		strb	r3, [r0, #48]
  58:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  93              		.loc 1 58 3 is_stmt 1 view .LVU27
  94              		.loc 1 58 27 is_stmt 0 view .LVU28
  95 003e 4361     		str	r3, [r0, #20]
  59:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  96              		.loc 1 59 3 is_stmt 1 view .LVU29
  97              		.loc 1 59 7 is_stmt 0 view .LVU30
  98 0040 FFF7FEFF 		bl	HAL_ADC_Init
  99              	.LVL1:
 100              		.loc 1 59 6 view .LVU31
 101 0044 F8B9     		cbnz	r0, .L6
 102              	.L2:
  60:Core/Src/adc.c ****   {
  61:Core/Src/adc.c ****     Error_Handler();
  62:Core/Src/adc.c ****   }
  63:Core/Src/adc.c **** 
  64:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  65:Core/Src/adc.c ****   */
  66:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 103              		.loc 1 66 3 is_stmt 1 view .LVU32
 104              		.loc 1 66 19 is_stmt 0 view .LVU33
 105 0046 174B     		ldr	r3, .L9+12
 106 0048 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/cc45Fxhx.s 			page 4


  67:Core/Src/adc.c ****   sConfig.Rank = 1;
 107              		.loc 1 67 3 is_stmt 1 view .LVU34
 108              		.loc 1 67 16 is_stmt 0 view .LVU35
 109 004a 0123     		movs	r3, #1
 110 004c 0993     		str	r3, [sp, #36]
  68:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 111              		.loc 1 68 3 is_stmt 1 view .LVU36
 112              		.loc 1 68 24 is_stmt 0 view .LVU37
 113 004e 0A93     		str	r3, [sp, #40]
  69:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 114              		.loc 1 69 3 is_stmt 1 view .LVU38
 115              		.loc 1 69 7 is_stmt 0 view .LVU39
 116 0050 08A9     		add	r1, sp, #32
 117 0052 1148     		ldr	r0, .L9
 118 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 119              	.LVL2:
 120              		.loc 1 69 6 view .LVU40
 121 0058 C0B9     		cbnz	r0, .L7
 122              	.L3:
  70:Core/Src/adc.c ****   {
  71:Core/Src/adc.c ****     Error_Handler();
  72:Core/Src/adc.c ****   }
  73:Core/Src/adc.c **** 
  74:Core/Src/adc.c ****   /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and 
  75:Core/Src/adc.c ****   */
  76:Core/Src/adc.c ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_TEMPSENSOR;
 123              		.loc 1 76 3 is_stmt 1 view .LVU41
 124              		.loc 1 76 35 is_stmt 0 view .LVU42
 125 005a 124B     		ldr	r3, .L9+12
 126 005c 0093     		str	r3, [sp]
  77:Core/Src/adc.c ****   sConfigInjected.InjectedRank = 1;
 127              		.loc 1 77 3 is_stmt 1 view .LVU43
 128              		.loc 1 77 32 is_stmt 0 view .LVU44
 129 005e 0123     		movs	r3, #1
 130 0060 0193     		str	r3, [sp, #4]
  78:Core/Src/adc.c ****   sConfigInjected.InjectedNbrOfConversion = 1;
 131              		.loc 1 78 3 is_stmt 1 view .LVU45
 132              		.loc 1 78 43 is_stmt 0 view .LVU46
 133 0062 0493     		str	r3, [sp, #16]
  79:Core/Src/adc.c ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_15CYCLES;
 134              		.loc 1 79 3 is_stmt 1 view .LVU47
 135              		.loc 1 79 40 is_stmt 0 view .LVU48
 136 0064 0293     		str	r3, [sp, #8]
  80:Core/Src/adc.c ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 137              		.loc 1 80 3 is_stmt 1 view .LVU49
 138              		.loc 1 80 45 is_stmt 0 view .LVU50
 139 0066 0022     		movs	r2, #0
 140 0068 0792     		str	r2, [sp, #28]
  81:Core/Src/adc.c ****   sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 141              		.loc 1 81 3 is_stmt 1 view .LVU51
 142              		.loc 1 81 41 is_stmt 0 view .LVU52
 143 006a 0F49     		ldr	r1, .L9+16
 144 006c 0691     		str	r1, [sp, #24]
  82:Core/Src/adc.c ****   sConfigInjected.AutoInjectedConv = ENABLE;
 145              		.loc 1 82 3 is_stmt 1 view .LVU53
 146              		.loc 1 82 36 is_stmt 0 view .LVU54
 147 006e 8DF81530 		strb	r3, [sp, #21]
ARM GAS  /tmp/cc45Fxhx.s 			page 5


  83:Core/Src/adc.c ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 148              		.loc 1 83 3 is_stmt 1 view .LVU55
 149              		.loc 1 83 49 is_stmt 0 view .LVU56
 150 0072 8DF81420 		strb	r2, [sp, #20]
  84:Core/Src/adc.c ****   sConfigInjected.InjectedOffset = 0;
 151              		.loc 1 84 3 is_stmt 1 view .LVU57
 152              		.loc 1 84 34 is_stmt 0 view .LVU58
 153 0076 0392     		str	r2, [sp, #12]
  85:Core/Src/adc.c ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 154              		.loc 1 85 3 is_stmt 1 view .LVU59
 155              		.loc 1 85 7 is_stmt 0 view .LVU60
 156 0078 6946     		mov	r1, sp
 157 007a 0748     		ldr	r0, .L9
 158 007c FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 159              	.LVL3:
 160              		.loc 1 85 6 view .LVU61
 161 0080 38B9     		cbnz	r0, .L8
 162              	.L1:
  86:Core/Src/adc.c ****   {
  87:Core/Src/adc.c ****     Error_Handler();
  88:Core/Src/adc.c ****   }
  89:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
  90:Core/Src/adc.c **** 
  91:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
  92:Core/Src/adc.c **** 
  93:Core/Src/adc.c **** }
 163              		.loc 1 93 1 view .LVU62
 164 0082 0CB0     		add	sp, sp, #48
 165              	.LCFI2:
 166              		.cfi_remember_state
 167              		.cfi_def_cfa_offset 8
 168              		@ sp needed
 169 0084 10BD     		pop	{r4, pc}
 170              	.L6:
 171              	.LCFI3:
 172              		.cfi_restore_state
  61:Core/Src/adc.c ****   }
 173              		.loc 1 61 5 is_stmt 1 view .LVU63
 174 0086 FFF7FEFF 		bl	Error_Handler
 175              	.LVL4:
 176 008a DCE7     		b	.L2
 177              	.L7:
  71:Core/Src/adc.c ****   }
 178              		.loc 1 71 5 view .LVU64
 179 008c FFF7FEFF 		bl	Error_Handler
 180              	.LVL5:
 181 0090 E3E7     		b	.L3
 182              	.L8:
  87:Core/Src/adc.c ****   }
 183              		.loc 1 87 5 view .LVU65
 184 0092 FFF7FEFF 		bl	Error_Handler
 185              	.LVL6:
 186              		.loc 1 93 1 is_stmt 0 view .LVU66
 187 0096 F4E7     		b	.L1
 188              	.L10:
 189              		.align	2
 190              	.L9:
ARM GAS  /tmp/cc45Fxhx.s 			page 6


 191 0098 00000000 		.word	.LANCHOR0
 192 009c 00200140 		.word	1073815552
 193 00a0 0100000F 		.word	251658241
 194 00a4 12000010 		.word	268435474
 195 00a8 01000F00 		.word	983041
 196              		.cfi_endproc
 197              	.LFE220:
 199              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 200              		.align	1
 201              		.global	HAL_ADC_MspInit
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	HAL_ADC_MspInit:
 208              	.LVL7:
 209              	.LFB221:
  94:Core/Src/adc.c **** 
  95:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  96:Core/Src/adc.c **** {
 210              		.loc 1 96 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 0, uses_anonymous_args = 0
  97:Core/Src/adc.c **** 
  98:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 214              		.loc 1 98 3 view .LVU68
 215              		.loc 1 98 15 is_stmt 0 view .LVU69
 216 0000 0268     		ldr	r2, [r0]
 217              		.loc 1 98 5 view .LVU70
 218 0002 1D4B     		ldr	r3, .L20
 219 0004 9A42     		cmp	r2, r3
 220 0006 00D0     		beq	.L18
 221 0008 7047     		bx	lr
 222              	.L18:
  96:Core/Src/adc.c **** 
 223              		.loc 1 96 1 view .LVU71
 224 000a 10B5     		push	{r4, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229 000c 82B0     		sub	sp, sp, #8
 230              	.LCFI5:
 231              		.cfi_def_cfa_offset 16
 232 000e 0446     		mov	r4, r0
  99:Core/Src/adc.c ****   {
 100:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 101:Core/Src/adc.c **** 
 102:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 103:Core/Src/adc.c ****     /* ADC1 clock enable */
 104:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 233              		.loc 1 104 5 is_stmt 1 view .LVU72
 234              	.LBB2:
 235              		.loc 1 104 5 view .LVU73
 236 0010 0023     		movs	r3, #0
 237 0012 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc45Fxhx.s 			page 7


 238              		.loc 1 104 5 view .LVU74
 239 0014 194A     		ldr	r2, .L20+4
 240 0016 516C     		ldr	r1, [r2, #68]
 241 0018 41F48071 		orr	r1, r1, #256
 242 001c 5164     		str	r1, [r2, #68]
 243              		.loc 1 104 5 view .LVU75
 244 001e 526C     		ldr	r2, [r2, #68]
 245 0020 02F48072 		and	r2, r2, #256
 246 0024 0192     		str	r2, [sp, #4]
 247              		.loc 1 104 5 view .LVU76
 248 0026 019A     		ldr	r2, [sp, #4]
 249              	.LBE2:
 250              		.loc 1 104 5 view .LVU77
 105:Core/Src/adc.c **** 
 106:Core/Src/adc.c ****     /* ADC1 DMA Init */
 107:Core/Src/adc.c ****     /* ADC1 Init */
 108:Core/Src/adc.c ****     hdma_adc1.Instance = DMA2_Stream4;
 251              		.loc 1 108 5 view .LVU78
 252              		.loc 1 108 24 is_stmt 0 view .LVU79
 253 0028 1548     		ldr	r0, .L20+8
 254              	.LVL8:
 255              		.loc 1 108 24 view .LVU80
 256 002a 164A     		ldr	r2, .L20+12
 257 002c 0260     		str	r2, [r0]
 109:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 258              		.loc 1 109 5 is_stmt 1 view .LVU81
 259              		.loc 1 109 28 is_stmt 0 view .LVU82
 260 002e 4360     		str	r3, [r0, #4]
 110:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 261              		.loc 1 110 5 is_stmt 1 view .LVU83
 262              		.loc 1 110 30 is_stmt 0 view .LVU84
 263 0030 8360     		str	r3, [r0, #8]
 111:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 264              		.loc 1 111 5 is_stmt 1 view .LVU85
 265              		.loc 1 111 30 is_stmt 0 view .LVU86
 266 0032 C360     		str	r3, [r0, #12]
 112:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 267              		.loc 1 112 5 is_stmt 1 view .LVU87
 268              		.loc 1 112 27 is_stmt 0 view .LVU88
 269 0034 4FF48062 		mov	r2, #1024
 270 0038 0261     		str	r2, [r0, #16]
 113:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 271              		.loc 1 113 5 is_stmt 1 view .LVU89
 272              		.loc 1 113 40 is_stmt 0 view .LVU90
 273 003a 4FF40062 		mov	r2, #2048
 274 003e 4261     		str	r2, [r0, #20]
 114:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 275              		.loc 1 114 5 is_stmt 1 view .LVU91
 276              		.loc 1 114 37 is_stmt 0 view .LVU92
 277 0040 4FF40052 		mov	r2, #8192
 278 0044 8261     		str	r2, [r0, #24]
 115:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 279              		.loc 1 115 5 is_stmt 1 view .LVU93
 280              		.loc 1 115 25 is_stmt 0 view .LVU94
 281 0046 4FF48072 		mov	r2, #256
 282 004a C261     		str	r2, [r0, #28]
 116:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
ARM GAS  /tmp/cc45Fxhx.s 			page 8


 283              		.loc 1 116 5 is_stmt 1 view .LVU95
 284              		.loc 1 116 29 is_stmt 0 view .LVU96
 285 004c 0362     		str	r3, [r0, #32]
 117:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 286              		.loc 1 117 5 is_stmt 1 view .LVU97
 287              		.loc 1 117 29 is_stmt 0 view .LVU98
 288 004e 4362     		str	r3, [r0, #36]
 118:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 289              		.loc 1 118 5 is_stmt 1 view .LVU99
 290              		.loc 1 118 9 is_stmt 0 view .LVU100
 291 0050 FFF7FEFF 		bl	HAL_DMA_Init
 292              	.LVL9:
 293              		.loc 1 118 8 view .LVU101
 294 0054 60B9     		cbnz	r0, .L19
 295              	.L13:
 119:Core/Src/adc.c ****     {
 120:Core/Src/adc.c ****       Error_Handler();
 121:Core/Src/adc.c ****     }
 122:Core/Src/adc.c **** 
 123:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 296              		.loc 1 123 5 is_stmt 1 view .LVU102
 297              		.loc 1 123 5 view .LVU103
 298 0056 0A4B     		ldr	r3, .L20+8
 299 0058 A363     		str	r3, [r4, #56]
 300              		.loc 1 123 5 view .LVU104
 301 005a 9C63     		str	r4, [r3, #56]
 302              		.loc 1 123 5 view .LVU105
 124:Core/Src/adc.c **** 
 125:Core/Src/adc.c ****     /* ADC1 interrupt Init */
 126:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 303              		.loc 1 126 5 view .LVU106
 304 005c 0022     		movs	r2, #0
 305 005e 1146     		mov	r1, r2
 306 0060 1220     		movs	r0, #18
 307 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 308              	.LVL10:
 127:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 309              		.loc 1 127 5 view .LVU107
 310 0066 1220     		movs	r0, #18
 311 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 312              	.LVL11:
 128:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 129:Core/Src/adc.c **** 
 130:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 131:Core/Src/adc.c ****   }
 132:Core/Src/adc.c **** }
 313              		.loc 1 132 1 is_stmt 0 view .LVU108
 314 006c 02B0     		add	sp, sp, #8
 315              	.LCFI6:
 316              		.cfi_remember_state
 317              		.cfi_def_cfa_offset 8
 318              		@ sp needed
 319 006e 10BD     		pop	{r4, pc}
 320              	.LVL12:
 321              	.L19:
 322              	.LCFI7:
 323              		.cfi_restore_state
ARM GAS  /tmp/cc45Fxhx.s 			page 9


 120:Core/Src/adc.c ****     }
 324              		.loc 1 120 7 is_stmt 1 view .LVU109
 325 0070 FFF7FEFF 		bl	Error_Handler
 326              	.LVL13:
 327 0074 EFE7     		b	.L13
 328              	.L21:
 329 0076 00BF     		.align	2
 330              	.L20:
 331 0078 00200140 		.word	1073815552
 332 007c 00380240 		.word	1073887232
 333 0080 00000000 		.word	.LANCHOR1
 334 0084 70640240 		.word	1073898608
 335              		.cfi_endproc
 336              	.LFE221:
 338              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 339              		.align	1
 340              		.global	HAL_ADC_MspDeInit
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	HAL_ADC_MspDeInit:
 347              	.LVL14:
 348              	.LFB222:
 133:Core/Src/adc.c **** 
 134:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 135:Core/Src/adc.c **** {
 349              		.loc 1 135 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		.loc 1 135 1 is_stmt 0 view .LVU111
 354 0000 08B5     		push	{r3, lr}
 355              	.LCFI8:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 359              		.loc 1 137 3 is_stmt 1 view .LVU112
 360              		.loc 1 137 15 is_stmt 0 view .LVU113
 361 0002 0268     		ldr	r2, [r0]
 362              		.loc 1 137 5 view .LVU114
 363 0004 074B     		ldr	r3, .L26
 364 0006 9A42     		cmp	r2, r3
 365 0008 00D0     		beq	.L25
 366              	.LVL15:
 367              	.L22:
 138:Core/Src/adc.c ****   {
 139:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 140:Core/Src/adc.c **** 
 141:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 142:Core/Src/adc.c ****     /* Peripheral clock disable */
 143:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 144:Core/Src/adc.c **** 
 145:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 146:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
ARM GAS  /tmp/cc45Fxhx.s 			page 10


 147:Core/Src/adc.c **** 
 148:Core/Src/adc.c ****     /* ADC1 interrupt Deinit */
 149:Core/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 150:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 151:Core/Src/adc.c **** 
 152:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 153:Core/Src/adc.c ****   }
 154:Core/Src/adc.c **** }
 368              		.loc 1 154 1 view .LVU115
 369 000a 08BD     		pop	{r3, pc}
 370              	.LVL16:
 371              	.L25:
 143:Core/Src/adc.c **** 
 372              		.loc 1 143 5 is_stmt 1 view .LVU116
 373 000c 064A     		ldr	r2, .L26+4
 374 000e 536C     		ldr	r3, [r2, #68]
 375 0010 23F48073 		bic	r3, r3, #256
 376 0014 5364     		str	r3, [r2, #68]
 146:Core/Src/adc.c **** 
 377              		.loc 1 146 5 view .LVU117
 378 0016 806B     		ldr	r0, [r0, #56]
 379              	.LVL17:
 146:Core/Src/adc.c **** 
 380              		.loc 1 146 5 is_stmt 0 view .LVU118
 381 0018 FFF7FEFF 		bl	HAL_DMA_DeInit
 382              	.LVL18:
 149:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 383              		.loc 1 149 5 is_stmt 1 view .LVU119
 384 001c 1220     		movs	r0, #18
 385 001e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 386              	.LVL19:
 387              		.loc 1 154 1 is_stmt 0 view .LVU120
 388 0022 F2E7     		b	.L22
 389              	.L27:
 390              		.align	2
 391              	.L26:
 392 0024 00200140 		.word	1073815552
 393 0028 00380240 		.word	1073887232
 394              		.cfi_endproc
 395              	.LFE222:
 397              		.global	hdma_adc1
 398              		.global	hadc1
 399              		.section	.bss.hadc1,"aw",%nobits
 400              		.align	2
 401              		.set	.LANCHOR0,. + 0
 404              	hadc1:
 405 0000 00000000 		.space	72
 405      00000000 
 405      00000000 
 405      00000000 
 405      00000000 
 406              		.section	.bss.hdma_adc1,"aw",%nobits
 407              		.align	2
 408              		.set	.LANCHOR1,. + 0
 411              	hdma_adc1:
 412 0000 00000000 		.space	96
 412      00000000 
ARM GAS  /tmp/cc45Fxhx.s 			page 11


 412      00000000 
 412      00000000 
 412      00000000 
 413              		.text
 414              	.Letext0:
 415              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 416              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 417              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 418              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 419              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 420              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 421              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc_ex.h"
 422              		.file 9 "Core/Inc/adc.h"
 423              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 424              		.file 11 "Core/Inc/main.h"
 425              		.file 12 "<built-in>"
ARM GAS  /tmp/cc45Fxhx.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cc45Fxhx.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc45Fxhx.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc45Fxhx.s:191    .text.MX_ADC1_Init:0000000000000098 $d
     /tmp/cc45Fxhx.s:200    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cc45Fxhx.s:207    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cc45Fxhx.s:331    .text.HAL_ADC_MspInit:0000000000000078 $d
     /tmp/cc45Fxhx.s:339    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cc45Fxhx.s:346    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cc45Fxhx.s:392    .text.HAL_ADC_MspDeInit:0000000000000024 $d
     /tmp/cc45Fxhx.s:411    .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/cc45Fxhx.s:404    .bss.hadc1:0000000000000000 hadc1
     /tmp/cc45Fxhx.s:400    .bss.hadc1:0000000000000000 $d
     /tmp/cc45Fxhx.s:407    .bss.hdma_adc1:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_ADCEx_InjectedConfigChannel
Error_Handler
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
