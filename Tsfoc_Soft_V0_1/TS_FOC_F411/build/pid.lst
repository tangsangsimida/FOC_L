ARM GAS  /tmp/ccvfCoQR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"pid.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Pid_Vel_Init,"ax",%progbits
  18              		.align	1
  19              		.global	Pid_Vel_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Pid_Vel_Init:
  27              	.LVL0:
  28              	.LFB223:
  29              		.file 1 "usr/pid.c"
   1:usr/pid.c     **** #include "pid.h"
   2:usr/pid.c     **** 
   3:usr/pid.c     **** /// @brief PID_Vel控制器初始化
   4:usr/pid.c     **** /// @param Pid 
   5:usr/pid.c     **** /// @param P 
   6:usr/pid.c     **** /// @param I 
   7:usr/pid.c     **** /// @param D 
   8:usr/pid.c     **** /// @param ramp     PID控制器加速度限幅
   9:usr/pid.c     **** /// @param limit    PID控制器输出限幅
  10:usr/pid.c     **** void Pid_Vel_Init(Pid_Typedef* Pid , float P, float I, float D, float ramp, float limit)
  11:usr/pid.c     **** {
  30              		.loc 1 11 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 11 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  12:usr/pid.c     ****     Pid->P = P;
  41              		.loc 1 12 5 is_stmt 1 view .LVU2
  42              		.loc 1 12 12 is_stmt 0 view .LVU3
  43 0004 80ED000A 		vstr.32	s0, [r0]
  13:usr/pid.c     ****     Pid->I = I;
  44              		.loc 1 13 5 is_stmt 1 view .LVU4
  45              		.loc 1 13 12 is_stmt 0 view .LVU5
ARM GAS  /tmp/ccvfCoQR.s 			page 2


  46 0008 C0ED010A 		vstr.32	s1, [r0, #4]
  14:usr/pid.c     ****     Pid->D = D;
  47              		.loc 1 14 5 is_stmt 1 view .LVU6
  48              		.loc 1 14 12 is_stmt 0 view .LVU7
  49 000c 80ED021A 		vstr.32	s2, [r0, #8]
  15:usr/pid.c     ****     Pid->output_ramp = ramp;                //PID控制器加速度限幅
  50              		.loc 1 15 5 is_stmt 1 view .LVU8
  51              		.loc 1 15 22 is_stmt 0 view .LVU9
  52 0010 C0ED031A 		vstr.32	s3, [r0, #12]
  16:usr/pid.c     ****     Pid->limit = limit;
  53              		.loc 1 16 5 is_stmt 1 view .LVU10
  54              		.loc 1 16 16 is_stmt 0 view .LVU11
  55 0014 80ED042A 		vstr.32	s4, [r0, #16]
  17:usr/pid.c     ****     Pid->timestamp_prev = HAL_GetTick();
  56              		.loc 1 17 5 is_stmt 1 view .LVU12
  57              		.loc 1 17 27 is_stmt 0 view .LVU13
  58 0018 FFF7FEFF 		bl	HAL_GetTick
  59              	.LVL1:
  60              		.loc 1 17 25 view .LVU14
  61 001c 2062     		str	r0, [r4, #32]
  18:usr/pid.c     **** }
  62              		.loc 1 18 1 view .LVU15
  63 001e 10BD     		pop	{r4, pc}
  64              		.loc 1 18 1 view .LVU16
  65              		.cfi_endproc
  66              	.LFE223:
  68              		.section	.text.Pid_Ang_Init,"ax",%progbits
  69              		.align	1
  70              		.global	Pid_Ang_Init
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	Pid_Ang_Init:
  77              	.LVL2:
  78              	.LFB224:
  19:usr/pid.c     **** 
  20:usr/pid.c     **** /// @brief PID_Ang控制器初始化
  21:usr/pid.c     **** /// @param Pid 
  22:usr/pid.c     **** /// @param P 
  23:usr/pid.c     **** /// @param I 
  24:usr/pid.c     **** /// @param D 
  25:usr/pid.c     **** /// @param ramp     PID控制器加速度限幅
  26:usr/pid.c     **** /// @param limit    PID控制器输出限幅
  27:usr/pid.c     **** void Pid_Ang_Init(Pid_Typedef* Pid , float P, float I, float D, float ramp, float limit)
  28:usr/pid.c     **** {
  79              		.loc 1 28 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 28 1 is_stmt 0 view .LVU18
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccvfCoQR.s 			page 3


  29:usr/pid.c     ****     Pid->P = P;
  90              		.loc 1 29 5 is_stmt 1 view .LVU19
  91              		.loc 1 29 12 is_stmt 0 view .LVU20
  92 0004 80ED000A 		vstr.32	s0, [r0]
  30:usr/pid.c     ****     Pid->I = I;
  93              		.loc 1 30 5 is_stmt 1 view .LVU21
  94              		.loc 1 30 12 is_stmt 0 view .LVU22
  95 0008 C0ED010A 		vstr.32	s1, [r0, #4]
  31:usr/pid.c     ****     Pid->D = D;
  96              		.loc 1 31 5 is_stmt 1 view .LVU23
  97              		.loc 1 31 12 is_stmt 0 view .LVU24
  98 000c 80ED021A 		vstr.32	s2, [r0, #8]
  32:usr/pid.c     ****     Pid->output_ramp = ramp;                //PID控制器加速度限幅
  99              		.loc 1 32 5 is_stmt 1 view .LVU25
 100              		.loc 1 32 22 is_stmt 0 view .LVU26
 101 0010 C0ED031A 		vstr.32	s3, [r0, #12]
  33:usr/pid.c     ****     Pid->limit = limit;
 102              		.loc 1 33 5 is_stmt 1 view .LVU27
 103              		.loc 1 33 16 is_stmt 0 view .LVU28
 104 0014 80ED042A 		vstr.32	s4, [r0, #16]
  34:usr/pid.c     ****     Pid->timestamp_prev = HAL_GetTick();
 105              		.loc 1 34 5 is_stmt 1 view .LVU29
 106              		.loc 1 34 27 is_stmt 0 view .LVU30
 107 0018 FFF7FEFF 		bl	HAL_GetTick
 108              	.LVL3:
 109              		.loc 1 34 25 view .LVU31
 110 001c 2062     		str	r0, [r4, #32]
  35:usr/pid.c     **** }
 111              		.loc 1 35 1 view .LVU32
 112 001e 10BD     		pop	{r4, pc}
 113              		.loc 1 35 1 view .LVU33
 114              		.cfi_endproc
 115              	.LFE224:
 117              		.section	.text.Pid_Curr_Init,"ax",%progbits
 118              		.align	1
 119              		.global	Pid_Curr_Init
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	Pid_Curr_Init:
 126              	.LVL4:
 127              	.LFB225:
  36:usr/pid.c     **** 
  37:usr/pid.c     **** /// @brief PID_Curr控制器初始化
  38:usr/pid.c     **** /// @param Pid 
  39:usr/pid.c     **** /// @param P 
  40:usr/pid.c     **** /// @param I 
  41:usr/pid.c     **** /// @param D 
  42:usr/pid.c     **** /// @param ramp     PID控制器加速度限幅
  43:usr/pid.c     **** /// @param limit    PID控制器输出限幅
  44:usr/pid.c     **** void Pid_Curr_Init(Pid_Typedef* Pid , float P, float I, float D, float ramp, float limit)
  45:usr/pid.c     **** {
 128              		.loc 1 45 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvfCoQR.s 			page 4


 132              		.loc 1 45 1 is_stmt 0 view .LVU35
 133 0000 10B5     		push	{r4, lr}
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0002 0446     		mov	r4, r0
  46:usr/pid.c     ****     Pid->P = P;
 139              		.loc 1 46 5 is_stmt 1 view .LVU36
 140              		.loc 1 46 12 is_stmt 0 view .LVU37
 141 0004 80ED000A 		vstr.32	s0, [r0]
  47:usr/pid.c     ****     Pid->I = I;
 142              		.loc 1 47 5 is_stmt 1 view .LVU38
 143              		.loc 1 47 12 is_stmt 0 view .LVU39
 144 0008 C0ED010A 		vstr.32	s1, [r0, #4]
  48:usr/pid.c     ****     Pid->D = D;
 145              		.loc 1 48 5 is_stmt 1 view .LVU40
 146              		.loc 1 48 12 is_stmt 0 view .LVU41
 147 000c 80ED021A 		vstr.32	s2, [r0, #8]
  49:usr/pid.c     ****     Pid->output_ramp = ramp;                //PID控制器加速度限幅
 148              		.loc 1 49 5 is_stmt 1 view .LVU42
 149              		.loc 1 49 22 is_stmt 0 view .LVU43
 150 0010 C0ED031A 		vstr.32	s3, [r0, #12]
  50:usr/pid.c     ****     Pid->limit = limit;                     //PID控制器输出限幅
 151              		.loc 1 50 5 is_stmt 1 view .LVU44
 152              		.loc 1 50 16 is_stmt 0 view .LVU45
 153 0014 80ED042A 		vstr.32	s4, [r0, #16]
  51:usr/pid.c     ****     Pid->timestamp_prev = HAL_GetTick();
 154              		.loc 1 51 5 is_stmt 1 view .LVU46
 155              		.loc 1 51 27 is_stmt 0 view .LVU47
 156 0018 FFF7FEFF 		bl	HAL_GetTick
 157              	.LVL5:
 158              		.loc 1 51 25 view .LVU48
 159 001c 2062     		str	r0, [r4, #32]
  52:usr/pid.c     **** }
 160              		.loc 1 52 1 view .LVU49
 161 001e 10BD     		pop	{r4, pc}
 162              		.loc 1 52 1 view .LVU50
 163              		.cfi_endproc
 164              	.LFE225:
 166              		.section	.text.Pid_clac,"ax",%progbits
 167              		.align	1
 168              		.global	Pid_clac
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	Pid_clac:
 175              	.LVL6:
 176              	.LFB226:
  53:usr/pid.c     **** 
  54:usr/pid.c     **** /// @brief PID控制器
  55:usr/pid.c     **** /// @param Pid PID控制器实例
  56:usr/pid.c     **** /// @param error 
  57:usr/pid.c     **** /// @return 
  58:usr/pid.c     **** float Pid_clac(Pid_Typedef* Pid, float error)
  59:usr/pid.c     **** {
ARM GAS  /tmp/ccvfCoQR.s 			page 5


 177              		.loc 1 59 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		.loc 1 59 1 is_stmt 0 view .LVU52
 182 0000 10B5     		push	{r4, lr}
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 0002 2DED028B 		vpush.64	{d8}
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 16
 190              		.cfi_offset 80, -16
 191              		.cfi_offset 81, -12
 192 0006 0446     		mov	r4, r0
 193 0008 B0EE408A 		vmov.f32	s16, s0
  60:usr/pid.c     ****     // 计算两次循环中间的间隔时间
  61:usr/pid.c     ****     unsigned long timestamp_now = HAL_GetTick();
 194              		.loc 1 61 5 is_stmt 1 view .LVU53
 195              		.loc 1 61 35 is_stmt 0 view .LVU54
 196 000c FFF7FEFF 		bl	HAL_GetTick
 197              	.LVL7:
  62:usr/pid.c     ****     float Ts = (timestamp_now - Pid->timestamp_prev) * 1e-3f;
 198              		.loc 1 62 5 is_stmt 1 view .LVU55
 199              		.loc 1 62 36 is_stmt 0 view .LVU56
 200 0010 236A     		ldr	r3, [r4, #32]
 201              		.loc 1 62 31 view .LVU57
 202 0012 C31A     		subs	r3, r0, r3
 203 0014 07EE103A 		vmov	s14, r3	@ int
 204              		.loc 1 62 54 view .LVU58
 205 0018 B8EE477A 		vcvt.f32.u32	s14, s14
 206              		.loc 1 62 11 view .LVU59
 207 001c DFED4F7A 		vldr.32	s15, .L35
 208 0020 27EE277A 		vmul.f32	s14, s14, s15
 209              	.LVL8:
  63:usr/pid.c     ****     if(Ts <= 0 || Ts > 0.5f) Ts = 1e-3f;
 210              		.loc 1 63 5 is_stmt 1 view .LVU60
 211              		.loc 1 63 7 is_stmt 0 view .LVU61
 212 0024 B5EEC07A 		vcmpe.f32	s14, #0
 213 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 214 002c 09D9     		bls	.L22
 215              		.loc 1 63 16 discriminator 2 view .LVU62
 216 002e F6EE007A 		vmov.f32	s15, #5.0e-1
 217 0032 B4EEE77A 		vcmpe.f32	s14, s15
 218 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 219 003a 04DD     		ble	.L8
 220              		.loc 1 63 33 view .LVU63
 221 003c 9FED477A 		vldr.32	s14, .L35
 222              	.LVL9:
 223              		.loc 1 63 33 view .LVU64
 224 0040 01E0     		b	.L8
 225              	.LVL10:
 226              	.L22:
 227              		.loc 1 63 33 view .LVU65
 228 0042 9FED467A 		vldr.32	s14, .L35
 229              	.LVL11:
ARM GAS  /tmp/ccvfCoQR.s 			page 6


 230              	.L8:
  64:usr/pid.c     **** 
  65:usr/pid.c     ****     // P环
  66:usr/pid.c     ****     float proportional = Pid->P * error;
 231              		.loc 1 66 5 is_stmt 1 view .LVU66
 232              		.loc 1 66 29 is_stmt 0 view .LVU67
 233 0046 D4ED007A 		vldr.32	s15, [r4]
 234              		.loc 1 66 11 view .LVU68
 235 004a 67EE887A 		vmul.f32	s15, s15, s16
 236              	.LVL12:
  67:usr/pid.c     ****     // Tustin 散点积分（I环）
  68:usr/pid.c     ****     float integral = Pid->integral_prev + Pid->I*Ts*0.5f*(error + Pid->error_prev);
 237              		.loc 1 68 5 is_stmt 1 view .LVU69
 238              		.loc 1 68 25 is_stmt 0 view .LVU70
 239 004e D4ED076A 		vldr.32	s13, [r4, #28]
 240              		.loc 1 68 46 view .LVU71
 241 0052 94ED016A 		vldr.32	s12, [r4, #4]
 242              		.loc 1 68 49 view .LVU72
 243 0056 26EE076A 		vmul.f32	s12, s12, s14
 244              		.loc 1 68 52 view .LVU73
 245 005a F6EE005A 		vmov.f32	s11, #5.0e-1
 246 005e 26EE256A 		vmul.f32	s12, s12, s11
 247              		.loc 1 68 70 view .LVU74
 248 0062 D4ED055A 		vldr.32	s11, [r4, #20]
 249              		.loc 1 68 65 view .LVU75
 250 0066 75EE885A 		vadd.f32	s11, s11, s16
 251              		.loc 1 68 57 view .LVU76
 252 006a 26EE256A 		vmul.f32	s12, s12, s11
 253              		.loc 1 68 11 view .LVU77
 254 006e 76EE866A 		vadd.f32	s13, s13, s12
 255              	.LVL13:
  69:usr/pid.c     ****     integral = _constrain(integral, -Pid->limit, Pid->limit);
 256              		.loc 1 69 5 is_stmt 1 view .LVU78
 257              		.loc 1 69 16 is_stmt 0 view .LVU79
 258 0072 94ED046A 		vldr.32	s12, [r4, #16]
 259 0076 B1EE466A 		vneg.f32	s12, s12
 260 007a B4EEE66A 		vcmpe.f32	s12, s13
 261 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 262 0082 44DD     		ble	.L31
 263              		.loc 1 69 16 discriminator 1 view .LVU80
 264 0084 D4ED046A 		vldr.32	s13, [r4, #16]
 265              	.LVL14:
 266              		.loc 1 69 16 discriminator 1 view .LVU81
 267 0088 F1EE666A 		vneg.f32	s13, s13
 268              	.L11:
 269              	.LVL15:
  70:usr/pid.c     ****     // D环（微分环节）
  71:usr/pid.c     ****     float derivative = Pid->D*(error - Pid->error_prev)/Ts;
 270              		.loc 1 71 5 is_stmt 1 discriminator 8 view .LVU82
 271              		.loc 1 71 27 is_stmt 0 discriminator 8 view .LVU83
 272 008c 94ED026A 		vldr.32	s12, [r4, #8]
 273              		.loc 1 71 43 discriminator 8 view .LVU84
 274 0090 D4ED055A 		vldr.32	s11, [r4, #20]
 275              		.loc 1 71 38 discriminator 8 view .LVU85
 276 0094 78EE655A 		vsub.f32	s11, s16, s11
 277              		.loc 1 71 30 discriminator 8 view .LVU86
 278 0098 26EE256A 		vmul.f32	s12, s12, s11
ARM GAS  /tmp/ccvfCoQR.s 			page 7


 279              		.loc 1 71 11 discriminator 8 view .LVU87
 280 009c 86EE070A 		vdiv.f32	s0, s12, s14
 281              	.LVL16:
  72:usr/pid.c     **** 
  73:usr/pid.c     ****     // 将P,I,D三环的计算值加起来
  74:usr/pid.c     ****     float output = proportional + integral + derivative;
 282              		.loc 1 74 5 is_stmt 1 discriminator 8 view .LVU88
 283              		.loc 1 74 33 is_stmt 0 discriminator 8 view .LVU89
 284 00a0 76EEA77A 		vadd.f32	s15, s13, s15
 285              	.LVL17:
 286              		.loc 1 74 11 discriminator 8 view .LVU90
 287 00a4 37EE800A 		vadd.f32	s0, s15, s0
 288              	.LVL18:
  75:usr/pid.c     ****     output = _constrain(output, -Pid->limit, Pid->limit);
 289              		.loc 1 75 5 is_stmt 1 discriminator 8 view .LVU91
 290              		.loc 1 75 14 is_stmt 0 discriminator 8 view .LVU92
 291 00a8 D4ED047A 		vldr.32	s15, [r4, #16]
 292 00ac F1EE677A 		vneg.f32	s15, s15
 293 00b0 F4EEC07A 		vcmpe.f32	s15, s0
 294 00b4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 295 00b8 33DD     		ble	.L32
 296              		.loc 1 75 14 discriminator 1 view .LVU93
 297 00ba D4ED047A 		vldr.32	s15, [r4, #16]
 298 00be B1EE670A 		vneg.f32	s0, s15
 299              	.LVL19:
 300              	.L15:
  76:usr/pid.c     **** 
  77:usr/pid.c     ****     if(Pid->output_ramp > 0){
 301              		.loc 1 77 5 is_stmt 1 discriminator 8 view .LVU94
 302              		.loc 1 77 11 is_stmt 0 discriminator 8 view .LVU95
 303 00c2 D4ED037A 		vldr.32	s15, [r4, #12]
 304              		.loc 1 77 7 discriminator 8 view .LVU96
 305 00c6 F5EEC07A 		vcmpe.f32	s15, #0
 306 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 307 00ce 14DD     		ble	.L17
 308              	.LBB2:
  78:usr/pid.c     ****         // 对PID的变化速率进行限制
  79:usr/pid.c     ****         float output_rate = (output - Pid->output_prev)/Ts;
 309              		.loc 1 79 9 is_stmt 1 view .LVU97
 310              		.loc 1 79 42 is_stmt 0 view .LVU98
 311 00d0 D4ED067A 		vldr.32	s15, [r4, #24]
 312              		.loc 1 79 37 view .LVU99
 313 00d4 70EE677A 		vsub.f32	s15, s0, s15
 314              		.loc 1 79 15 view .LVU100
 315 00d8 87EE876A 		vdiv.f32	s12, s15, s14
 316              	.LVL20:
  80:usr/pid.c     ****         if (output_rate > Pid->output_ramp)
 317              		.loc 1 80 9 is_stmt 1 view .LVU101
 318              		.loc 1 80 30 is_stmt 0 view .LVU102
 319 00dc D4ED037A 		vldr.32	s15, [r4, #12]
 320              		.loc 1 80 12 view .LVU103
 321 00e0 F4EEC67A 		vcmpe.f32	s15, s12
 322 00e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 323 00e8 25D5     		bpl	.L33
  81:usr/pid.c     ****             output = Pid->output_prev + Pid->output_ramp*Ts;
 324              		.loc 1 81 13 is_stmt 1 view .LVU104
 325              		.loc 1 81 25 is_stmt 0 view .LVU105
ARM GAS  /tmp/ccvfCoQR.s 			page 8


 326 00ea D4ED067A 		vldr.32	s15, [r4, #24]
 327              		.loc 1 81 44 view .LVU106
 328 00ee 94ED030A 		vldr.32	s0, [r4, #12]
 329              	.LVL21:
 330              		.loc 1 81 57 view .LVU107
 331 00f2 20EE070A 		vmul.f32	s0, s0, s14
 332              		.loc 1 81 20 view .LVU108
 333 00f6 37EE800A 		vadd.f32	s0, s15, s0
 334              	.LVL22:
 335              	.L17:
 336              		.loc 1 81 20 view .LVU109
 337              	.LBE2:
  82:usr/pid.c     ****         else if (output_rate < -Pid->output_ramp)
  83:usr/pid.c     ****             output = Pid->output_prev - Pid->output_ramp*Ts;
  84:usr/pid.c     ****     }
  85:usr/pid.c     **** 
  86:usr/pid.c     ****     // 保存值（为了下一次循环）
  87:usr/pid.c     ****     Pid->integral_prev = integral;
 338              		.loc 1 87 5 is_stmt 1 view .LVU110
 339              		.loc 1 87 24 is_stmt 0 view .LVU111
 340 00fa C4ED076A 		vstr.32	s13, [r4, #28]
  88:usr/pid.c     ****     Pid->output_prev = output;
 341              		.loc 1 88 5 is_stmt 1 view .LVU112
 342              		.loc 1 88 22 is_stmt 0 view .LVU113
 343 00fe 84ED060A 		vstr.32	s0, [r4, #24]
  89:usr/pid.c     ****     Pid->error_prev = error;
 344              		.loc 1 89 5 is_stmt 1 view .LVU114
 345              		.loc 1 89 21 is_stmt 0 view .LVU115
 346 0102 84ED058A 		vstr.32	s16, [r4, #20]
  90:usr/pid.c     ****     Pid->timestamp_prev = timestamp_now;
 347              		.loc 1 90 5 is_stmt 1 view .LVU116
 348              		.loc 1 90 25 is_stmt 0 view .LVU117
 349 0106 2062     		str	r0, [r4, #32]
  91:usr/pid.c     ****     return output;
 350              		.loc 1 91 5 is_stmt 1 view .LVU118
  92:usr/pid.c     **** }
 351              		.loc 1 92 1 is_stmt 0 view .LVU119
 352 0108 BDEC028B 		vldm	sp!, {d8}
 353              	.LCFI5:
 354              		.cfi_remember_state
 355              		.cfi_restore 80
 356              		.cfi_restore 81
 357              		.cfi_def_cfa_offset 8
 358              	.LVL23:
 359              		.loc 1 92 1 view .LVU120
 360 010c 10BD     		pop	{r4, pc}
 361              	.LVL24:
 362              	.L31:
 363              	.LCFI6:
 364              		.cfi_restore_state
  69:usr/pid.c     ****     // D环（微分环节）
 365              		.loc 1 69 16 discriminator 2 view .LVU121
 366 010e 94ED046A 		vldr.32	s12, [r4, #16]
 367 0112 B4EEE66A 		vcmpe.f32	s12, s13
 368 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 369 011a B7D5     		bpl	.L11
  69:usr/pid.c     ****     // D环（微分环节）
ARM GAS  /tmp/ccvfCoQR.s 			page 9


 370              		.loc 1 69 16 discriminator 4 view .LVU122
 371 011c D4ED046A 		vldr.32	s13, [r4, #16]
 372              	.LVL25:
  69:usr/pid.c     ****     // D环（微分环节）
 373              		.loc 1 69 16 discriminator 4 view .LVU123
 374 0120 B4E7     		b	.L11
 375              	.LVL26:
 376              	.L32:
  75:usr/pid.c     **** 
 377              		.loc 1 75 14 discriminator 2 view .LVU124
 378 0122 D4ED047A 		vldr.32	s15, [r4, #16]
 379 0126 F4EEC07A 		vcmpe.f32	s15, s0
 380 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 381 012e C8D5     		bpl	.L15
  75:usr/pid.c     **** 
 382              		.loc 1 75 14 discriminator 4 view .LVU125
 383 0130 94ED040A 		vldr.32	s0, [r4, #16]
 384              	.LVL27:
  75:usr/pid.c     **** 
 385              		.loc 1 75 14 discriminator 4 view .LVU126
 386 0134 C5E7     		b	.L15
 387              	.LVL28:
 388              	.L33:
 389              	.LBB3:
  82:usr/pid.c     ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 390              		.loc 1 82 14 is_stmt 1 view .LVU127
  82:usr/pid.c     ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 391              		.loc 1 82 36 is_stmt 0 view .LVU128
 392 0136 D4ED037A 		vldr.32	s15, [r4, #12]
  82:usr/pid.c     ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 393              		.loc 1 82 32 view .LVU129
 394 013a F1EE677A 		vneg.f32	s15, s15
  82:usr/pid.c     ****             output = Pid->output_prev - Pid->output_ramp*Ts;
 395              		.loc 1 82 17 view .LVU130
 396 013e F4EEC67A 		vcmpe.f32	s15, s12
 397 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 398 0146 D8DD     		ble	.L17
  83:usr/pid.c     ****     }
 399              		.loc 1 83 13 is_stmt 1 view .LVU131
  83:usr/pid.c     ****     }
 400              		.loc 1 83 25 is_stmt 0 view .LVU132
 401 0148 D4ED067A 		vldr.32	s15, [r4, #24]
  83:usr/pid.c     ****     }
 402              		.loc 1 83 44 view .LVU133
 403 014c 94ED030A 		vldr.32	s0, [r4, #12]
 404              	.LVL29:
  83:usr/pid.c     ****     }
 405              		.loc 1 83 57 view .LVU134
 406 0150 20EE070A 		vmul.f32	s0, s0, s14
  83:usr/pid.c     ****     }
 407              		.loc 1 83 20 view .LVU135
 408 0154 37EEC00A 		vsub.f32	s0, s15, s0
 409              	.LVL30:
  83:usr/pid.c     ****     }
 410              		.loc 1 83 20 view .LVU136
 411 0158 CFE7     		b	.L17
 412              	.L36:
ARM GAS  /tmp/ccvfCoQR.s 			page 10


 413 015a 00BF     		.align	2
 414              	.L35:
 415 015c 6F12833A 		.word	981668463
 416              	.LBE3:
 417              		.cfi_endproc
 418              	.LFE226:
 420              		.text
 421              	.Letext0:
 422              		.file 2 "usr/pid.h"
 423              		.file 3 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccvfCoQR.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pid.c
     /tmp/ccvfCoQR.s:18     .text.Pid_Vel_Init:0000000000000000 $t
     /tmp/ccvfCoQR.s:26     .text.Pid_Vel_Init:0000000000000000 Pid_Vel_Init
     /tmp/ccvfCoQR.s:69     .text.Pid_Ang_Init:0000000000000000 $t
     /tmp/ccvfCoQR.s:76     .text.Pid_Ang_Init:0000000000000000 Pid_Ang_Init
     /tmp/ccvfCoQR.s:118    .text.Pid_Curr_Init:0000000000000000 $t
     /tmp/ccvfCoQR.s:125    .text.Pid_Curr_Init:0000000000000000 Pid_Curr_Init
     /tmp/ccvfCoQR.s:167    .text.Pid_clac:0000000000000000 $t
     /tmp/ccvfCoQR.s:174    .text.Pid_clac:0000000000000000 Pid_clac
     /tmp/ccvfCoQR.s:415    .text.Pid_clac:000000000000015c $d

UNDEFINED SYMBOLS
HAL_GetTick
