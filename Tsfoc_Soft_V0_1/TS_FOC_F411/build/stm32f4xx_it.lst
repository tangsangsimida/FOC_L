ARM GAS  /tmp/ccvf39yS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB220:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccvf39yS.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  61:Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  64:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  65:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim11;
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /**
  75:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Core/Src/stm32f4xx_it.c ****   */
  77:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  78:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 78 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccvf39yS.s 			page 3


  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 83 4 discriminator 1 view .LVU1
  84:Core/Src/stm32f4xx_it.c ****   {
  85:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 85 3 discriminator 1 view .LVU2
  83:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 83 10 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE220:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB221:
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c **** }
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c **** /**
  90:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Core/Src/stm32f4xx_it.c ****   */
  92:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  93:Core/Src/stm32f4xx_it.c **** {
  53              		.loc 1 93 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 97 3 discriminator 1 view .LVU5
  98:Core/Src/stm32f4xx_it.c ****   {
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****   }
  61              		.loc 1 101 3 discriminator 1 view .LVU6
  97:Core/Src/stm32f4xx_it.c ****   {
  62              		.loc 1 97 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE221:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
ARM GAS  /tmp/ccvf39yS.s 			page 4


  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB222:
 102:Core/Src/stm32f4xx_it.c **** }
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c **** /**
 105:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Core/Src/stm32f4xx_it.c ****   */
 107:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 108:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 108 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 112 3 discriminator 1 view .LVU9
 113:Core/Src/stm32f4xx_it.c ****   {
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 116 3 discriminator 1 view .LVU10
 112:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 112 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE222:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB223:
 117:Core/Src/stm32f4xx_it.c **** }
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c **** /**
 120:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 121:Core/Src/stm32f4xx_it.c ****   */
 122:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 123:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 123 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccvf39yS.s 			page 5


 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 127 3 discriminator 1 view .LVU13
 128:Core/Src/stm32f4xx_it.c ****   {
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 131 3 discriminator 1 view .LVU14
 127:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 127 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE223:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB224:
 132:Core/Src/stm32f4xx_it.c **** }
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c **** /**
 135:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Core/Src/stm32f4xx_it.c ****   */
 137:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 138:Core/Src/stm32f4xx_it.c **** {
 125              		.loc 1 138 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 142 3 discriminator 1 view .LVU17
 143:Core/Src/stm32f4xx_it.c ****   {
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 146 3 discriminator 1 view .LVU18
 142:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 142 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE224:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
ARM GAS  /tmp/ccvf39yS.s 			page 6


 145              		.fpu fpv4-sp-d16
 147              	SVC_Handler:
 148              	.LFB225:
 147:Core/Src/stm32f4xx_it.c **** }
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c **** /**
 150:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 151:Core/Src/stm32f4xx_it.c ****   */
 152:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 153:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 153 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** }
 154              		.loc 1 160 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE225:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB226:
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c **** /**
 163:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 164:Core/Src/stm32f4xx_it.c ****   */
 165:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 166:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 166 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 173:Core/Src/stm32f4xx_it.c **** }
 174              		.loc 1 173 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE226:
ARM GAS  /tmp/ccvf39yS.s 			page 7


 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	PendSV_Handler:
 188              	.LFB227:
 174:Core/Src/stm32f4xx_it.c **** 
 175:Core/Src/stm32f4xx_it.c **** /**
 176:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 177:Core/Src/stm32f4xx_it.c ****   */
 178:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 179:Core/Src/stm32f4xx_it.c **** {
 189              		.loc 1 179 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 186:Core/Src/stm32f4xx_it.c **** }
 194              		.loc 1 186 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE227:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SysTick_Handler:
 208              	.LFB228:
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c **** /**
 189:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 190:Core/Src/stm32f4xx_it.c ****   */
 191:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 192:Core/Src/stm32f4xx_it.c **** {
 209              		.loc 1 192 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccvf39yS.s 			page 8


 199:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 200:Core/Src/stm32f4xx_it.c **** }
 214              		.loc 1 200 1 view .LVU27
 215 0000 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE228:
 219              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 220              		.align	1
 221              		.global	DMA1_Stream0_IRQHandler
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	DMA1_Stream0_IRQHandler:
 228              	.LFB229:
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 203:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 204:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 205:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 206:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 207:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c **** /**
 210:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 211:Core/Src/stm32f4xx_it.c ****   */
 212:Core/Src/stm32f4xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 213:Core/Src/stm32f4xx_it.c **** {
 229              		.loc 1 213 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 08B5     		push	{r3, lr}
 234              	.LCFI0:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 238              		.loc 1 217 3 view .LVU29
 239 0002 0248     		ldr	r0, .L17
 240 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 241              	.LVL0:
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** }
 242              		.loc 1 221 1 is_stmt 0 view .LVU30
 243 0008 08BD     		pop	{r3, pc}
 244              	.L18:
 245 000a 00BF     		.align	2
 246              	.L17:
 247 000c 00000000 		.word	hdma_i2c1_rx
 248              		.cfi_endproc
 249              	.LFE229:
ARM GAS  /tmp/ccvf39yS.s 			page 9


 251              		.section	.text.ADC_IRQHandler,"ax",%progbits
 252              		.align	1
 253              		.global	ADC_IRQHandler
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	ADC_IRQHandler:
 260              	.LFB230:
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c **** /**
 224:Core/Src/stm32f4xx_it.c ****   * @brief This function handles ADC1 global interrupt.
 225:Core/Src/stm32f4xx_it.c ****   */
 226:Core/Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 227:Core/Src/stm32f4xx_it.c **** {
 261              		.loc 1 227 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI1:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 270              		.loc 1 231 3 view .LVU32
 271 0002 0248     		ldr	r0, .L21
 272 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 273              	.LVL1:
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** }
 274              		.loc 1 235 1 is_stmt 0 view .LVU33
 275 0008 08BD     		pop	{r3, pc}
 276              	.L22:
 277 000a 00BF     		.align	2
 278              	.L21:
 279 000c 00000000 		.word	hadc1
 280              		.cfi_endproc
 281              	.LFE230:
 283              		.section	.text.TIM1_TRG_COM_TIM11_IRQHandler,"ax",%progbits
 284              		.align	1
 285              		.global	TIM1_TRG_COM_TIM11_IRQHandler
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	TIM1_TRG_COM_TIM11_IRQHandler:
 292              	.LFB231:
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c **** /**
 238:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt
 239:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/ccvf39yS.s 			page 10


 240:Core/Src/stm32f4xx_it.c **** void TIM1_TRG_COM_TIM11_IRQHandler(void)
 241:Core/Src/stm32f4xx_it.c **** {
 293              		.loc 1 241 1 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 08B5     		push	{r3, lr}
 298              	.LCFI2:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 3, -8
 301              		.cfi_offset 14, -4
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
 245:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim11);
 302              		.loc 1 245 3 view .LVU35
 303 0002 0248     		ldr	r0, .L25
 304 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 305              	.LVL2:
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
 249:Core/Src/stm32f4xx_it.c **** }
 306              		.loc 1 249 1 is_stmt 0 view .LVU36
 307 0008 08BD     		pop	{r3, pc}
 308              	.L26:
 309 000a 00BF     		.align	2
 310              	.L25:
 311 000c 00000000 		.word	htim11
 312              		.cfi_endproc
 313              	.LFE231:
 315              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 316              		.align	1
 317              		.global	I2C1_EV_IRQHandler
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	I2C1_EV_IRQHandler:
 324              	.LFB232:
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c **** /**
 252:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 253:Core/Src/stm32f4xx_it.c ****   */
 254:Core/Src/stm32f4xx_it.c **** void I2C1_EV_IRQHandler(void)
 255:Core/Src/stm32f4xx_it.c **** {
 325              		.loc 1 255 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI3:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccvf39yS.s 			page 11


 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 259:Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 334              		.loc 1 259 3 view .LVU38
 335 0002 0248     		ldr	r0, .L29
 336 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 337              	.LVL3:
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 263:Core/Src/stm32f4xx_it.c **** }
 338              		.loc 1 263 1 is_stmt 0 view .LVU39
 339 0008 08BD     		pop	{r3, pc}
 340              	.L30:
 341 000a 00BF     		.align	2
 342              	.L29:
 343 000c 00000000 		.word	hi2c1
 344              		.cfi_endproc
 345              	.LFE232:
 347              		.section	.text.USART1_IRQHandler,"ax",%progbits
 348              		.align	1
 349              		.global	USART1_IRQHandler
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu fpv4-sp-d16
 355              	USART1_IRQHandler:
 356              	.LFB233:
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c **** /**
 266:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 267:Core/Src/stm32f4xx_it.c ****   */
 268:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 269:Core/Src/stm32f4xx_it.c **** {
 357              		.loc 1 269 1 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 08B5     		push	{r3, lr}
 362              	.LCFI4:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 3, -8
 365              		.cfi_offset 14, -4
 270:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 271:Core/Src/stm32f4xx_it.c **** 
 272:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 273:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 366              		.loc 1 273 3 view .LVU41
 367 0002 0248     		ldr	r0, .L33
 368 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 369              	.LVL4:
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 277:Core/Src/stm32f4xx_it.c **** }
 370              		.loc 1 277 1 is_stmt 0 view .LVU42
 371 0008 08BD     		pop	{r3, pc}
 372              	.L34:
ARM GAS  /tmp/ccvf39yS.s 			page 12


 373 000a 00BF     		.align	2
 374              	.L33:
 375 000c 00000000 		.word	huart1
 376              		.cfi_endproc
 377              	.LFE233:
 379              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 380              		.align	1
 381              		.global	DMA2_Stream0_IRQHandler
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	DMA2_Stream0_IRQHandler:
 388              	.LFB234:
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c **** /**
 280:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 281:Core/Src/stm32f4xx_it.c ****   */
 282:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 283:Core/Src/stm32f4xx_it.c **** {
 389              		.loc 1 283 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393 0000 08B5     		push	{r3, lr}
 394              	.LCFI5:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 3, -8
 397              		.cfi_offset 14, -4
 284:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 285:Core/Src/stm32f4xx_it.c **** 
 286:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 287:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 398              		.loc 1 287 3 view .LVU44
 399 0002 0248     		ldr	r0, .L37
 400 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 401              	.LVL5:
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 289:Core/Src/stm32f4xx_it.c **** 
 290:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 291:Core/Src/stm32f4xx_it.c **** }
 402              		.loc 1 291 1 is_stmt 0 view .LVU45
 403 0008 08BD     		pop	{r3, pc}
 404              	.L38:
 405 000a 00BF     		.align	2
 406              	.L37:
 407 000c 00000000 		.word	hdma_spi1_rx
 408              		.cfi_endproc
 409              	.LFE234:
 411              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 412              		.align	1
 413              		.global	DMA2_Stream2_IRQHandler
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	DMA2_Stream2_IRQHandler:
ARM GAS  /tmp/ccvf39yS.s 			page 13


 420              	.LFB235:
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c **** /**
 294:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 295:Core/Src/stm32f4xx_it.c ****   */
 296:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 297:Core/Src/stm32f4xx_it.c **** {
 421              		.loc 1 297 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 08B5     		push	{r3, lr}
 426              	.LCFI6:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 3, -8
 429              		.cfi_offset 14, -4
 298:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 299:Core/Src/stm32f4xx_it.c **** 
 300:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 301:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 430              		.loc 1 301 3 view .LVU47
 431 0002 0248     		ldr	r0, .L41
 432 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 433              	.LVL6:
 302:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 303:Core/Src/stm32f4xx_it.c **** 
 304:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 305:Core/Src/stm32f4xx_it.c **** }
 434              		.loc 1 305 1 is_stmt 0 view .LVU48
 435 0008 08BD     		pop	{r3, pc}
 436              	.L42:
 437 000a 00BF     		.align	2
 438              	.L41:
 439 000c 00000000 		.word	hdma_usart1_rx
 440              		.cfi_endproc
 441              	.LFE235:
 443              		.section	.text.DMA2_Stream4_IRQHandler,"ax",%progbits
 444              		.align	1
 445              		.global	DMA2_Stream4_IRQHandler
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	DMA2_Stream4_IRQHandler:
 452              	.LFB236:
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c **** /**
 308:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream4 global interrupt.
 309:Core/Src/stm32f4xx_it.c ****   */
 310:Core/Src/stm32f4xx_it.c **** void DMA2_Stream4_IRQHandler(void)
 311:Core/Src/stm32f4xx_it.c **** {
 453              		.loc 1 311 1 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457 0000 08B5     		push	{r3, lr}
 458              	.LCFI7:
ARM GAS  /tmp/ccvf39yS.s 			page 14


 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 3, -8
 461              		.cfi_offset 14, -4
 312:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream4_IRQn 0 */
 313:Core/Src/stm32f4xx_it.c **** 
 314:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream4_IRQn 0 */
 315:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 462              		.loc 1 315 3 view .LVU50
 463 0002 0248     		ldr	r0, .L45
 464 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 465              	.LVL7:
 316:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream4_IRQn 1 */
 317:Core/Src/stm32f4xx_it.c **** 
 318:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream4_IRQn 1 */
 319:Core/Src/stm32f4xx_it.c **** }
 466              		.loc 1 319 1 is_stmt 0 view .LVU51
 467 0008 08BD     		pop	{r3, pc}
 468              	.L46:
 469 000a 00BF     		.align	2
 470              	.L45:
 471 000c 00000000 		.word	hdma_adc1
 472              		.cfi_endproc
 473              	.LFE236:
 475              		.text
 476              	.Letext0:
 477              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 478              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 479              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 480              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 481              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 482              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 483              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 484              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 485              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccvf39yS.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccvf39yS.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccvf39yS.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccvf39yS.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccvf39yS.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccvf39yS.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccvf39yS.s:140    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:147    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccvf39yS.s:160    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccvf39yS.s:180    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:187    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccvf39yS.s:200    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccvf39yS.s:207    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccvf39yS.s:220    .text.DMA1_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:227    .text.DMA1_Stream0_IRQHandler:0000000000000000 DMA1_Stream0_IRQHandler
     /tmp/ccvf39yS.s:247    .text.DMA1_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:252    .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:259    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/ccvf39yS.s:279    .text.ADC_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:284    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:291    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000000 TIM1_TRG_COM_TIM11_IRQHandler
     /tmp/ccvf39yS.s:311    .text.TIM1_TRG_COM_TIM11_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:316    .text.I2C1_EV_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:323    .text.I2C1_EV_IRQHandler:0000000000000000 I2C1_EV_IRQHandler
     /tmp/ccvf39yS.s:343    .text.I2C1_EV_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:348    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:355    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccvf39yS.s:375    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:380    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:387    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccvf39yS.s:407    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:412    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:419    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccvf39yS.s:439    .text.DMA2_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccvf39yS.s:444    .text.DMA2_Stream4_IRQHandler:0000000000000000 $t
     /tmp/ccvf39yS.s:451    .text.DMA2_Stream4_IRQHandler:0000000000000000 DMA2_Stream4_IRQHandler
     /tmp/ccvf39yS.s:471    .text.DMA2_Stream4_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_i2c1_rx
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
htim11
HAL_I2C_EV_IRQHandler
hi2c1
HAL_UART_IRQHandler
huart1
hdma_spi1_rx
ARM GAS  /tmp/ccvf39yS.s 			page 16


hdma_usart1_rx
hdma_adc1
